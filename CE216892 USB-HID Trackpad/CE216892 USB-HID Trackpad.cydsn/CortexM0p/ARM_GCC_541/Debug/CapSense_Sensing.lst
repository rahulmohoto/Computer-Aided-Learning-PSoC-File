ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
  24              	CapSense_SsSetWidgetSenseClkSrc:
  25              	.LFB20:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 2


  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_RESOLUTION        (12u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ          (1500u)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_LEVEL                     (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_UNITS                     (1000u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CP_MAX                        (69000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** /* HW IP Block limitation */
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 3


  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 4


 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 177:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 181:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 182:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 184:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 195:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 199:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 202:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 5


 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 204:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_IDAC_GAIN_TABLE_STRUCT const CapSense_idacGainTable[CapSense_IDAC_GAIN_NUMBER] = CapSense_
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or Widget
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *  setup is made. The critical section (i.e. disable global interrupt)
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the lower level SetupWidgetExt() or ConnectSns() functions
 258:Generated_Source\PSoC4/CapSense_Sensing.c ****         and not disconnected.
 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 6


 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 284:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 288:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 298:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 301:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 306:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 309:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 316:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 7


 317:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 341:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 367:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 371:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 8


 374:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 400:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 401:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 429:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 9


 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 432:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 448:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 453:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 477:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 479:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidgetExt
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 487:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 10


 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs extended initialization for the specified widget and also performs
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for a specific sensor in the widget. This function
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requires using the CapSense_ScanExt() function to initiate a scan.
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does the same as CapSense_SetupWidget() and also
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *  does the following tasks:
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Connects the first sensor of the widget.
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Configures the CSD HW block to perform a scan of the specified sensor.
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Once this function is called to initialize a widget and a sensor, the
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function is called to scan the sensor.
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for scanning the specific sensor in the specific
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Configuration header file defined as CapSense_<WidgetName>_WDGT_ID.
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorId
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 518:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and firmware initialization required for scanning a specific sensor in a
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specific widget.
 520:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the sensor ID within a specified widget can be found in the
 521:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 522:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 524:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 525:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 527:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 528:Generated_Source\PSoC4/CapSense_Sensing.c **** *    disabled
 529:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 530:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 531:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 532:Generated_Source\PSoC4/CapSense_Sensing.c **** *    other spurious error occurred.
 533:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 534:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 535:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidgetExt(uint32 widgetId, uint32 sensorId)
 536:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 544:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 11


 545:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 547:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 553:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 559:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 560:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 562:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidgetExt(widgetId, sensorId);
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidgetExt(widgetId, sensorId);
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 582:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 584:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidgetExt(widgetId, sensorId);
 585:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 586:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 587:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 588:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 589:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 590:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 591:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 592:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 593:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanExt
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 12


 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Starts a conversion on the pre-configured sensor. This function requires
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() function to set up the a
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs single scanning of one sensor in the widget configured
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by the CapSense_SetupWidgetExt() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor must be preconfigured by using the
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() API prior to calling this function.
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by using the CapSense_ScanExt() function. In this case, calling
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() is not required every time before the
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function. If a previous scan was triggered in
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  description for more details), the sensor must be preconfigured again by
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() API prior to calling the
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  If disconnection of the sensors is required after calling
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt(), the CapSense_CSDDisconnectSns() or
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_CSXDisconnectTx() or CapSense_CSXDisconnectRx()
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  functions can be used.
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanExt(void)
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 643:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 646:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 647:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 649:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScanExt();
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 658:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 13


 659:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScanExt();
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScanExt();
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 676:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 677:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 680:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 682:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 685:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 686:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 688:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 689:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 690:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 694:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 695:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 698:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 699:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 700:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 701:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 704:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 705:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 706:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 707:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 709:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 710:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 715:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 14


 716:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 717:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 735:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 754:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 772:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 15


 773:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 774:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 778:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 779:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 780:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 782:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 785:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 786:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 788:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 791:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 792:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 795:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 796:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 797:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 798:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 800:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 804:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 810:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 811:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 812:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 813:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 814:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 815:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 816:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 817:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 818:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 819:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 821:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 822:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 823:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 824:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 827:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 828:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 829:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 16


 830:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 832:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 833:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx or Lx signal is routed to the sensor
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 837:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 838:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 839:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 877:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 880:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 881:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 17


 887:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 889:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 893:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 895:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 896:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 897:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 901:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 910:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 919:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 932:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 936:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 943:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 18


 944:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN))
 957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 newRegValue;
 959:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)) */
 966:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK, 0u);
 969:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK, 0u);
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 981:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 982:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 983:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 988:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 989:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 990:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 995:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 996:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 997:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 998:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 999:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1000:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 19


1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1010:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1013:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the Сomponent settings for operation in a specified
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensing mode.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Releasing the CSD HW block.
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnecting external capacitors.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Setting new mode.
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  4. Configuring HW to the new sensing mode.
1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 20


1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1066:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
1068:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differs to the current one. Disable the current mode */
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1107:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1108:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
1111:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1112:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
1114:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 21


1115:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1116:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
1117:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
1118:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
1119:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1120:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
1122:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1137:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1142:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1144:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetAllIOsState
1146:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1147:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1148:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1149:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
1150:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1151:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1152:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
1153:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1154:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
1155:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1156:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1157:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
1158:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1160:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1162:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetAllIOsState(uint32 state)
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 22


1172:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinPcVal;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinHsiomVal;
1174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpPcDrRegValue;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpHsiomRegValue;
1177:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *snsIoPtr;
1179:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(state)
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1182:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_GROUND:
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1185:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1186:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_HIGHZ:
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1189:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1190:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_SHIELD:
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1194:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
1195:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1196:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1197:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1198:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     snsIoPtr = &CapSense_ioList[0u];
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1204:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue = CY_GET_REG32 (snsIoPtr->hsiomPtr);
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
1208:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->pcPtr);
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
1213:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue |=  (newPinHsiomVal << snsIoPtr->hsiomShift);
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->drPtr);
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
1220:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1222:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1224:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****         snsIoPtr++;
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1227:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSD_EN) &&\
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 23


1229:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****          (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDSetShieldElectrodesState(state);
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1233:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1248:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1252:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1254:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1255:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1257:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1259:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1260:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1261:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1262:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1263:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1271:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1272:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1273:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1274:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1275:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1277:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1278:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1279:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1281:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1282:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1283:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1285:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 24


1286:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1287:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1289:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1292:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1294:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1299:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1300:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1302:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1307:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1308:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1309:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1310:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1312:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1314:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1315:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1317:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1325:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1329:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1331:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1342:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 25


1343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1361:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1363:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1365:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1366:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1367:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1368:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1371:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1372:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1373:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1388:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1389:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1391:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1392:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1393:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1394:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1397:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1398:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1399:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 26


1400:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1401:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1403:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1404:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1405:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1406:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1407:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1411:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1412:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1414:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1415:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1416:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1418:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1424:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1443:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1445:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1456:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 27


1457:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1458:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1463:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1465:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1466:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1467:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1468:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1470:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1472:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1475:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1476:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1477:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1479:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1498:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1501:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1512:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1513:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 28


1514:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1518:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1531:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1557:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1558:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1559:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1560:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1561:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1562:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1563:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1564:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1565:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1566:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1567:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1569:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 29


1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1577:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1578:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter.
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 30


1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_MANY_WIDGET_METHODS_EN)
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN)
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_ISX_E ==
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN) */
1663:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                        calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUN
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1673:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1684:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 31


1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_L
1690:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1736:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 32


1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1749:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTuneWidget
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation for a desired widget.
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of a desired widget.
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTuneWidget(uint32 widgetId)
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 inputSnsClk;
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDiv;
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDivTmp;
1788:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxRaw = 0u;
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxIdacComp = 0u;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpSnsId = 0u;
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpRowSnsId = 0u;
1798:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 33


1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find input of sensor clock frequency */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = ((uint32)CYDEV_BCLK__HFCLK__KHZ / (uint32)CapSense_dsRam.modCsdClk);
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based devices.
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for PSoC 4100 and PSoC 4200
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****                device families.
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_dsRam.modCsdClk;
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >> CapSense_FLIP_FLOP
1824:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based device except PSoC 4100 and PSoC 4200 device families.
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Minimum value of SnsClk divider required to ensure the CSD HW block
1832:Generated_Source\PSoC4/CapSense_Sensing.c ****          * operation in allowed frequency range.
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp = inputSnsClk * CapSense_AUTOTUNE_CAL_UNITS;
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (minSnsClkDiv < minSnsClkDivTmp)
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = minSnsClkDivTmp;
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDiv = (minSnsClkDiv + (CapSense_AUTOTUNE_CAL_UNITS - 1u)) / CapSense_AUTOTUNE_CAL_
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Make divider even */
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (0u != (minSnsClkDiv & 0x01u))
1846:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv++;
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize auto-tuning configuration structure */
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (uint16)inputSnsClk;
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 34


1856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting maximum sensor Cp
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = CapSense_AUTOTUNE_CALIBRATION_RESOLUTION;
1865:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ);
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1868:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1873:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1876:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find raw count and IDAC of a sensor with maximum Cp */
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxIdacComp < ptrRamSensor->idacComp[0u])
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxIdacComp = ptrRamSensor->idacComp[0u];
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxRaw < ptrRamSensor->raw[0u])
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamSensor++;
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Update auto-tuning configuration structure */
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find sensor Cp and optimum sense clock value */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
1912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 35


1913:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Increase sensor clock divider to valid value */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(ptrRamWidget->snsClk < minSnsClkDiv)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->snsClk <<= 1u;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Do the same for row for touchpad or matrix buttons widgets */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find a sensor with maximum Cp */
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxRaw = 0u;
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxIdacComp = 0u;
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNumSns; sn
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxIdacComp < ptrRamSensor->idacComp[0u])
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxIdacComp = ptrRamSensor->idacComp[0u];
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxRaw < ptrRamSensor->raw[0u])
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamSensor++;
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure auto-tuning configuration structure */
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1952:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Save maximum sensor Cp and corresponding sensor Id */
1957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (autoTuneConfig.sensorCap < maxCp)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.sensorCap = maxCp;
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxCpSnsId = maxCpRowSnsId;
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1962:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Increase sensor clock divider to valid value */
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while(ptrRamWidget->rowSnsClk < minSnsClkDiv)
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamWidget->rowSnsClk <<= 1u;
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1969:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 36


1970:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check tuning results */
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_AUTOTUNE_CP_MAX < maxCp)
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneStatus = CYRET_BAD_DATA;
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined sense frequenc
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1989:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxCpSnsId >= ptrFlashWidget->numCols)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find resolution */
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune widget sensitivity */
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetWidgetSenseClkSrc(widgetId, ptrRamWidget);
2014:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined resolution */
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneStatus |= CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(widgetId);
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2024:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2026:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 37


2027:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation.
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2051:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune each CSD widget */
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_SsAutoTuneWidget(wdgtIndex);
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
2064:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2066:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2083:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 38


2084:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
2091:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
2104:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
2130:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
2140:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 39


2141:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
2143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2144:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2169:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2170:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2178:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
2179:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2181:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
2183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2184:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2196:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 40


2198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2220:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 41


2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2259:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2262:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2281:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2289:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 42


2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2368:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 43


2369:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2370:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2371:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2381:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2382:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2383:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2384:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2385:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2390:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2391:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2404:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2408:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2412:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 44


2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2435:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2440:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2442:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2444:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2446:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2447:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2448:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2449:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2450:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2451:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2452:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2453:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2454:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2455:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2456:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2457:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
  27              		.loc 1 2458 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2459:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2460:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2462:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2463:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2464:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2465:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2466:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2467:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2469:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2470:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2472:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2474:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 45


2477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2498:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
  33              		.loc 1 2499 0
  34 0000 0023     		movs	r3, #0
  35 0002 0B74     		strb	r3, [r1, #16]
2500:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
  36              		.loc 1 2502 0
  37 0004 3433     		adds	r3, r3, #52
  38 0006 5843     		muls	r0, r3
  39              	.LVL1:
  40 0008 044B     		ldr	r3, .L3
  41 000a 1818     		adds	r0, r3, r0
  42 000c 837E     		ldrb	r3, [r0, #26]
  43 000e 043B     		subs	r3, r3, #4
  44 0010 DBB2     		uxtb	r3, r3
  45 0012 012B     		cmp	r3, #1
  46 0014 01D8     		bhi	.L1
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 46


2520:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
  47              		.loc 1 2531 0
  48 0016 0023     		movs	r3, #0
  49 0018 4B74     		strb	r3, [r1, #17]
  50              	.L1:
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
  51              		.loc 1 2534 0
  52              		@ sp needed
  53 001a 7047     		bx	lr
  54              	.L4:
  55              		.align	2
  56              	.L3:
  57 001c 00000000 		.word	CapSense_dsFlash
  58              		.cfi_endproc
  59              	.LFE20:
  60              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
  61              		.section	.text.CapSense_IsBusy,"ax",%progbits
  62              		.align	2
  63              		.global	CapSense_IsBusy
  64              		.code	16
  65              		.thumb_func
  66              		.type	CapSense_IsBusy, %function
  67              	CapSense_IsBusy:
  68              	.LFB1:
 237:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
  69              		.loc 1 237 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
  74              		.loc 1 238 0
  75 0000 024B     		ldr	r3, .L6
  76 0002 DB68     		ldr	r3, [r3, #12]
  77 0004 8020     		movs	r0, #128
  78 0006 1840     		ands	r0, r3
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  79              		.loc 1 239 0
  80              		@ sp needed
  81 0008 7047     		bx	lr
  82              	.L7:
  83 000a C046     		.align	2
  84              	.L6:
  85 000c 00000000 		.word	CapSense_dsRam
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 47


  86              		.cfi_endproc
  87              	.LFE1:
  88              		.size	CapSense_IsBusy, .-CapSense_IsBusy
  89              		.section	.text.CapSense_SetupWidget,"ax",%progbits
  90              		.align	2
  91              		.global	CapSense_SetupWidget
  92              		.code	16
  93              		.thumb_func
  94              		.type	CapSense_SetupWidget, %function
  95              	CapSense_SetupWidget:
  96              	.LFB2:
 283:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
  97              		.loc 1 283 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              	.LVL2:
 102 0000 10B5     		push	{r4, lr}
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 4, -8
 105              		.cfi_offset 14, -4
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 106              		.loc 1 286 0
 107 0002 0E4B     		ldr	r3, .L14
 108 0004 DB68     		ldr	r3, [r3, #12]
 109 0006 DB03     		lsls	r3, r3, #15
 110 0008 0DD4     		bmi	.L11
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 111              		.loc 1 296 0
 112 000a 0328     		cmp	r0, #3
 113 000c 0DD8     		bhi	.L12
 297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 114              		.loc 1 297 0 discriminator 1
 115 000e 4309     		lsrs	r3, r0, #5
 116 0010 0433     		adds	r3, r3, #4
 117 0012 9B00     		lsls	r3, r3, #2
 118 0014 094A     		ldr	r2, .L14
 119 0016 9B58     		ldr	r3, [r3, r2]
 120 0018 1F22     		movs	r2, #31
 121 001a 0240     		ands	r2, r0
 122 001c D340     		lsrs	r3, r3, r2
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 123              		.loc 1 296 0 discriminator 1
 124 001e DB07     		lsls	r3, r3, #31
 125 0020 05D4     		bmi	.L13
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 126              		.loc 1 304 0
 127 0022 0124     		movs	r4, #1
 128 0024 04E0     		b	.L9
 129              	.L11:
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 130              		.loc 1 289 0
 131 0026 1124     		movs	r4, #17
 132 0028 02E0     		b	.L9
 133              	.L12:
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 134              		.loc 1 304 0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 48


 135 002a 0124     		movs	r4, #1
 136 002c 00E0     		b	.L9
 137              	.L13:
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 138              		.loc 1 300 0
 139 002e 0024     		movs	r4, #0
 140              	.L9:
 141              	.LVL3:
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 142              		.loc 1 311 0
 143 0030 002C     		cmp	r4, #0
 144 0032 01D1     		bne	.L10
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 145              		.loc 1 324 0
 146 0034 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 147              	.LVL4:
 148              	.L10:
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 149              		.loc 1 340 0
 150 0038 2000     		movs	r0, r4
 151              		@ sp needed
 152              	.LVL5:
 153 003a 10BD     		pop	{r4, pc}
 154              	.L15:
 155              		.align	2
 156              	.L14:
 157 003c 00000000 		.word	CapSense_dsRam
 158              		.cfi_endproc
 159              	.LFE2:
 160              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 161              		.section	.text.CapSense_Scan,"ax",%progbits
 162              		.align	2
 163              		.global	CapSense_Scan
 164              		.code	16
 165              		.thumb_func
 166              		.type	CapSense_Scan, %function
 167              	CapSense_Scan:
 168              	.LFB3:
 366:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 169              		.loc 1 366 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 10B5     		push	{r4, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 4, -8
 176              		.cfi_offset 14, -4
 177              	.LVL6:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 178              		.loc 1 369 0
 179 0002 084B     		ldr	r3, .L22
 180 0004 DB68     		ldr	r3, [r3, #12]
 181 0006 DB03     		lsls	r3, r3, #15
 182 0008 07D4     		bmi	.L19
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 183              		.loc 1 376 0
 184 000a 074B     		ldr	r3, .L22+4
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 49


 185 000c 1B78     		ldrb	r3, [r3]
 186 000e 012B     		cmp	r3, #1
 187 0010 05D1     		bne	.L21
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 188              		.loc 1 385 0
 189 0012 FFF7FEFF 		bl	CapSense_CSDScan
 190              	.LVL7:
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 191              		.loc 1 367 0
 192 0016 0020     		movs	r0, #0
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 193              		.loc 1 386 0
 194 0018 03E0     		b	.L17
 195              	.L19:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 196              		.loc 1 372 0
 197 001a 1120     		movs	r0, #17
 198 001c 01E0     		b	.L17
 199              	.L21:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 200              		.loc 1 394 0
 201 001e 0120     		movs	r0, #1
 202 0020 4042     		rsbs	r0, r0, #0
 203              	.L17:
 204              	.LVL8:
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 205              		.loc 1 399 0
 206              		@ sp needed
 207 0022 10BD     		pop	{r4, pc}
 208              	.L23:
 209              		.align	2
 210              	.L22:
 211 0024 00000000 		.word	CapSense_dsRam
 212 0028 00000000 		.word	.LANCHOR0
 213              		.cfi_endproc
 214              	.LFE3:
 215              		.size	CapSense_Scan, .-CapSense_Scan
 216              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 217              		.align	2
 218              		.global	CapSense_ScanAllWidgets
 219              		.code	16
 220              		.thumb_func
 221              		.type	CapSense_ScanAllWidgets, %function
 222              	CapSense_ScanAllWidgets:
 223              	.LFB4:
 428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 224              		.loc 1 428 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 10B5     		push	{r4, lr}
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 4, -8
 231              		.cfi_offset 14, -4
 232              	.LVL9:
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 233              		.loc 1 433 0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 50


 234 0002 0F4B     		ldr	r3, .L32
 235 0004 DB68     		ldr	r3, [r3, #12]
 236 0006 1B06     		lsls	r3, r3, #24
 237 0008 18D4     		bmi	.L31
 238 000a 0024     		movs	r4, #0
 239 000c 0120     		movs	r0, #1
 240 000e 4042     		rsbs	r0, r0, #0
 241 0010 11E0     		b	.L26
 242              	.LVL10:
 243              	.L30:
 449:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 244              		.loc 1 449 0
 245 0012 2000     		movs	r0, r4
 246              	.LVL11:
 247 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 248              	.LVL12:
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 249              		.loc 1 451 0
 250 0018 0028     		cmp	r0, #0
 251 001a 0BD1     		bne	.L27
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 252              		.loc 1 455 0
 253 001c 022C     		cmp	r4, #2
 254 001e 03D8     		bhi	.L28
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 255              		.loc 1 458 0
 256 0020 0122     		movs	r2, #1
 257 0022 084B     		ldr	r3, .L32+4
 258 0024 5A70     		strb	r2, [r3, #1]
 259 0026 02E0     		b	.L29
 260              	.L28:
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 261              		.loc 1 463 0
 262 0028 0022     		movs	r2, #0
 263 002a 064B     		ldr	r3, .L32+4
 264 002c 5A70     		strb	r2, [r3, #1]
 265              	.L29:
 473:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 266              		.loc 1 473 0
 267 002e FFF7FEFF 		bl	CapSense_Scan
 268              	.LVL13:
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 269              		.loc 1 475 0
 270 0032 04E0     		b	.L25
 271              	.L27:
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 272              		.loc 1 446 0
 273 0034 0134     		adds	r4, r4, #1
 274              	.LVL14:
 275              	.L26:
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 276              		.loc 1 444 0 discriminator 1
 277 0036 032C     		cmp	r4, #3
 278 0038 EBD9     		bls	.L30
 279 003a 00E0     		b	.L25
 280              	.LVL15:
 281              	.L31:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 51


 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 282              		.loc 1 436 0
 283 003c 1120     		movs	r0, #17
 284              	.LVL16:
 285              	.L25:
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 286              		.loc 1 481 0
 287              		@ sp needed
 288 003e 10BD     		pop	{r4, pc}
 289              	.L33:
 290              		.align	2
 291              	.L32:
 292 0040 00000000 		.word	CapSense_dsRam
 293 0044 00000000 		.word	.LANCHOR0
 294              		.cfi_endproc
 295              	.LFE4:
 296              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 297              		.section	.text.CapSense_SetupWidgetExt,"ax",%progbits
 298              		.align	2
 299              		.global	CapSense_SetupWidgetExt
 300              		.code	16
 301              		.thumb_func
 302              		.type	CapSense_SetupWidgetExt, %function
 303              	CapSense_SetupWidgetExt:
 304              	.LFB5:
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 305              		.loc 1 536 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              	.LVL17:
 310 0000 10B5     		push	{r4, lr}
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 4, -8
 313              		.cfi_offset 14, -4
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 314              		.loc 1 539 0
 315 0002 134B     		ldr	r3, .L41
 316 0004 DB68     		ldr	r3, [r3, #12]
 317 0006 DB03     		lsls	r3, r3, #15
 318 0008 14D4     		bmi	.L37
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 319              		.loc 1 549 0
 320 000a 0328     		cmp	r0, #3
 321 000c 14D8     		bhi	.L38
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 322              		.loc 1 550 0 discriminator 1
 323 000e 4309     		lsrs	r3, r0, #5
 324 0010 0433     		adds	r3, r3, #4
 325 0012 9B00     		lsls	r3, r3, #2
 326 0014 0E4A     		ldr	r2, .L41
 327 0016 9B58     		ldr	r3, [r3, r2]
 328 0018 1F22     		movs	r2, #31
 329 001a 0240     		ands	r2, r0
 330 001c D340     		lsrs	r3, r3, r2
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 331              		.loc 1 549 0 discriminator 1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 52


 332 001e DB07     		lsls	r3, r3, #31
 333 0020 0CD5     		bpl	.L39
 551:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 334              		.loc 1 551 0
 335 0022 3423     		movs	r3, #52
 336 0024 4343     		muls	r3, r0
 337 0026 0B4A     		ldr	r2, .L41+4
 338 0028 D318     		adds	r3, r2, r3
 339 002a 1B8B     		ldrh	r3, [r3, #24]
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 340              		.loc 1 550 0
 341 002c 8B42     		cmp	r3, r1
 342 002e 07D8     		bhi	.L40
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 343              		.loc 1 558 0
 344 0030 0124     		movs	r4, #1
 345 0032 06E0     		b	.L35
 346              	.L37:
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 347              		.loc 1 542 0
 348 0034 1124     		movs	r4, #17
 349 0036 04E0     		b	.L35
 350              	.L38:
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 351              		.loc 1 558 0
 352 0038 0124     		movs	r4, #1
 353 003a 02E0     		b	.L35
 354              	.L39:
 355 003c 0124     		movs	r4, #1
 356 003e 00E0     		b	.L35
 357              	.L40:
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 358              		.loc 1 554 0
 359 0040 0024     		movs	r4, #0
 360              	.L35:
 361              	.LVL18:
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 362              		.loc 1 565 0
 363 0042 002C     		cmp	r4, #0
 364 0044 01D1     		bne	.L36
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 365              		.loc 1 578 0
 366 0046 FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 367              	.LVL19:
 368              	.L36:
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 369              		.loc 1 594 0
 370 004a 2000     		movs	r0, r4
 371              		@ sp needed
 372              	.LVL20:
 373 004c 10BD     		pop	{r4, pc}
 374              	.L42:
 375 004e C046     		.align	2
 376              	.L41:
 377 0050 00000000 		.word	CapSense_dsRam
 378 0054 00000000 		.word	CapSense_dsFlash
 379              		.cfi_endproc
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 53


 380              	.LFE5:
 381              		.size	CapSense_SetupWidgetExt, .-CapSense_SetupWidgetExt
 382              		.section	.text.CapSense_ScanExt,"ax",%progbits
 383              		.align	2
 384              		.global	CapSense_ScanExt
 385              		.code	16
 386              		.thumb_func
 387              		.type	CapSense_ScanExt, %function
 388              	CapSense_ScanExt:
 389              	.LFB6:
 642:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 390              		.loc 1 642 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 10B5     		push	{r4, lr}
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 4, -8
 397              		.cfi_offset 14, -4
 398              	.LVL21:
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 399              		.loc 1 645 0
 400 0002 084B     		ldr	r3, .L49
 401 0004 DB68     		ldr	r3, [r3, #12]
 402 0006 DB03     		lsls	r3, r3, #15
 403 0008 07D4     		bmi	.L46
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 404              		.loc 1 652 0
 405 000a 074B     		ldr	r3, .L49+4
 406 000c 1B78     		ldrb	r3, [r3]
 407 000e 012B     		cmp	r3, #1
 408 0010 05D1     		bne	.L48
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 409              		.loc 1 661 0
 410 0012 FFF7FEFF 		bl	CapSense_CSDScanExt
 411              	.LVL22:
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 412              		.loc 1 643 0
 413 0016 0020     		movs	r0, #0
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 414              		.loc 1 662 0
 415 0018 03E0     		b	.L44
 416              	.L46:
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 417              		.loc 1 648 0
 418 001a 1120     		movs	r0, #17
 419 001c 01E0     		b	.L44
 420              	.L48:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 421              		.loc 1 670 0
 422 001e 0120     		movs	r0, #1
 423 0020 4042     		rsbs	r0, r0, #0
 424              	.L44:
 425              	.LVL23:
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 426              		.loc 1 675 0
 427              		@ sp needed
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 54


 428 0022 10BD     		pop	{r4, pc}
 429              	.L50:
 430              		.align	2
 431              	.L49:
 432 0024 00000000 		.word	CapSense_dsRam
 433 0028 00000000 		.word	.LANCHOR0
 434              		.cfi_endproc
 435              	.LFE6:
 436              		.size	CapSense_ScanExt, .-CapSense_ScanExt
 437              		.section	.text.CapSense_SetPinState,"ax",%progbits
 438              		.align	2
 439              		.global	CapSense_SetPinState
 440              		.code	16
 441              		.thumb_func
 442              		.type	CapSense_SetPinState, %function
 443              	CapSense_SetPinState:
 444              	.LFB8:
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 445              		.loc 1 841 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              	.LVL24:
 450 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 451              		.cfi_def_cfa_offset 20
 452              		.cfi_offset 4, -20
 453              		.cfi_offset 5, -16
 454              		.cfi_offset 6, -12
 455              		.cfi_offset 7, -8
 456              		.cfi_offset 14, -4
 457 0002 4746     		mov	r7, r8
 458 0004 80B4     		push	{r7}
 459              		.cfi_def_cfa_offset 24
 460              		.cfi_offset 8, -24
 461 0006 1600     		movs	r6, r2
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 462              		.loc 1 853 0
 463 0008 3423     		movs	r3, #52
 464 000a 4343     		muls	r3, r0
 465 000c 3D4A     		ldr	r2, .L61
 466              	.LVL25:
 467 000e D318     		adds	r3, r2, r3
 468 0010 5B69     		ldr	r3, [r3, #20]
 469 0012 5B07     		lsls	r3, r3, #29
 470 0014 0DD5     		bpl	.L52
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 471              		.loc 1 855 0
 472 0016 3423     		movs	r3, #52
 473 0018 5843     		muls	r0, r3
 474              	.LVL26:
 475 001a 8358     		ldr	r3, [r0, r2]
 476              	.LVL27:
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 477              		.loc 1 856 0
 478 001c 8900     		lsls	r1, r1, #2
 479              	.LVL28:
 480 001e 5918     		adds	r1, r3, r1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 55


 481              	.LVL29:
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 482              		.loc 1 857 0
 483 0020 0A88     		ldrh	r2, [r1]
 484 0022 D300     		lsls	r3, r2, #3
 485 0024 9B1A     		subs	r3, r3, r2
 486 0026 9A00     		lsls	r2, r3, #2
 487 0028 374C     		ldr	r4, .L61+4
 488 002a 1419     		adds	r4, r2, r4
 489              	.LVL30:
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 490              		.loc 1 858 0
 491 002c 8B78     		ldrb	r3, [r1, #2]
 492 002e 9846     		mov	r8, r3
 493              	.LVL31:
 494 0030 09E0     		b	.L53
 495              	.LVL32:
 496              	.L52:
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 497              		.loc 1 862 0
 498 0032 3423     		movs	r3, #52
 499 0034 5843     		muls	r0, r3
 500              	.LVL33:
 501 0036 334B     		ldr	r3, .L61
 502 0038 C458     		ldr	r4, [r0, r3]
 503 003a CB00     		lsls	r3, r1, #3
 504 003c 591A     		subs	r1, r3, r1
 505              	.LVL34:
 506 003e 8B00     		lsls	r3, r1, #2
 507 0040 E418     		adds	r4, r4, r3
 508              	.LVL35:
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 509              		.loc 1 863 0
 510 0042 0123     		movs	r3, #1
 511 0044 9846     		mov	r8, r3
 512              	.LVL36:
 513              	.L53:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 514              		.loc 1 871 0
 515 0046 0025     		movs	r5, #0
 516 0048 56E0     		b	.L54
 517              	.LVL37:
 518              	.L60:
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 519              		.loc 1 874 0
 520 004a FFF7FEFF 		bl	CyEnterCriticalSection
 521              	.LVL38:
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 522              		.loc 1 875 0
 523 004e 2168     		ldr	r1, [r4]
 524 0050 0B68     		ldr	r3, [r1]
 525 0052 227E     		ldrb	r2, [r4, #24]
 526 0054 9446     		mov	ip, r2
 527 0056 0F22     		movs	r2, #15
 528 0058 6746     		mov	r7, ip
 529 005a BA40     		lsls	r2, r2, r7
 530 005c 9343     		bics	r3, r2
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 56


 531 005e 0B60     		str	r3, [r1]
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 532              		.loc 1 876 0
 533 0060 6168     		ldr	r1, [r4, #4]
 534 0062 0B68     		ldr	r3, [r1]
 535 0064 A27E     		ldrb	r2, [r4, #26]
 536 0066 9446     		mov	ip, r2
 537 0068 0722     		movs	r2, #7
 538 006a 6746     		mov	r7, ip
 539 006c BA40     		lsls	r2, r2, r7
 540 006e 9343     		bics	r3, r2
 541 0070 0B60     		str	r3, [r1]
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 542              		.loc 1 877 0
 543 0072 FFF7FEFF 		bl	CyExitCriticalSection
 544              	.LVL39:
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 545              		.loc 1 879 0
 546 0076 012E     		cmp	r6, #1
 547 0078 1DD0     		beq	.L56
 548 007a 002E     		cmp	r6, #0
 549 007c 04D0     		beq	.L57
 550 007e 022E     		cmp	r6, #2
 551 0080 2BD0     		beq	.L58
 552 0082 032E     		cmp	r6, #3
 553 0084 25D0     		beq	.L59
 554 0086 35E0     		b	.L55
 555              	.L57:
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 556              		.loc 1 883 0
 557 0088 FFF7FEFF 		bl	CyEnterCriticalSection
 558              	.LVL40:
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 559              		.loc 1 884 0
 560 008c 6268     		ldr	r2, [r4, #4]
 561 008e 1168     		ldr	r1, [r2]
 562 0090 A37E     		ldrb	r3, [r4, #26]
 563 0092 9C46     		mov	ip, r3
 564 0094 0623     		movs	r3, #6
 565 0096 6746     		mov	r7, ip
 566 0098 BB40     		lsls	r3, r3, r7
 567 009a 0B43     		orrs	r3, r1
 568 009c 1360     		str	r3, [r2]
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 569              		.loc 1 885 0
 570 009e A168     		ldr	r1, [r4, #8]
 571 00a0 0B68     		ldr	r3, [r1]
 572 00a2 627E     		ldrb	r2, [r4, #25]
 573 00a4 9446     		mov	ip, r2
 574 00a6 0122     		movs	r2, #1
 575 00a8 6746     		mov	r7, ip
 576 00aa BA40     		lsls	r2, r2, r7
 577 00ac 9343     		bics	r3, r2
 578 00ae 0B60     		str	r3, [r1]
 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 579              		.loc 1 886 0
 580 00b0 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 57


 581              	.LVL41:
 887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 582              		.loc 1 887 0
 583 00b4 1EE0     		b	.L55
 584              	.L56:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 585              		.loc 1 890 0
 586 00b6 FFF7FEFF 		bl	CyEnterCriticalSection
 587              	.LVL42:
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 588              		.loc 1 891 0
 589 00ba A168     		ldr	r1, [r4, #8]
 590 00bc 0B68     		ldr	r3, [r1]
 591 00be 627E     		ldrb	r2, [r4, #25]
 592 00c0 9446     		mov	ip, r2
 593 00c2 0122     		movs	r2, #1
 594 00c4 6746     		mov	r7, ip
 595 00c6 BA40     		lsls	r2, r2, r7
 596 00c8 9343     		bics	r3, r2
 597 00ca 0B60     		str	r3, [r1]
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 598              		.loc 1 892 0
 599 00cc FFF7FEFF 		bl	CyExitCriticalSection
 600              	.LVL43:
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 601              		.loc 1 893 0
 602 00d0 10E0     		b	.L55
 603              	.L59:
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 604              		.loc 1 898 0
 605 00d2 2000     		movs	r0, r4
 606 00d4 FFF7FEFF 		bl	CapSense_CSDConnectSns
 607              	.LVL44:
 899:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 608              		.loc 1 899 0
 609 00d8 0CE0     		b	.L55
 610              	.L58:
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 611              		.loc 1 904 0
 612 00da FFF7FEFF 		bl	CyEnterCriticalSection
 613              	.LVL45:
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 614              		.loc 1 905 0
 615 00de 2268     		ldr	r2, [r4]
 616 00e0 1168     		ldr	r1, [r2]
 617 00e2 237E     		ldrb	r3, [r4, #24]
 618 00e4 9C46     		mov	ip, r3
 619 00e6 0523     		movs	r3, #5
 620 00e8 6746     		mov	r7, ip
 621 00ea BB40     		lsls	r3, r3, r7
 622 00ec 0B43     		orrs	r3, r1
 623 00ee 1360     		str	r3, [r2]
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 624              		.loc 1 906 0
 625 00f0 FFF7FEFF 		bl	CyExitCriticalSection
 626              	.LVL46:
 627              	.L55:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 58


 933:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 628              		.loc 1 933 0 discriminator 2
 629 00f4 1C34     		adds	r4, r4, #28
 630              	.LVL47:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 631              		.loc 1 871 0 discriminator 2
 632 00f6 0135     		adds	r5, r5, #1
 633              	.LVL48:
 634              	.L54:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 635              		.loc 1 871 0 is_stmt 0 discriminator 1
 636 00f8 A845     		cmp	r8, r5
 637 00fa A6D8     		bhi	.L60
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 638              		.loc 1 935 0 is_stmt 1
 639              		@ sp needed
 640              	.LVL49:
 641              	.LVL50:
 642              	.LVL51:
 643              	.LVL52:
 644 00fc 04BC     		pop	{r2}
 645 00fe 9046     		mov	r8, r2
 646 0100 F0BD     		pop	{r4, r5, r6, r7, pc}
 647              	.L62:
 648 0102 C046     		.align	2
 649              	.L61:
 650 0104 00000000 		.word	CapSense_dsFlash
 651 0108 00000000 		.word	CapSense_ioList
 652              		.cfi_endproc
 653              	.LFE8:
 654              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 655              		.section	.text.CapSense_SsSetAllIOsState,"ax",%progbits
 656              		.align	2
 657              		.global	CapSense_SsSetAllIOsState
 658              		.code	16
 659              		.thumb_func
 660              		.type	CapSense_SsSetAllIOsState, %function
 661              	CapSense_SsSetAllIOsState:
 662              	.LFB11:
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 663              		.loc 1 1167 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              	.LVL53:
 668 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 669              		.cfi_def_cfa_offset 20
 670              		.cfi_offset 4, -20
 671              		.cfi_offset 5, -16
 672              		.cfi_offset 6, -12
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 5746     		mov	r7, r10
 676 0004 4E46     		mov	r6, r9
 677 0006 4546     		mov	r5, r8
 678 0008 E0B4     		push	{r5, r6, r7}
 679              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 59


 680              		.cfi_offset 8, -32
 681              		.cfi_offset 9, -28
 682              		.cfi_offset 10, -24
 683 000a 8046     		mov	r8, r0
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 684              		.loc 1 1180 0
 685 000c 0128     		cmp	r0, #1
 686 000e 0BD0     		beq	.L69
 687 0010 0228     		cmp	r0, #2
 688 0012 04D0     		beq	.L66
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 689              		.loc 1 1184 0
 690 0014 0023     		movs	r3, #0
 691 0016 9A46     		mov	r10, r3
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 692              		.loc 1 1183 0
 693 0018 0633     		adds	r3, r3, #6
 694 001a 9946     		mov	r9, r3
 695 001c 07E0     		b	.L65
 696              	.L66:
 697              	.LVL54:
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 698              		.loc 1 1192 0
 699 001e 0523     		movs	r3, #5
 700 0020 9A46     		mov	r10, r3
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 701              		.loc 1 1191 0
 702 0022 0023     		movs	r3, #0
 703 0024 9946     		mov	r9, r3
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 704              		.loc 1 1193 0
 705 0026 02E0     		b	.L65
 706              	.LVL55:
 707              	.L69:
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 708              		.loc 1 1188 0
 709 0028 0023     		movs	r3, #0
 710 002a 9A46     		mov	r10, r3
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 711              		.loc 1 1187 0
 712 002c 9946     		mov	r9, r3
 713              	.L65:
 714              	.LVL56:
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
 715              		.loc 1 1201 0
 716 002e 164C     		ldr	r4, .L70
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 717              		.loc 1 1202 0
 718 0030 0025     		movs	r5, #0
 719 0032 1FE0     		b	.L67
 720              	.LVL57:
 721              	.L68:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 722              		.loc 1 1204 0 discriminator 3
 723 0034 FFF7FEFF 		bl	CyEnterCriticalSection
 724              	.LVL58:
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 60


 725              		.loc 1 1206 0 discriminator 3
 726 0038 2268     		ldr	r2, [r4]
 727 003a 1368     		ldr	r3, [r2]
 728              	.LVL59:
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 729              		.loc 1 1207 0 discriminator 3
 730 003c 2169     		ldr	r1, [r4, #16]
 731 003e 8B43     		bics	r3, r1
 732              	.LVL60:
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 733              		.loc 1 1208 0 discriminator 3
 734 0040 1360     		str	r3, [r2]
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 735              		.loc 1 1210 0 discriminator 3
 736 0042 6668     		ldr	r6, [r4, #4]
 737 0044 3268     		ldr	r2, [r6]
 738              	.LVL61:
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 739              		.loc 1 1211 0 discriminator 3
 740 0046 A77E     		ldrb	r7, [r4, #26]
 741 0048 0721     		movs	r1, #7
 742 004a B940     		lsls	r1, r1, r7
 743 004c 8A43     		bics	r2, r1
 744              	.LVL62:
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
 745              		.loc 1 1212 0 discriminator 3
 746 004e 4946     		mov	r1, r9
 747 0050 B940     		lsls	r1, r1, r7
 748 0052 0A43     		orrs	r2, r1
 749              	.LVL63:
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 750              		.loc 1 1213 0 discriminator 3
 751 0054 3260     		str	r2, [r6]
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 752              		.loc 1 1215 0 discriminator 3
 753 0056 227E     		ldrb	r2, [r4, #24]
 754              	.LVL64:
 755 0058 5146     		mov	r1, r10
 756 005a 9140     		lsls	r1, r1, r2
 757 005c 0B43     		orrs	r3, r1
 758              	.LVL65:
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 759              		.loc 1 1216 0 discriminator 3
 760 005e 2268     		ldr	r2, [r4]
 761 0060 1360     		str	r3, [r2]
 762              	.LVL66:
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 763              		.loc 1 1218 0 discriminator 3
 764 0062 A268     		ldr	r2, [r4, #8]
 765 0064 1368     		ldr	r3, [r2]
 766              	.LVL67:
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 767              		.loc 1 1219 0 discriminator 3
 768 0066 6169     		ldr	r1, [r4, #20]
 769 0068 8B43     		bics	r3, r1
 770              	.LVL68:
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 61


 771              		.loc 1 1220 0 discriminator 3
 772 006a 1360     		str	r3, [r2]
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 773              		.loc 1 1222 0 discriminator 3
 774 006c FFF7FEFF 		bl	CyExitCriticalSection
 775              	.LVL69:
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 776              		.loc 1 1225 0 discriminator 3
 777 0070 1C34     		adds	r4, r4, #28
 778              	.LVL70:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 779              		.loc 1 1202 0 discriminator 3
 780 0072 0135     		adds	r5, r5, #1
 781              	.LVL71:
 782              	.L67:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 783              		.loc 1 1202 0 is_stmt 0 discriminator 1
 784 0074 182D     		cmp	r5, #24
 785 0076 DDD9     		bls	.L68
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 786              		.loc 1 1231 0 is_stmt 1
 787 0078 4046     		mov	r0, r8
 788 007a FFF7FEFF 		bl	CapSense_SsCSDSetShieldElectrodesState
 789              	.LVL72:
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 790              		.loc 1 1238 0
 791              		@ sp needed
 792              	.LVL73:
 793              	.LVL74:
 794              	.LVL75:
 795              	.LVL76:
 796              	.LVL77:
 797 007e 1CBC     		pop	{r2, r3, r4}
 798 0080 9046     		mov	r8, r2
 799 0082 9946     		mov	r9, r3
 800 0084 A246     		mov	r10, r4
 801 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 802              	.L71:
 803              		.align	2
 804              	.L70:
 805 0088 00000000 		.word	CapSense_ioList
 806              		.cfi_endproc
 807              	.LFE11:
 808              		.size	CapSense_SsSetAllIOsState, .-CapSense_SsSetAllIOsState
 809              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 810              		.align	2
 811              		.global	CapSense_SsPostAllWidgetsScan
 812              		.code	16
 813              		.thumb_func
 814              		.type	CapSense_SsPostAllWidgetsScan, %function
 815              	CapSense_SsPostAllWidgetsScan:
 816              	.LFB12:
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 817              		.loc 1 1317 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 62


 821 0000 10B5     		push	{r4, lr}
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 4, -8
 824              		.cfi_offset 14, -4
 825              	.L77:
1328:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 826              		.loc 1 1328 0
 827 0002 1B4A     		ldr	r2, .L78
 828 0004 9378     		ldrb	r3, [r2, #2]
 829 0006 0133     		adds	r3, r3, #1
 830 0008 DBB2     		uxtb	r3, r3
 831 000a 9370     		strb	r3, [r2, #2]
1330:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 832              		.loc 1 1330 0
 833 000c 9078     		ldrb	r0, [r2, #2]
 834 000e C0B2     		uxtb	r0, r0
 835 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 836              	.LVL78:
 837 0014 041E     		subs	r4, r0, #0
 838              	.LVL79:
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 839              		.loc 1 1332 0
 840 0016 09D1     		bne	.L73
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 841              		.loc 1 1334 0
 842 0018 154B     		ldr	r3, .L78
 843 001a 9B78     		ldrb	r3, [r3, #2]
 844 001c 032B     		cmp	r3, #3
 845 001e 02D1     		bne	.L74
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 846              		.loc 1 1337 0
 847 0020 0022     		movs	r2, #0
 848 0022 134B     		ldr	r3, .L78
 849 0024 5A70     		strb	r2, [r3, #1]
 850              	.L74:
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 851              		.loc 1 1339 0
 852 0026 FFF7FEFF 		bl	CapSense_Scan
 853              	.LVL80:
 854 002a 1EE0     		b	.L75
 855              	.LVL81:
 856              	.L73:
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 857              		.loc 1 1341 0
 858 002c 104B     		ldr	r3, .L78
 859 002e 9B78     		ldrb	r3, [r3, #2]
 860 0030 032B     		cmp	r3, #3
 861 0032 11D1     		bne	.L76
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 862              		.loc 1 1355 0
 863 0034 0F4B     		ldr	r3, .L78+4
 864 0036 1A89     		ldrh	r2, [r3, #8]
 865 0038 0132     		adds	r2, r2, #1
 866 003a 1A81     		strh	r2, [r3, #8]
1357:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 867              		.loc 1 1357 0
 868 003c DA68     		ldr	r2, [r3, #12]
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 63


 869 003e 8021     		movs	r1, #128
 870 0040 8A43     		bics	r2, r1
 871 0042 DA60     		str	r2, [r3, #12]
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 872              		.loc 1 1360 0
 873 0044 DA68     		ldr	r2, [r3, #12]
 874 0046 1202     		lsls	r2, r2, #8
 875 0048 120A     		lsrs	r2, r2, #8
 876 004a DA60     		str	r2, [r3, #12]
1361:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 877              		.loc 1 1361 0
 878 004c DA68     		ldr	r2, [r3, #12]
 879 004e 0406     		lsls	r4, r0, #24
 880 0050 1443     		orrs	r4, r2
 881 0052 DC60     		str	r4, [r3, #12]
 882              	.LVL82:
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 883              		.loc 1 1364 0
 884 0054 0024     		movs	r4, #0
 885 0056 08E0     		b	.L75
 886              	.LVL83:
 887              	.L76:
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 888              		.loc 1 1369 0
 889 0058 064A     		ldr	r2, .L78+4
 890 005a D368     		ldr	r3, [r2, #12]
 891 005c 1B02     		lsls	r3, r3, #8
 892 005e 1B0A     		lsrs	r3, r3, #8
 893 0060 D360     		str	r3, [r2, #12]
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 894              		.loc 1 1370 0
 895 0062 D168     		ldr	r1, [r2, #12]
 896 0064 0306     		lsls	r3, r0, #24
 897 0066 0B43     		orrs	r3, r1
 898 0068 D360     		str	r3, [r2, #12]
 899              	.LVL84:
 900              	.L75:
1372:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
 901              		.loc 1 1372 0
 902 006a 002C     		cmp	r4, #0
 903 006c C9D1     		bne	.L77
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 904              		.loc 1 1374 0
 905              		@ sp needed
 906              	.LVL85:
 907 006e 10BD     		pop	{r4, pc}
 908              	.L79:
 909              		.align	2
 910              	.L78:
 911 0070 00000000 		.word	.LANCHOR0
 912 0074 00000000 		.word	CapSense_dsRam
 913              		.cfi_endproc
 914              	.LFE12:
 915              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 916              		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 917              		.align	2
 918              		.global	CapSense_SsIsrInitialize
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 64


 919              		.code	16
 920              		.thumb_func
 921              		.type	CapSense_SsIsrInitialize, %function
 922              	CapSense_SsIsrInitialize:
 923              	.LFB13:
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 924              		.loc 1 1394 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928              	.LVL86:
 929 0000 10B5     		push	{r4, lr}
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 4, -8
 932              		.cfi_offset 14, -4
1395:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 933              		.loc 1 1395 0
 934 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 935              	.LVL87:
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 936              		.loc 1 1396 0
 937              		@ sp needed
 938 0006 10BD     		pop	{r4, pc}
 939              		.cfi_endproc
 940              	.LFE13:
 941              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 942              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 943              		.align	2
 944              		.global	CapSense_SsSetModClkClockDivider
 945              		.code	16
 946              		.thumb_func
 947              		.type	CapSense_SsSetModClkClockDivider, %function
 948              	CapSense_SsSetModClkClockDivider:
 949              	.LFB14:
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 950              		.loc 1 1417 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955              	.LVL88:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 956              		.loc 1 1420 0
 957 0000 074A     		ldr	r2, .L83
 958 0002 084B     		ldr	r3, .L83+4
 959 0004 1A60     		str	r2, [r3]
1430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960              		.loc 1 1430 0
 961 0006 0138     		subs	r0, r0, #1
 962              	.LVL89:
 963 0008 0002     		lsls	r0, r0, #8
 964              	.LVL90:
 965 000a 074B     		ldr	r3, .L83+8
 966 000c 1860     		str	r0, [r3]
 967              	.L82:
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 968              		.loc 1 1433 0 discriminator 1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 65


 969 000e 054B     		ldr	r3, .L83+4
 970 0010 1B68     		ldr	r3, [r3]
 971 0012 002B     		cmp	r3, #0
 972 0014 FBDB     		blt	.L82
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 973              		.loc 1 1439 0
 974 0016 054A     		ldr	r2, .L83+12
 975 0018 024B     		ldr	r3, .L83+4
 976 001a 1A60     		str	r2, [r3]
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 977              		.loc 1 1464 0
 978              		@ sp needed
 979 001c 7047     		bx	lr
 980              	.L84:
 981 001e C046     		.align	2
 982              	.L83:
 983 0020 40000040 		.word	1073741888
 984 0024 00000140 		.word	1073807360
 985 0028 00030140 		.word	1073808128
 986 002c 40FF0080 		.word	-2147418304
 987              		.cfi_endproc
 988              	.LFE14:
 989              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 990              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 991              		.align	2
 992              		.global	CapSense_SsSetSnsClockDivider
 993              		.code	16
 994              		.thumb_func
 995              		.type	CapSense_SsSetSnsClockDivider, %function
 996              	CapSense_SsSetSnsClockDivider:
 997              	.LFB15:
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 998              		.loc 1 1485 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
 1003              	.LVL91:
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
 1004              		.loc 1 1494 0
 1005 0000 034A     		ldr	r2, .L86
 1006 0002 1368     		ldr	r3, [r2]
 1007              	.LVL92:
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 1008              		.loc 1 1495 0
 1009 0004 1B0B     		lsrs	r3, r3, #12
 1010              	.LVL93:
 1011 0006 1B03     		lsls	r3, r3, #12
 1012              	.LVL94:
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 1013              		.loc 1 1496 0
 1014 0008 0138     		subs	r0, r0, #1
 1015              	.LVL95:
 1016 000a 1843     		orrs	r0, r3
 1017              	.LVL96:
1497:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 1018              		.loc 1 1497 0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 66


 1019 000c 1060     		str	r0, [r2]
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1020              		.loc 1 1546 0
 1021              		@ sp needed
 1022 000e 7047     		bx	lr
 1023              	.L87:
 1024              		.align	2
 1025              	.L86:
 1026 0010 00020C40 		.word	1074528768
 1027              		.cfi_endproc
 1028              	.LFE15:
 1029              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 1030              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 1031              		.align	2
 1032              		.global	CapSense_SsSetClockDividers
 1033              		.code	16
 1034              		.thumb_func
 1035              		.type	CapSense_SsSetClockDividers, %function
 1036              	CapSense_SsSetClockDividers:
 1037              	.LFB16:
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 1038              		.loc 1 1569 0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 0
 1041              		@ frame_needed = 0, uses_anonymous_args = 0
 1042              	.LVL97:
 1043 0000 10B5     		push	{r4, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 4, -8
 1046              		.cfi_offset 14, -4
 1047 0002 0400     		movs	r4, r0
1571:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1048              		.loc 1 1571 0
 1049 0004 0800     		movs	r0, r1
 1050              	.LVL98:
 1051 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1052              	.LVL99:
1574:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1053              		.loc 1 1574 0
 1054 000a 2000     		movs	r0, r4
 1055 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 1056              	.LVL100:
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1057              		.loc 1 1575 0
 1058              		@ sp needed
 1059              	.LVL101:
 1060 0010 10BD     		pop	{r4, pc}
 1061              		.cfi_endproc
 1062              	.LFE16:
 1063              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 1064 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 1065              		.align	2
 1066              		.global	CapSense_CalibrateWidget
 1067              		.code	16
 1068              		.thumb_func
 1069              		.type	CapSense_CalibrateWidget, %function
 1070              	CapSense_CalibrateWidget:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 67


 1071              	.LFB17:
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1072              		.loc 1 1621 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 1076              	.LVL102:
 1077 0000 10B5     		push	{r4, lr}
 1078              		.cfi_def_cfa_offset 8
 1079              		.cfi_offset 4, -8
 1080              		.cfi_offset 14, -4
 1081 0002 0300     		movs	r3, r0
 1082              	.LVL103:
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1083              		.loc 1 1626 0
 1084 0004 0328     		cmp	r0, #3
 1085 0006 01D8     		bhi	.L92
1622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1086              		.loc 1 1622 0
 1087 0008 0020     		movs	r0, #0
 1088              	.LVL104:
 1089 000a 00E0     		b	.L90
 1090              	.LVL105:
 1091              	.L92:
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1092              		.loc 1 1628 0
 1093 000c 0120     		movs	r0, #1
 1094              	.LVL106:
 1095              	.L90:
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1096              		.loc 1 1646 0
 1097 000e 0028     		cmp	r0, #0
 1098 0010 03D1     		bne	.L91
1685:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1099              		.loc 1 1685 0
 1100 0012 5521     		movs	r1, #85
 1101 0014 1800     		movs	r0, r3
 1102              	.LVL107:
 1103 0016 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1104              	.LVL108:
 1105              	.L91:
1701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1106              		.loc 1 1701 0
 1107              		@ sp needed
 1108 001a 10BD     		pop	{r4, pc}
 1109              		.cfi_endproc
 1110              	.LFE17:
 1111              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 1112              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 1113              		.align	2
 1114              		.global	CapSense_CalibrateAllWidgets
 1115              		.code	16
 1116              		.thumb_func
 1117              		.type	CapSense_CalibrateAllWidgets, %function
 1118              	CapSense_CalibrateAllWidgets:
 1119              	.LFB18:
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 68


 1120              		.loc 1 1738 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 0
 1123              		@ frame_needed = 0, uses_anonymous_args = 0
 1124 0000 70B5     		push	{r4, r5, r6, lr}
 1125              		.cfi_def_cfa_offset 16
 1126              		.cfi_offset 4, -16
 1127              		.cfi_offset 5, -12
 1128              		.cfi_offset 6, -8
 1129              		.cfi_offset 14, -4
 1130              	.LVL109:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1131              		.loc 1 1742 0
 1132 0002 0024     		movs	r4, #0
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1133              		.loc 1 1739 0
 1134 0004 0025     		movs	r5, #0
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1135              		.loc 1 1742 0
 1136 0006 04E0     		b	.L94
 1137              	.LVL110:
 1138              	.L95:
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1139              		.loc 1 1744 0 discriminator 3
 1140 0008 2000     		movs	r0, r4
 1141 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1142              	.LVL111:
 1143 000e 0543     		orrs	r5, r0
 1144              	.LVL112:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1145              		.loc 1 1742 0 discriminator 3
 1146 0010 0134     		adds	r4, r4, #1
 1147              	.LVL113:
 1148              	.L94:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1149              		.loc 1 1742 0 is_stmt 0 discriminator 1
 1150 0012 032C     		cmp	r4, #3
 1151 0014 F8D9     		bls	.L95
1748:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1152              		.loc 1 1748 0 is_stmt 1
 1153 0016 2800     		movs	r0, r5
 1154              		@ sp needed
 1155              	.LVL114:
 1156              	.LVL115:
 1157 0018 70BD     		pop	{r4, r5, r6, pc}
 1158              		.cfi_endproc
 1159              	.LFE18:
 1160              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1161 001a C046     		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1162              		.align	2
 1163              		.global	CapSense_SsInitializeSourceSenseClk
 1164              		.code	16
 1165              		.thumb_func
 1166              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1167              	CapSense_SsInitializeSourceSenseClk:
 1168              	.LFB19:
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 69


 1169              		.loc 1 2405 0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
 1173 0000 10B5     		push	{r4, lr}
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 4, -8
 1176              		.cfi_offset 14, -4
 1177              	.LVL116:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1178              		.loc 1 2409 0
 1179 0002 0024     		movs	r4, #0
 1180 0004 08E0     		b	.L97
 1181              	.LVL117:
 1182              	.L98:
2411:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1183              		.loc 1 2411 0
 1184 0006 3423     		movs	r3, #52
 1185 0008 6343     		muls	r3, r4
 1186 000a 054A     		ldr	r2, .L99
 1187 000c D318     		adds	r3, r2, r3
 1188 000e 5968     		ldr	r1, [r3, #4]
 1189              	.LVL118:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1190              		.loc 1 2417 0
 1191 0010 2000     		movs	r0, r4
 1192 0012 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1193              	.LVL119:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1194              		.loc 1 2409 0
 1195 0016 0134     		adds	r4, r4, #1
 1196              	.LVL120:
 1197              	.L97:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1198              		.loc 1 2409 0 is_stmt 0 discriminator 1
 1199 0018 032C     		cmp	r4, #3
 1200 001a F4D9     		bls	.L98
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1201              		.loc 1 2432 0 is_stmt 1
 1202              		@ sp needed
 1203              	.LVL121:
 1204 001c 10BD     		pop	{r4, pc}
 1205              	.L100:
 1206 001e C046     		.align	2
 1207              	.L99:
 1208 0020 00000000 		.word	CapSense_dsFlash
 1209              		.cfi_endproc
 1210              	.LFE19:
 1211              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1212              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1213              		.align	2
 1214              		.global	CapSense_SsCSDGetColSnsClkDivider
 1215              		.code	16
 1216              		.thumb_func
 1217              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1218              	CapSense_SsCSDGetColSnsClkDivider:
 1219              	.LFB21:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 70


2535:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2549:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2565:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2587:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2589:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 71


2592:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2604:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2611:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2612:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2616:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2617:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2618:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2620:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 72


2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2652:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2654:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2659:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2661:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2663:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2666:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2672:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2673:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2674:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2675:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2676:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2677:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2678:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2679:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2680:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2681:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2682:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2683:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2684:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2685:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2686:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2687:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2688:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2689:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2690:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2691:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2692:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2693:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2694:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2696:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 73


2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2708:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2730:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2739:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2755:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
2757:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2759:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 74


2763:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1220              		.loc 1 2793 0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
 1224              		@ link register save eliminated.
 1225              	.LVL122:
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2795:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1226              		.loc 1 2800 0
 1227 0000 3423     		movs	r3, #52
 1228 0002 5843     		muls	r0, r3
 1229              	.LVL123:
 1230 0004 024B     		ldr	r3, .L102
 1231 0006 1818     		adds	r0, r3, r0
 1232 0008 4368     		ldr	r3, [r0, #4]
 1233              	.LVL124:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1234              		.loc 1 2803 0
 1235 000a 9889     		ldrh	r0, [r3, #12]
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 75


 1236              	.LVL125:
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1237              		.loc 1 2811 0
 1238              		@ sp needed
 1239 000c 7047     		bx	lr
 1240              	.L103:
 1241 000e C046     		.align	2
 1242              	.L102:
 1243 0010 00000000 		.word	CapSense_dsFlash
 1244              		.cfi_endproc
 1245              	.LFE21:
 1246              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1247              		.section	.text.CapSense_SsCSDGetRowSnsClkDivider,"ax",%progbits
 1248              		.align	2
 1249              		.global	CapSense_SsCSDGetRowSnsClkDivider
 1250              		.code	16
 1251              		.thumb_func
 1252              		.type	CapSense_SsCSDGetRowSnsClkDivider, %function
 1253              	CapSense_SsCSDGetRowSnsClkDivider:
 1254              	.LFB22:
2812:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2813:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2833:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1255              		.loc 1 2837 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 76


 1259              		@ link register save eliminated.
 1260              	.LVL126:
2838:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2839:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2840:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1261              		.loc 1 2844 0
 1262 0000 3423     		movs	r3, #52
 1263 0002 5843     		muls	r0, r3
 1264              	.LVL127:
 1265 0004 024B     		ldr	r3, .L105
 1266 0006 1818     		adds	r0, r3, r0
 1267 0008 4368     		ldr	r3, [r0, #4]
 1268              	.LVL128:
2845:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2847:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
 1269              		.loc 1 2847 0
 1270 000a D889     		ldrh	r0, [r3, #14]
 1271              	.LVL129:
2848:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2850:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2851:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1272              		.loc 1 2855 0
 1273              		@ sp needed
 1274 000c 7047     		bx	lr
 1275              	.L106:
 1276 000e C046     		.align	2
 1277              	.L105:
 1278 0010 00000000 		.word	CapSense_dsFlash
 1279              		.cfi_endproc
 1280              	.LFE22:
 1281              		.size	CapSense_SsCSDGetRowSnsClkDivider, .-CapSense_SsCSDGetRowSnsClkDivider
 1282              		.section	.text.CapSense_DischargeExtCapacitors,"ax",%progbits
 1283              		.align	2
 1284              		.global	CapSense_DischargeExtCapacitors
 1285              		.code	16
 1286              		.thumb_func
 1287              		.type	CapSense_DischargeExtCapacitors, %function
 1288              	CapSense_DischargeExtCapacitors:
 1289              	.LFB23:
2856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2860:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2861:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2862:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2863:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 77


2864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2865:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2866:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2867:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2868:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2869:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2870:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2871:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2872:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2873:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2874:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2875:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2876:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2877:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2878:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2879:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2880:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2881:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2882:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2883:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2884:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2885:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSDV2)
2886:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2889:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * This operation is needed for Third-generation HW Block
2892:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * based devices to take into account DIV-2 flip-flop.
2893:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2894:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider <<= 1uL;
2895:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2896:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
2898:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2901:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
2903:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2904:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2905:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
2906:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2907:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2908:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2910:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
2911:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2913:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
2914:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2915:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2916:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2917:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2919:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2920:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 78


2921:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
2922:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2923:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2924:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2925:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
2926:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2928:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
2930:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
2932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
2935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
2936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2938:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1290              		.loc 1 2939 0
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 8
 1293              		@ frame_needed = 0, uses_anonymous_args = 0
 1294              	.LVL130:
 1295 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1296              		.cfi_def_cfa_offset 20
 1297              		.cfi_offset 4, -20
 1298              		.cfi_offset 5, -16
 1299              		.cfi_offset 6, -12
 1300              		.cfi_offset 7, -8
 1301              		.cfi_offset 14, -4
 1302 0002 5F46     		mov	r7, fp
 1303 0004 5646     		mov	r6, r10
 1304 0006 4D46     		mov	r5, r9
 1305 0008 4446     		mov	r4, r8
 1306 000a F0B4     		push	{r4, r5, r6, r7}
 1307              		.cfi_def_cfa_offset 36
 1308              		.cfi_offset 8, -36
 1309              		.cfi_offset 9, -32
 1310              		.cfi_offset 10, -28
 1311              		.cfi_offset 11, -24
 1312 000c 83B0     		sub	sp, sp, #12
 1313              		.cfi_def_cfa_offset 48
 1314 000e 0190     		str	r0, [sp, #4]
2940:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
2941:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 drReg;
2942:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 pcReg;
2943:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2944:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2946:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store register state */
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         hsiomReg = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK;
 1315              		.loc 1 2947 0
 1316 0010 284C     		ldr	r4, .L108
 1317 0012 2368     		ldr	r3, [r4]
 1318 0014 F027     		movs	r7, #240
 1319 0016 3B40     		ands	r3, r7
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 79


 1320 0018 0093     		str	r3, [sp]
 1321              	.LVL131:
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
 1322              		.loc 1 2948 0
 1323 001a 274D     		ldr	r5, .L108+4
 1324 001c 2B68     		ldr	r3, [r5]
 1325              	.LVL132:
 1326 001e 0221     		movs	r1, #2
 1327 0020 8946     		mov	r9, r1
 1328 0022 1940     		ands	r1, r3
 1329 0024 8846     		mov	r8, r1
 1330              	.LVL133:
2949:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
 1331              		.loc 1 2949 0
 1332 0026 254E     		ldr	r6, .L108+8
 1333 0028 3368     		ldr	r3, [r6]
 1334 002a 3821     		movs	r1, #56
 1335              	.LVL134:
 1336 002c 8B46     		mov	fp, r1
 1337 002e 1940     		ands	r1, r3
 1338 0030 8A46     		mov	r10, r1
 1339              	.LVL135:
2950:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2951:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2952:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1340              		.loc 1 2952 0
 1341 0032 FFF7FEFF 		bl	CyEnterCriticalSection
 1342              	.LVL136:
2953:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1343              		.loc 1 2953 0
 1344 0036 2368     		ldr	r3, [r4]
 1345              	.LVL137:
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1346              		.loc 1 2954 0
 1347 0038 BB43     		bics	r3, r7
 1348              	.LVL138:
2955:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1349              		.loc 1 2955 0
 1350 003a 2360     		str	r3, [r4]
 1351              	.LVL139:
2956:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1352              		.loc 1 2956 0
 1353 003c FFF7FEFF 		bl	CyExitCriticalSection
 1354              	.LVL140:
2957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2958:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2959:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1355              		.loc 1 2959 0
 1356 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1357              	.LVL141:
2960:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1358              		.loc 1 2960 0
 1359 0044 2B68     		ldr	r3, [r5]
 1360              	.LVL142:
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1361              		.loc 1 2961 0
 1362 0046 4946     		mov	r1, r9
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 80


 1363 0048 8B43     		bics	r3, r1
 1364              	.LVL143:
2962:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1365              		.loc 1 2962 0
 1366 004a 2B60     		str	r3, [r5]
2963:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1367              		.loc 1 2963 0
 1368 004c FFF7FEFF 		bl	CyExitCriticalSection
 1369              	.LVL144:
2964:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2965:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2966:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1370              		.loc 1 2966 0
 1371 0050 FFF7FEFF 		bl	CyEnterCriticalSection
 1372              	.LVL145:
2967:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1373              		.loc 1 2967 0
 1374 0054 3368     		ldr	r3, [r6]
 1375              	.LVL146:
2968:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1376              		.loc 1 2968 0
 1377 0056 5946     		mov	r1, fp
 1378 0058 8B43     		bics	r3, r1
 1379              	.LVL147:
2969:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1380              		.loc 1 2969 0
 1381 005a 3022     		movs	r2, #48
 1382 005c 1343     		orrs	r3, r2
 1383              	.LVL148:
2970:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1384              		.loc 1 2970 0
 1385 005e 3360     		str	r3, [r6]
2971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1386              		.loc 1 2971 0
 1387 0060 FFF7FEFF 		bl	CyExitCriticalSection
 1388              	.LVL149:
2972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2974:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
 1389              		.loc 1 2974 0
 1390 0064 6B46     		mov	r3, sp
 1391 0066 9888     		ldrh	r0, [r3, #4]
 1392 0068 FFF7FEFF 		bl	CyDelayUs
 1393              	.LVL150:
2975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2976:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Restore previous register values */
2977:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1394              		.loc 1 2977 0
 1395 006c FFF7FEFF 		bl	CyEnterCriticalSection
 1396              	.LVL151:
2978:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1397              		.loc 1 2978 0
 1398 0070 3368     		ldr	r3, [r6]
 1399              	.LVL152:
2979:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1400              		.loc 1 2979 0
 1401 0072 5946     		mov	r1, fp
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 81


 1402 0074 8B43     		bics	r3, r1
 1403              	.LVL153:
2980:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= pcReg;
 1404              		.loc 1 2980 0
 1405 0076 5146     		mov	r1, r10
 1406 0078 0B43     		orrs	r3, r1
 1407              	.LVL154:
2981:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1408              		.loc 1 2981 0
 1409 007a 3360     		str	r3, [r6]
2982:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1410              		.loc 1 2982 0
 1411 007c FFF7FEFF 		bl	CyExitCriticalSection
 1412              	.LVL155:
2983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2984:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1413              		.loc 1 2984 0
 1414 0080 FFF7FEFF 		bl	CyEnterCriticalSection
 1415              	.LVL156:
2985:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1416              		.loc 1 2985 0
 1417 0084 2B68     		ldr	r3, [r5]
 1418              	.LVL157:
2986:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1419              		.loc 1 2986 0
 1420 0086 4946     		mov	r1, r9
 1421 0088 8B43     		bics	r3, r1
 1422              	.LVL158:
2987:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= drReg;
 1423              		.loc 1 2987 0
 1424 008a 4146     		mov	r1, r8
 1425 008c 0B43     		orrs	r3, r1
 1426              	.LVL159:
2988:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1427              		.loc 1 2988 0
 1428 008e 2B60     		str	r3, [r5]
2989:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1429              		.loc 1 2989 0
 1430 0090 FFF7FEFF 		bl	CyExitCriticalSection
 1431              	.LVL160:
2990:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2991:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1432              		.loc 1 2991 0
 1433 0094 FFF7FEFF 		bl	CyEnterCriticalSection
 1434              	.LVL161:
2992:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1435              		.loc 1 2992 0
 1436 0098 2368     		ldr	r3, [r4]
 1437              	.LVL162:
2993:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1438              		.loc 1 2993 0
 1439 009a BB43     		bics	r3, r7
 1440              	.LVL163:
2994:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= hsiomReg;
 1441              		.loc 1 2994 0
 1442 009c 009A     		ldr	r2, [sp]
 1443 009e 1343     		orrs	r3, r2
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 82


 1444              	.LVL164:
2995:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1445              		.loc 1 2995 0
 1446 00a0 2360     		str	r3, [r4]
2996:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1447              		.loc 1 2996 0
 1448 00a2 FFF7FEFF 		bl	CyExitCriticalSection
 1449              	.LVL165:
2997:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1450              		.loc 1 2997 0
 1451 00a6 03B0     		add	sp, sp, #12
 1452              		@ sp needed
 1453              	.LVL166:
 1454              	.LVL167:
 1455 00a8 3CBC     		pop	{r2, r3, r4, r5}
 1456 00aa 9046     		mov	r8, r2
 1457 00ac 9946     		mov	r9, r3
 1458 00ae A246     		mov	r10, r4
 1459 00b0 AB46     		mov	fp, r5
 1460 00b2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1461              	.L109:
 1462              		.align	2
 1463              	.L108:
 1464 00b4 00040240 		.word	1073873920
 1465 00b8 00040440 		.word	1074004992
 1466 00bc 08040440 		.word	1074005000
 1467              		.cfi_endproc
 1468              	.LFE23:
 1469              		.size	CapSense_DischargeExtCapacitors, .-CapSense_DischargeExtCapacitors
 1470              		.section	.text.CapSense_SetInactiveElectrodeState,"ax",%progbits
 1471              		.align	2
 1472              		.global	CapSense_SetInactiveElectrodeState
 1473              		.code	16
 1474              		.thumb_func
 1475              		.type	CapSense_SetInactiveElectrodeState, %function
 1476              	CapSense_SetInactiveElectrodeState:
 1477              	.LFB24:
2998:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2999:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
3000:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3002:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV1)
3003:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3004:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
3005:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3006:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3007:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3008:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
3009:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3010:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3011:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
3012:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
3013:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
3014:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
3015:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
3016:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3017:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 83


3018:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
3019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3021:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
3023:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
3024:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodHsiom = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK_
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
3027:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
3028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3029:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CSH capacitor is connected to. */
3030:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3031:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3032:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshHsiom = CY_GET_REG32(CapSense_CSH_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3033:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshDr = CY_GET_REG32(CapSense_CSH_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CSH;
3034:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshPc = CY_GET_REG32(CapSense_CSH_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CSH;
3035:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3037:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3039:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintA capacitor is connected to. */
3040:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAHsiom = CY_GET_REG32(CapSense_CintA_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3041:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintADr = CY_GET_REG32(CapSense_CintA_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTA;
3042:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAPc = CY_GET_REG32(CapSense_CintA_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTA;
3043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3044:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintB capacitor is connected to. */
3045:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBHsiom = CY_GET_REG32(CapSense_CintB_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3046:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBDr = CY_GET_REG32(CapSense_CintB_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTB;
3047:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBPc = CY_GET_REG32(CapSense_CintB_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTB;
3048:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3049:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3050:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3051:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CMOD capacitor from the AMUXBUS and connect it to GND. */
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CMOD,
3053:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_EXT_CAP_DR_MASK_CMOD, 0u);
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
3056:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
3057:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3058:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3059:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3060:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Disconnect the CSH capacitor from the AMUXBUS and connect it to GND. */
3061:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CSH,
3062:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_HSIOM_SEL_GPIO);
3063:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, CapSense_EXT_CAP_DR_MASK_CSH, 0u);
3064:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR, CapSense_EXT_CAP_PC_MASK_CSH,
3065:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_STRONG_CFG_CSH);
3066:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3067:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3068:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3069:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3070:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintA capacitor from the AMUXBUS and connect it to GND. */
3071:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTA,
3072:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3073:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTA, 0u);
3074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTA,
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 84


3075:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTA);
3076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3077:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintB capacitor from the AMUXBUS and connect it to GND. */
3078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTB,
3079:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTB, 0u);
3081:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTB,
3082:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTB);
3083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3085:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
3086:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
3087:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3088:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3089:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CMOD capacitor is connected to. */
3090:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR,
3091:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR,
3093:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR,
3095:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
3096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3098:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Restore the pin configuration, the CSH capacitor is connected to. */
3100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
3101:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_MASK_CSH, cshPc);
3102:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR,
3103:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_DR_MASK_CSH, cshDr);
3104:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR,
3105:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_HSIOM_MASK_CSH, cshHsiom);
3106:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3107:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3109:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3110:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintA capacitor is connected to. */
3111:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR,
3112:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTA, cintAPc);
3113:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR,
3114:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTA, cintADr);
3115:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR,
3116:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTA, cintAHsiom);
3117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3118:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintB capacitor is connected to. */
3119:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR,
3120:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTB, cintBPc);
3121:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR,
3122:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTB, cintBDr);
3123:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR,
3124:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTB, cintBHsiom);
3125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3126:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
3127:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
3128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3129:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3130:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
3131:Generated_Source\PSoC4/CapSense_Sensing.c ****     (CapSense_ENABLE == CapSense_CSX_EN))
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 85


3132:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3133:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SetInactiveElectrodeState
3134:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3135:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3136:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3137:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the RAM data structure with the desired state of inactive
3138:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  electrodes for the specified operation mode. The state of pins is not changed
3139:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  in scope of this routine.
3140:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3141:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3142:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the following registers of RAM data structure:
3143:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSD_ISC_VALUE - Connection of inactive CSD and CSX
3144:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during the regular CSD scan. By default, this register is initialized
3145:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     with the value of Inactive Sensor Connection combobox on the CSD Settings tab.
3146:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSD_E value should be used as the Mode parameter
3147:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3149:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSX_ISC_VALUE - Connection of inactive CSD, CSX and
3150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during the regular CSX scan. By default, this
3151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     register is initialized with the value of Inactive Sensor Connection combobox
3152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     on the CSX Settings tab.
3153:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSX_E value should be used as the Mode parameter
3154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SNS_CAP_ISC_VALUE - Connection of inactive CSD and CSX
3157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during measurement of CSD electrodes capacitance.
3158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     This register is initialized with the CapSense_SNS_CONNECTION_GROUND value
3159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     by default.
3160:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SNS_CAP_E value should be used as the Mode parameter
3161:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3162:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3163:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSX_SNS_CAP_ISC_VALUE - Connection of inactive CSD, CSX and
3164:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during measurement of CSX electrodes (Tx and Rx)
3165:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     capacitance. This register is initialized with the CapSense_SNS_CONNECTION_GROUND
3166:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     value by default.
3167:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSX_SNS_CAP_E value should be used as the Mode parameter
3168:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3169:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3170:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SH_CAP_ISC_VALUE - Connection of inactive CSD and CSX electrodes
3171:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     measurement of dedicated Shield  electrodes capacitance. This register is initialized wit
3172:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the CapSense_SNS_CONNECTION_GROUND value by default.
3173:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SH_CAP_E value should be used as the Mode parameter
3174:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3175:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3176:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3177:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode Operation mode, the state of inactive sensors should be configured for.
3178:Generated_Source\PSoC4/CapSense_Sensing.c ****     *       This parameter can take the following values:
3179:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSD_E - Regular CSD scan.
3180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSX_E - Regular CSX scan.
3181:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SNS_CAP_E - Measurement of the CSD sensor capacitance.
3182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSX_SNS_CAP_E - Measurement of the CSX electrode capacitance.
3183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SH_CAP_E - Measurement of the dedicated CSD Shield
3184:Generated_Source\PSoC4/CapSense_Sensing.c ****     *          electrode capacitance.
3185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3186:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  state The desired state of inactive sensors.
3188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        This parameter can take the following values:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 86


3189:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_GROUND - Inactive sensors are connected to the ground.
3190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_HIGHZ - Inactive sensors are floating (not
3191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           connected to GND or Shield).
3192:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_SHIELD - Inactive sensors are connected to the shield.
3193:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           This option is available only if the Enable shield electrode check box is set.
3194:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           At least one dedicated shield electrode is required to use the
3195:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           CapSense_SNS_CONNECTION_SHIELD option for the CapSense_BIST_CSD_SH_CAP_E
3196:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           operation mode.
3197:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
3199:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
3200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation was successfully completed.
3201:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
3202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3204:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32_t CapSense_SetInactiveElectrodeState(CapSense_OPERATION_MODE_ENUM mode, uint32_t state)
3205:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1478              		.loc 1 3205 0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 0
 1481              		@ frame_needed = 0, uses_anonymous_args = 0
 1482              	.LVL168:
 1483 0000 10B5     		push	{r4, lr}
 1484              		.cfi_def_cfa_offset 8
 1485              		.cfi_offset 4, -8
 1486              		.cfi_offset 14, -4
 1487              	.LVL169:
3206:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
3207:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3208:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(mode)
 1488              		.loc 1 3208 0
 1489 0002 0028     		cmp	r0, #0
 1490 0004 04D1     		bne	.L114
3209:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
3210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSD_EN)
3211:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSD_E:
3212:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsdISC = (uint8)state;
 1491              		.loc 1 3212 0
 1492 0006 9123     		movs	r3, #145
 1493 0008 5B00     		lsls	r3, r3, #1
 1494 000a 044A     		ldr	r2, .L115
 1495 000c D154     		strb	r1, [r2, r3]
3213:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1496              		.loc 1 3213 0
 1497 000e 03E0     		b	.L113
 1498              	.L114:
3214:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3215:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3216:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSX_EN)
3217:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSX_E:
3218:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsxISC = (uint8)state;
3219:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3220:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3222:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3223:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3224:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN))
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 87


3225:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SNS_CAP_E:
3226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsdSnsCapISC = (uint8)state;
3227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3228:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3229:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3230:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3231:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3232:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSX_EN))
3233:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSX_SNS_CAP_E:
3234:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsxSnsCapISC = (uint8)state;
3235:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3236:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3238:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3239:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SH_CAP_EN) &&\
3240:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN) &&\
3241:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_SHIELD_EN))
3242:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SH_CAP_E:
3243:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_CSD_TOTAL_SHIELD_COUNT == 0u) &&
3244:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_SNS_CONNECTION_SHIELD != state))
3245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3246:Generated_Source\PSoC4/CapSense_Sensing.c ****                     retVal = CYRET_BAD_PARAM;
3247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3248:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
3249:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3250:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.selfTestConfig.bistCsdShCapISC = (uint8)state;
3251:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3252:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3253:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3255:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
3256:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0u);
 1499              		.loc 1 3256 0 discriminator 1
 1500 0010 0020     		movs	r0, #0
 1501              	.LVL170:
 1502 0012 FFF7FEFF 		bl	CyHalt
 1503              	.LVL171:
3257:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = CYRET_BAD_PARAM;
 1504              		.loc 1 3257 0 discriminator 1
 1505 0016 0120     		movs	r0, #1
 1506              	.LVL172:
 1507              	.L113:
3258:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
3259:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
3260:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3261:Generated_Source\PSoC4/CapSense_Sensing.c ****         return(retVal);
3262:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1508              		.loc 1 3262 0
 1509              		@ sp needed
 1510 0018 10BD     		pop	{r4, pc}
 1511              	.L116:
 1512 001a C046     		.align	2
 1513              	.L115:
 1514 001c 00000000 		.word	CapSense_dsRam
 1515              		.cfi_endproc
 1516              	.LFE24:
 1517              		.size	CapSense_SetInactiveElectrodeState, .-CapSense_SetInactiveElectrodeState
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 88


 1518              		.section	.text.CapSense_WriteBitsSafe,"ax",%progbits
 1519              		.align	2
 1520              		.global	CapSense_WriteBitsSafe
 1521              		.code	16
 1522              		.thumb_func
 1523              		.type	CapSense_WriteBitsSafe, %function
 1524              	CapSense_WriteBitsSafe:
 1525              	.LFB25:
3263:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
3264:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSX_EN)) */
3265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3267:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
3268:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_WriteBitsSafe
3269:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
3270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
3272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3273:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3274:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3275:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
3276:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3277:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param regPtr
3280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a pointer to port-pin register.
3281:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3282:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mask
3283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies bits to be modified.
3284:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3285:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param value
3286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a value to be written to the register.
3287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3288:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
3289:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_WriteBitsSafe(reg32 * regPtr, uint32 mask, uint32 value)
3290:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 1526              		.loc 1 3290 0
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 0
 1529              		@ frame_needed = 0, uses_anonymous_args = 0
 1530              	.LVL173:
 1531 0000 70B5     		push	{r4, r5, r6, lr}
 1532              		.cfi_def_cfa_offset 16
 1533              		.cfi_offset 4, -16
 1534              		.cfi_offset 5, -12
 1535              		.cfi_offset 6, -8
 1536              		.cfi_offset 14, -4
 1537 0002 0500     		movs	r5, r0
 1538 0004 0E00     		movs	r6, r1
 1539 0006 1400     		movs	r4, r2
3291:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 interruptState = CyEnterCriticalSection();
 1540              		.loc 1 3291 0
 1541 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1542              	.LVL174:
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1543              		.loc 1 3292 0
 1544 000c 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 89


 1545 000e 5C40     		eors	r4, r3
 1546              	.LVL175:
 1547 0010 3440     		ands	r4, r6
 1548 0012 5C40     		eors	r4, r3
 1549 0014 2C60     		str	r4, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
 1550              		.loc 1 3293 0
 1551 0016 FFF7FEFF 		bl	CyExitCriticalSection
 1552              	.LVL176:
3294:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1553              		.loc 1 3294 0
 1554              		@ sp needed
 1555              	.LVL177:
 1556              	.LVL178:
 1557 001a 70BD     		pop	{r4, r5, r6, pc}
 1558              		.cfi_endproc
 1559              	.LFE25:
 1560              		.size	CapSense_WriteBitsSafe, .-CapSense_WriteBitsSafe
 1561              		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
 1562              		.align	2
 1563              		.code	16
 1564              		.thumb_func
 1565              		.type	CapSense_SsCSDDisableMode, %function
 1566              	CapSense_SsCSDDisableMode:
 1567              	.LFB9:
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 1568              		.loc 1 954 0
 1569              		.cfi_startproc
 1570              		@ args = 0, pretend = 0, frame = 0
 1571              		@ frame_needed = 0, uses_anonymous_args = 0
 1572 0000 10B5     		push	{r4, lr}
 1573              		.cfi_def_cfa_offset 8
 1574              		.cfi_offset 4, -8
 1575              		.cfi_offset 14, -4
 968:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1576              		.loc 1 968 0
 1577 0002 0022     		movs	r2, #0
 1578 0004 F021     		movs	r1, #240
 1579 0006 0448     		ldr	r0, .L119
 1580 0008 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1581              	.LVL179:
 971:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1582              		.loc 1 971 0
 1583 000c FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 1584              	.LVL180:
 981:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 1585              		.loc 1 981 0
 1586 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableShieldElectrodes
 1587              	.LVL181:
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1588              		.loc 1 983 0
 1589              		@ sp needed
 1590 0014 10BD     		pop	{r4, pc}
 1591              	.L120:
 1592 0016 C046     		.align	2
 1593              	.L119:
 1594 0018 00040240 		.word	1073873920
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 90


 1595              		.cfi_endproc
 1596              	.LFE9:
 1597              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 1598              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 1599              		.align	2
 1600              		.global	CapSense_SsSwitchSensingMode
 1601              		.code	16
 1602              		.thumb_func
 1603              		.type	CapSense_SsSwitchSensingMode, %function
 1604              	CapSense_SsSwitchSensingMode:
 1605              	.LFB10:
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 1606              		.loc 1 1068 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610              	.LVL182:
 1611 0000 10B5     		push	{r4, lr}
 1612              		.cfi_def_cfa_offset 8
 1613              		.cfi_offset 4, -8
 1614              		.cfi_offset 14, -4
 1615 0002 0400     		movs	r4, r0
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1616              		.loc 1 1069 0
 1617 0004 0C4B     		ldr	r3, .L125
 1618 0006 1B78     		ldrb	r3, [r3]
 1619 0008 8342     		cmp	r3, r0
 1620 000a 14D0     		beq	.L121
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1621              		.loc 1 1072 0
 1622 000c 012B     		cmp	r3, #1
 1623 000e 01D1     		bne	.L123
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1624              		.loc 1 1075 0
 1625 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 1626              	.LVL183:
 1627              	.L123:
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1628              		.loc 1 1105 0
 1629 0014 012C     		cmp	r4, #1
 1630 0016 05D1     		bne	.L124
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 1631              		.loc 1 1109 0
 1632 0018 FFF7FEFF 		bl	CapSense_SsCSDInitialize
 1633              	.LVL184:
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1634              		.loc 1 1110 0
 1635 001c 0122     		movs	r2, #1
 1636 001e 064B     		ldr	r3, .L125
 1637 0020 1A70     		strb	r2, [r3]
 1638 0022 08E0     		b	.L121
 1639              	.L124:
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1640              		.loc 1 1113 0
 1641 0024 022C     		cmp	r4, #2
 1642 0026 06D0     		beq	.L121
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 91


 1643              		.loc 1 1121 0
 1644 0028 042C     		cmp	r4, #4
 1645 002a 04D0     		beq	.L121
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1646              		.loc 1 1129 0
 1647 002c 032C     		cmp	r4, #3
 1648 002e 02D0     		beq	.L121
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1649              		.loc 1 1138 0
 1650 0030 0022     		movs	r2, #0
 1651 0032 014B     		ldr	r3, .L125
 1652 0034 1A70     		strb	r2, [r3]
 1653              	.L121:
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1654              		.loc 1 1141 0
 1655              		@ sp needed
 1656 0036 10BD     		pop	{r4, pc}
 1657              	.L126:
 1658              		.align	2
 1659              	.L125:
 1660 0038 00000000 		.word	.LANCHOR0
 1661              		.cfi_endproc
 1662              	.LFE10:
 1663              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 1664              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1665              		.align	2
 1666              		.global	CapSense_SsInitialize
 1667              		.code	16
 1668              		.thumb_func
 1669              		.type	CapSense_SsInitialize, %function
 1670              	CapSense_SsInitialize:
 1671              	.LFB7:
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1672              		.loc 1 708 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676 0000 10B5     		push	{r4, lr}
 1677              		.cfi_def_cfa_offset 8
 1678              		.cfi_offset 4, -8
 1679              		.cfi_offset 14, -4
 1680              	.LVL185:
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1681              		.loc 1 747 0
 1682 0002 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1683              	.LVL186:
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 1684              		.loc 1 752 0
 1685 0006 0020     		movs	r0, #0
 1686 0008 FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 1687              	.LVL187:
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1688              		.loc 1 753 0
 1689 000c 0021     		movs	r1, #0
 1690 000e 2423     		movs	r3, #36
 1691 0010 FF33     		adds	r3, r3, #255
 1692 0012 054A     		ldr	r2, .L128
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 92


 1693 0014 D154     		strb	r1, [r2, r3]
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 1694              		.loc 1 755 0
 1695 0016 0020     		movs	r0, #0
 1696 0018 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1697              	.LVL188:
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 1698              		.loc 1 758 0
 1699 001c 0120     		movs	r0, #1
 1700 001e FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1701              	.LVL189:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1702              		.loc 1 769 0
 1703 0022 0020     		movs	r0, #0
 1704              		@ sp needed
 1705 0024 10BD     		pop	{r4, pc}
 1706              	.L129:
 1707 0026 C046     		.align	2
 1708              	.L128:
 1709 0028 00000000 		.word	CapSense_dsRam
 1710              		.cfi_endproc
 1711              	.LFE7:
 1712              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1713              		.global	CapSense_idacGainTable
 1714              		.comm	CapSense_curSnsIOPtr,4,4
 1715              		.global	CapSense_curFlashSnsPtr
 1716              		.global	CapSense_curFlashWdgtPtr
 1717              		.comm	CapSense_curRamSnsPtr,4,4
 1718              		.global	CapSense_requestScanAllWidget
 1719              		.global	CapSense_sensorIndex
 1720              		.global	CapSense_widgetIndex
 1721              		.global	CapSense_scanFreqIndex
 1722              		.global	CapSense_currentSenseMethod
 1723              		.section	.rodata
 1724              		.align	2
 1725              		.type	CapSense_idacGainTable, %object
 1726              		.size	CapSense_idacGainTable, 48
 1727              	CapSense_idacGainTable:
 1728 0000 00000001 		.word	16777216
 1729 0004 7C920000 		.word	37500
 1730 0008 00000003 		.word	50331648
 1731 000c F8240100 		.word	75000
 1732 0010 00004001 		.word	20971520
 1733 0014 E0930400 		.word	300000
 1734 0018 00004003 		.word	54525952
 1735 001c C0270900 		.word	600000
 1736 0020 00008001 		.word	25165824
 1737 0024 009F2400 		.word	2400000
 1738 0028 00008003 		.word	58720256
 1739 002c 003E4900 		.word	4800000
 1740              		.type	CapSense_scanFreqIndex, %object
 1741              		.size	CapSense_scanFreqIndex, 1
 1742              	CapSense_scanFreqIndex:
 1743 0030 00       		.space	1
 1744              		.bss
 1745              		.align	2
 1746              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 93


 1747              		.type	CapSense_currentSenseMethod, %object
 1748              		.size	CapSense_currentSenseMethod, 1
 1749              	CapSense_currentSenseMethod:
 1750 0000 00       		.space	1
 1751              		.type	CapSense_requestScanAllWidget, %object
 1752              		.size	CapSense_requestScanAllWidget, 1
 1753              	CapSense_requestScanAllWidget:
 1754 0001 00       		.space	1
 1755              		.type	CapSense_widgetIndex, %object
 1756              		.size	CapSense_widgetIndex, 1
 1757              	CapSense_widgetIndex:
 1758 0002 00       		.space	1
 1759 0003 00       		.space	1
 1760              		.type	CapSense_curFlashSnsPtr, %object
 1761              		.size	CapSense_curFlashSnsPtr, 4
 1762              	CapSense_curFlashSnsPtr:
 1763 0004 00000000 		.space	4
 1764              		.type	CapSense_curFlashWdgtPtr, %object
 1765              		.size	CapSense_curFlashWdgtPtr, 4
 1766              	CapSense_curFlashWdgtPtr:
 1767 0008 00000000 		.space	4
 1768              		.type	CapSense_sensorIndex, %object
 1769              		.size	CapSense_sensorIndex, 1
 1770              	CapSense_sensorIndex:
 1771 000c 00       		.space	1
 1772              		.text
 1773              	.Letext0:
 1774              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1775              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1776              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1777              		.file 5 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1778              		.file 6 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1779              		.file 7 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 1780              		.file 8 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1781              		.file 9 "Generated_Source\\PSoC4/CyLib.h"
 1782              		.file 10 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1783              		.section	.debug_info,"",%progbits
 1784              	.Ldebug_info0:
 1785 0000 68140000 		.4byte	0x1468
 1786 0004 0400     		.2byte	0x4
 1787 0006 00000000 		.4byte	.Ldebug_abbrev0
 1788 000a 04       		.byte	0x4
 1789 000b 01       		.uleb128 0x1
 1790 000c 64030000 		.4byte	.LASF221
 1791 0010 0C       		.byte	0xc
 1792 0011 7F0B0000 		.4byte	.LASF222
 1793 0015 FB010000 		.4byte	.LASF223
 1794 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1795 001d 00000000 		.4byte	0
 1796 0021 00000000 		.4byte	.Ldebug_line0
 1797 0025 02       		.uleb128 0x2
 1798 0026 01       		.byte	0x1
 1799 0027 06       		.byte	0x6
 1800 0028 220E0000 		.4byte	.LASF0
 1801 002c 02       		.uleb128 0x2
 1802 002d 01       		.byte	0x1
 1803 002e 08       		.byte	0x8
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 94


 1804 002f D80C0000 		.4byte	.LASF1
 1805 0033 02       		.uleb128 0x2
 1806 0034 02       		.byte	0x2
 1807 0035 05       		.byte	0x5
 1808 0036 4E0A0000 		.4byte	.LASF2
 1809 003a 02       		.uleb128 0x2
 1810 003b 02       		.byte	0x2
 1811 003c 07       		.byte	0x7
 1812 003d 4A0E0000 		.4byte	.LASF3
 1813 0041 02       		.uleb128 0x2
 1814 0042 04       		.byte	0x4
 1815 0043 05       		.byte	0x5
 1816 0044 860A0000 		.4byte	.LASF4
 1817 0048 03       		.uleb128 0x3
 1818 0049 E60C0000 		.4byte	.LASF9
 1819 004d 02       		.byte	0x2
 1820 004e 41       		.byte	0x41
 1821 004f 53000000 		.4byte	0x53
 1822 0053 02       		.uleb128 0x2
 1823 0054 04       		.byte	0x4
 1824 0055 07       		.byte	0x7
 1825 0056 090C0000 		.4byte	.LASF5
 1826 005a 02       		.uleb128 0x2
 1827 005b 08       		.byte	0x8
 1828 005c 05       		.byte	0x5
 1829 005d 5E070000 		.4byte	.LASF6
 1830 0061 02       		.uleb128 0x2
 1831 0062 08       		.byte	0x8
 1832 0063 07       		.byte	0x7
 1833 0064 1F040000 		.4byte	.LASF7
 1834 0068 04       		.uleb128 0x4
 1835 0069 04       		.byte	0x4
 1836 006a 05       		.byte	0x5
 1837 006b 696E7400 		.ascii	"int\000"
 1838 006f 02       		.uleb128 0x2
 1839 0070 04       		.byte	0x4
 1840 0071 07       		.byte	0x7
 1841 0072 D0000000 		.4byte	.LASF8
 1842 0076 03       		.uleb128 0x3
 1843 0077 17030000 		.4byte	.LASF10
 1844 007b 03       		.byte	0x3
 1845 007c 30       		.byte	0x30
 1846 007d 48000000 		.4byte	0x48
 1847 0081 05       		.uleb128 0x5
 1848 0082 A40E0000 		.4byte	.LASF11
 1849 0086 04       		.byte	0x4
 1850 0087 FC01     		.2byte	0x1fc
 1851 0089 2C000000 		.4byte	0x2c
 1852 008d 05       		.uleb128 0x5
 1853 008e 77060000 		.4byte	.LASF12
 1854 0092 04       		.byte	0x4
 1855 0093 FD01     		.2byte	0x1fd
 1856 0095 3A000000 		.4byte	0x3a
 1857 0099 05       		.uleb128 0x5
 1858 009a AA080000 		.4byte	.LASF13
 1859 009e 04       		.byte	0x4
 1860 009f FE01     		.2byte	0x1fe
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 95


 1861 00a1 53000000 		.4byte	0x53
 1862 00a5 02       		.uleb128 0x2
 1863 00a6 04       		.byte	0x4
 1864 00a7 04       		.byte	0x4
 1865 00a8 58030000 		.4byte	.LASF14
 1866 00ac 02       		.uleb128 0x2
 1867 00ad 08       		.byte	0x8
 1868 00ae 04       		.byte	0x4
 1869 00af AA0E0000 		.4byte	.LASF15
 1870 00b3 02       		.uleb128 0x2
 1871 00b4 01       		.byte	0x1
 1872 00b5 08       		.byte	0x8
 1873 00b6 D3050000 		.4byte	.LASF16
 1874 00ba 05       		.uleb128 0x5
 1875 00bb A90C0000 		.4byte	.LASF17
 1876 00bf 04       		.byte	0x4
 1877 00c0 9E02     		.2byte	0x29e
 1878 00c2 53000000 		.4byte	0x53
 1879 00c6 06       		.uleb128 0x6
 1880 00c7 81000000 		.4byte	0x81
 1881 00cb 05       		.uleb128 0x5
 1882 00cc 9A090000 		.4byte	.LASF18
 1883 00d0 04       		.byte	0x4
 1884 00d1 A802     		.2byte	0x2a8
 1885 00d3 D7000000 		.4byte	0xd7
 1886 00d7 06       		.uleb128 0x6
 1887 00d8 99000000 		.4byte	0x99
 1888 00dc 05       		.uleb128 0x5
 1889 00dd 38080000 		.4byte	.LASF19
 1890 00e1 04       		.byte	0x4
 1891 00e2 B802     		.2byte	0x2b8
 1892 00e4 E8000000 		.4byte	0xe8
 1893 00e8 07       		.uleb128 0x7
 1894 00e9 04       		.byte	0x4
 1895 00ea EE000000 		.4byte	0xee
 1896 00ee 08       		.uleb128 0x8
 1897 00ef 05       		.uleb128 0x5
 1898 00f0 470D0000 		.4byte	.LASF20
 1899 00f4 05       		.byte	0x5
 1900 00f5 4701     		.2byte	0x147
 1901 00f7 8D000000 		.4byte	0x8d
 1902 00fb 05       		.uleb128 0x5
 1903 00fc E1060000 		.4byte	.LASF21
 1904 0100 05       		.byte	0x5
 1905 0101 4B01     		.2byte	0x14b
 1906 0103 81000000 		.4byte	0x81
 1907 0107 09       		.uleb128 0x9
 1908 0108 01       		.byte	0x1
 1909 0109 2C000000 		.4byte	0x2c
 1910 010d 06       		.byte	0x6
 1911 010e 61       		.byte	0x61
 1912 010f 3E010000 		.4byte	0x13e
 1913 0113 0A       		.uleb128 0xa
 1914 0114 1F0B0000 		.4byte	.LASF22
 1915 0118 01       		.byte	0x1
 1916 0119 0A       		.uleb128 0xa
 1917 011a E5080000 		.4byte	.LASF23
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 96


 1918 011e 02       		.byte	0x2
 1919 011f 0A       		.uleb128 0xa
 1920 0120 43050000 		.4byte	.LASF24
 1921 0124 03       		.byte	0x3
 1922 0125 0A       		.uleb128 0xa
 1923 0126 4B040000 		.4byte	.LASF25
 1924 012a 04       		.byte	0x4
 1925 012b 0A       		.uleb128 0xa
 1926 012c AC020000 		.4byte	.LASF26
 1927 0130 05       		.byte	0x5
 1928 0131 0A       		.uleb128 0xa
 1929 0132 00000000 		.4byte	.LASF27
 1930 0136 06       		.byte	0x6
 1931 0137 0A       		.uleb128 0xa
 1932 0138 D1090000 		.4byte	.LASF28
 1933 013c 07       		.byte	0x7
 1934 013d 00       		.byte	0
 1935 013e 03       		.uleb128 0x3
 1936 013f 8B080000 		.4byte	.LASF29
 1937 0143 06       		.byte	0x6
 1938 0144 69       		.byte	0x69
 1939 0145 07010000 		.4byte	0x107
 1940 0149 09       		.uleb128 0x9
 1941 014a 01       		.byte	0x1
 1942 014b 2C000000 		.4byte	0x2c
 1943 014f 06       		.byte	0x6
 1944 0150 70       		.byte	0x70
 1945 0151 74010000 		.4byte	0x174
 1946 0155 0A       		.uleb128 0xa
 1947 0156 BB000000 		.4byte	.LASF30
 1948 015a 00       		.byte	0
 1949 015b 0A       		.uleb128 0xa
 1950 015c C00B0000 		.4byte	.LASF31
 1951 0160 01       		.byte	0x1
 1952 0161 0A       		.uleb128 0xa
 1953 0162 CC0A0000 		.4byte	.LASF32
 1954 0166 02       		.byte	0x2
 1955 0167 0A       		.uleb128 0xa
 1956 0168 700D0000 		.4byte	.LASF33
 1957 016c 03       		.byte	0x3
 1958 016d 0A       		.uleb128 0xa
 1959 016e 59090000 		.4byte	.LASF34
 1960 0172 04       		.byte	0x4
 1961 0173 00       		.byte	0
 1962 0174 03       		.uleb128 0x3
 1963 0175 1A070000 		.4byte	.LASF35
 1964 0179 06       		.byte	0x6
 1965 017a 76       		.byte	0x76
 1966 017b 49010000 		.4byte	0x149
 1967 017f 0B       		.uleb128 0xb
 1968 0180 12       		.byte	0x12
 1969 0181 06       		.byte	0x6
 1970 0182 AD       		.byte	0xad
 1971 0183 31020000 		.4byte	0x231
 1972 0187 0C       		.uleb128 0xc
 1973 0188 A2060000 		.4byte	.LASF36
 1974 018c 06       		.byte	0x6
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 97


 1975 018d B2       		.byte	0xb2
 1976 018e 8D000000 		.4byte	0x8d
 1977 0192 00       		.byte	0
 1978 0193 0C       		.uleb128 0xc
 1979 0194 6B0C0000 		.4byte	.LASF37
 1980 0198 06       		.byte	0x6
 1981 0199 B7       		.byte	0xb7
 1982 019a EF000000 		.4byte	0xef
 1983 019e 02       		.byte	0x2
 1984 019f 0C       		.uleb128 0xc
 1985 01a0 A5050000 		.4byte	.LASF38
 1986 01a4 06       		.byte	0x6
 1987 01a5 BC       		.byte	0xbc
 1988 01a6 81000000 		.4byte	0x81
 1989 01aa 04       		.byte	0x4
 1990 01ab 0C       		.uleb128 0xc
 1991 01ac 24080000 		.4byte	.LASF39
 1992 01b0 06       		.byte	0x6
 1993 01b1 C1       		.byte	0xc1
 1994 01b2 81000000 		.4byte	0x81
 1995 01b6 05       		.byte	0x5
 1996 01b7 0C       		.uleb128 0xc
 1997 01b8 38050000 		.4byte	.LASF40
 1998 01bc 06       		.byte	0x6
 1999 01bd C7       		.byte	0xc7
 2000 01be 81000000 		.4byte	0x81
 2001 01c2 06       		.byte	0x6
 2002 01c3 0C       		.uleb128 0xc
 2003 01c4 81070000 		.4byte	.LASF41
 2004 01c8 06       		.byte	0x6
 2005 01c9 CD       		.byte	0xcd
 2006 01ca 81000000 		.4byte	0x81
 2007 01ce 07       		.byte	0x7
 2008 01cf 0C       		.uleb128 0xc
 2009 01d0 8E050000 		.4byte	.LASF42
 2010 01d4 06       		.byte	0x6
 2011 01d5 D4       		.byte	0xd4
 2012 01d6 FB000000 		.4byte	0xfb
 2013 01da 08       		.byte	0x8
 2014 01db 0C       		.uleb128 0xc
 2015 01dc 2A0C0000 		.4byte	.LASF43
 2016 01e0 06       		.byte	0x6
 2017 01e1 DB       		.byte	0xdb
 2018 01e2 31020000 		.4byte	0x231
 2019 01e6 09       		.byte	0x9
 2020 01e7 0C       		.uleb128 0xc
 2021 01e8 440B0000 		.4byte	.LASF44
 2022 01ec 06       		.byte	0x6
 2023 01ed E2       		.byte	0xe2
 2024 01ee 31020000 		.4byte	0x231
 2025 01f2 0A       		.byte	0xa
 2026 01f3 0C       		.uleb128 0xc
 2027 01f4 40030000 		.4byte	.LASF45
 2028 01f8 06       		.byte	0x6
 2029 01f9 E7       		.byte	0xe7
 2030 01fa 81000000 		.4byte	0x81
 2031 01fe 0B       		.byte	0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 98


 2032 01ff 0C       		.uleb128 0xc
 2033 0200 D10D0000 		.4byte	.LASF46
 2034 0204 06       		.byte	0x6
 2035 0205 EF       		.byte	0xef
 2036 0206 8D000000 		.4byte	0x8d
 2037 020a 0C       		.byte	0xc
 2038 020b 0C       		.uleb128 0xc
 2039 020c 7E060000 		.4byte	.LASF47
 2040 0210 06       		.byte	0x6
 2041 0211 F6       		.byte	0xf6
 2042 0212 8D000000 		.4byte	0x8d
 2043 0216 0E       		.byte	0xe
 2044 0217 0C       		.uleb128 0xc
 2045 0218 EB090000 		.4byte	.LASF48
 2046 021c 06       		.byte	0x6
 2047 021d FB       		.byte	0xfb
 2048 021e 81000000 		.4byte	0x81
 2049 0222 10       		.byte	0x10
 2050 0223 0D       		.uleb128 0xd
 2051 0224 EE050000 		.4byte	.LASF49
 2052 0228 06       		.byte	0x6
 2053 0229 0001     		.2byte	0x100
 2054 022b 81000000 		.4byte	0x81
 2055 022f 11       		.byte	0x11
 2056 0230 00       		.byte	0
 2057 0231 0E       		.uleb128 0xe
 2058 0232 81000000 		.4byte	0x81
 2059 0236 41020000 		.4byte	0x241
 2060 023a 0F       		.uleb128 0xf
 2061 023b 41020000 		.4byte	0x241
 2062 023f 00       		.byte	0
 2063 0240 00       		.byte	0
 2064 0241 02       		.uleb128 0x2
 2065 0242 04       		.byte	0x4
 2066 0243 07       		.byte	0x7
 2067 0244 F80B0000 		.4byte	.LASF50
 2068 0248 05       		.uleb128 0x5
 2069 0249 6F080000 		.4byte	.LASF51
 2070 024d 06       		.byte	0x6
 2071 024e 0101     		.2byte	0x101
 2072 0250 7F010000 		.4byte	0x17f
 2073 0254 10       		.uleb128 0x10
 2074 0255 16       		.byte	0x16
 2075 0256 06       		.byte	0x6
 2076 0257 0601     		.2byte	0x106
 2077 0259 2E030000 		.4byte	0x32e
 2078 025d 0D       		.uleb128 0xd
 2079 025e A2060000 		.4byte	.LASF36
 2080 0262 06       		.byte	0x6
 2081 0263 0B01     		.2byte	0x10b
 2082 0265 8D000000 		.4byte	0x8d
 2083 0269 00       		.byte	0
 2084 026a 0D       		.uleb128 0xd
 2085 026b 6B0C0000 		.4byte	.LASF37
 2086 026f 06       		.byte	0x6
 2087 0270 1001     		.2byte	0x110
 2088 0272 EF000000 		.4byte	0xef
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 99


 2089 0276 02       		.byte	0x2
 2090 0277 0D       		.uleb128 0xd
 2091 0278 A5050000 		.4byte	.LASF38
 2092 027c 06       		.byte	0x6
 2093 027d 1501     		.2byte	0x115
 2094 027f 81000000 		.4byte	0x81
 2095 0283 04       		.byte	0x4
 2096 0284 0D       		.uleb128 0xd
 2097 0285 24080000 		.4byte	.LASF39
 2098 0289 06       		.byte	0x6
 2099 028a 1A01     		.2byte	0x11a
 2100 028c 81000000 		.4byte	0x81
 2101 0290 05       		.byte	0x5
 2102 0291 0D       		.uleb128 0xd
 2103 0292 38050000 		.4byte	.LASF40
 2104 0296 06       		.byte	0x6
 2105 0297 2001     		.2byte	0x120
 2106 0299 81000000 		.4byte	0x81
 2107 029d 06       		.byte	0x6
 2108 029e 0D       		.uleb128 0xd
 2109 029f 81070000 		.4byte	.LASF41
 2110 02a3 06       		.byte	0x6
 2111 02a4 2601     		.2byte	0x126
 2112 02a6 81000000 		.4byte	0x81
 2113 02aa 07       		.byte	0x7
 2114 02ab 0D       		.uleb128 0xd
 2115 02ac 8E050000 		.4byte	.LASF42
 2116 02b0 06       		.byte	0x6
 2117 02b1 2D01     		.2byte	0x12d
 2118 02b3 FB000000 		.4byte	0xfb
 2119 02b7 08       		.byte	0x8
 2120 02b8 0D       		.uleb128 0xd
 2121 02b9 2A0C0000 		.4byte	.LASF43
 2122 02bd 06       		.byte	0x6
 2123 02be 3401     		.2byte	0x134
 2124 02c0 31020000 		.4byte	0x231
 2125 02c4 09       		.byte	0x9
 2126 02c5 0D       		.uleb128 0xd
 2127 02c6 440B0000 		.4byte	.LASF44
 2128 02ca 06       		.byte	0x6
 2129 02cb 3B01     		.2byte	0x13b
 2130 02cd 31020000 		.4byte	0x231
 2131 02d1 0A       		.byte	0xa
 2132 02d2 0D       		.uleb128 0xd
 2133 02d3 40030000 		.4byte	.LASF45
 2134 02d7 06       		.byte	0x6
 2135 02d8 4001     		.2byte	0x140
 2136 02da 81000000 		.4byte	0x81
 2137 02de 0B       		.byte	0xb
 2138 02df 0D       		.uleb128 0xd
 2139 02e0 D10D0000 		.4byte	.LASF46
 2140 02e4 06       		.byte	0x6
 2141 02e5 4801     		.2byte	0x148
 2142 02e7 8D000000 		.4byte	0x8d
 2143 02eb 0C       		.byte	0xc
 2144 02ec 0D       		.uleb128 0xd
 2145 02ed 7E060000 		.4byte	.LASF47
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 100


 2146 02f1 06       		.byte	0x6
 2147 02f2 4F01     		.2byte	0x14f
 2148 02f4 8D000000 		.4byte	0x8d
 2149 02f8 0E       		.byte	0xe
 2150 02f9 0D       		.uleb128 0xd
 2151 02fa EB090000 		.4byte	.LASF48
 2152 02fe 06       		.byte	0x6
 2153 02ff 5401     		.2byte	0x154
 2154 0301 81000000 		.4byte	0x81
 2155 0305 10       		.byte	0x10
 2156 0306 0D       		.uleb128 0xd
 2157 0307 EE050000 		.4byte	.LASF49
 2158 030b 06       		.byte	0x6
 2159 030c 5901     		.2byte	0x159
 2160 030e 81000000 		.4byte	0x81
 2161 0312 11       		.byte	0x11
 2162 0313 0D       		.uleb128 0xd
 2163 0314 130D0000 		.4byte	.LASF52
 2164 0318 06       		.byte	0x6
 2165 0319 5E01     		.2byte	0x15e
 2166 031b 8D000000 		.4byte	0x8d
 2167 031f 12       		.byte	0x12
 2168 0320 0D       		.uleb128 0xd
 2169 0321 180D0000 		.4byte	.LASF53
 2170 0325 06       		.byte	0x6
 2171 0326 6301     		.2byte	0x163
 2172 0328 8D000000 		.4byte	0x8d
 2173 032c 14       		.byte	0x14
 2174 032d 00       		.byte	0
 2175 032e 05       		.uleb128 0x5
 2176 032f 9F0A0000 		.4byte	.LASF54
 2177 0333 06       		.byte	0x6
 2178 0334 6401     		.2byte	0x164
 2179 0336 54020000 		.4byte	0x254
 2180 033a 10       		.uleb128 0x10
 2181 033b 12       		.byte	0x12
 2182 033c 06       		.byte	0x6
 2183 033d 6901     		.2byte	0x169
 2184 033f FA030000 		.4byte	0x3fa
 2185 0343 0D       		.uleb128 0xd
 2186 0344 A2060000 		.4byte	.LASF36
 2187 0348 06       		.byte	0x6
 2188 0349 6E01     		.2byte	0x16e
 2189 034b 8D000000 		.4byte	0x8d
 2190 034f 00       		.byte	0
 2191 0350 0D       		.uleb128 0xd
 2192 0351 6B0C0000 		.4byte	.LASF37
 2193 0355 06       		.byte	0x6
 2194 0356 7301     		.2byte	0x173
 2195 0358 EF000000 		.4byte	0xef
 2196 035c 02       		.byte	0x2
 2197 035d 0D       		.uleb128 0xd
 2198 035e A5050000 		.4byte	.LASF38
 2199 0362 06       		.byte	0x6
 2200 0363 7801     		.2byte	0x178
 2201 0365 81000000 		.4byte	0x81
 2202 0369 04       		.byte	0x4
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 101


 2203 036a 0D       		.uleb128 0xd
 2204 036b 24080000 		.4byte	.LASF39
 2205 036f 06       		.byte	0x6
 2206 0370 7D01     		.2byte	0x17d
 2207 0372 81000000 		.4byte	0x81
 2208 0376 05       		.byte	0x5
 2209 0377 0D       		.uleb128 0xd
 2210 0378 38050000 		.4byte	.LASF40
 2211 037c 06       		.byte	0x6
 2212 037d 8301     		.2byte	0x183
 2213 037f 81000000 		.4byte	0x81
 2214 0383 06       		.byte	0x6
 2215 0384 0D       		.uleb128 0xd
 2216 0385 81070000 		.4byte	.LASF41
 2217 0389 06       		.byte	0x6
 2218 038a 8901     		.2byte	0x189
 2219 038c 81000000 		.4byte	0x81
 2220 0390 07       		.byte	0x7
 2221 0391 0D       		.uleb128 0xd
 2222 0392 8E050000 		.4byte	.LASF42
 2223 0396 06       		.byte	0x6
 2224 0397 9001     		.2byte	0x190
 2225 0399 FB000000 		.4byte	0xfb
 2226 039d 08       		.byte	0x8
 2227 039e 0D       		.uleb128 0xd
 2228 039f 2A0C0000 		.4byte	.LASF43
 2229 03a3 06       		.byte	0x6
 2230 03a4 9701     		.2byte	0x197
 2231 03a6 31020000 		.4byte	0x231
 2232 03aa 09       		.byte	0x9
 2233 03ab 0D       		.uleb128 0xd
 2234 03ac 440B0000 		.4byte	.LASF44
 2235 03b0 06       		.byte	0x6
 2236 03b1 9E01     		.2byte	0x19e
 2237 03b3 31020000 		.4byte	0x231
 2238 03b7 0A       		.byte	0xa
 2239 03b8 0D       		.uleb128 0xd
 2240 03b9 40030000 		.4byte	.LASF45
 2241 03bd 06       		.byte	0x6
 2242 03be A301     		.2byte	0x1a3
 2243 03c0 81000000 		.4byte	0x81
 2244 03c4 0B       		.byte	0xb
 2245 03c5 0D       		.uleb128 0xd
 2246 03c6 D10D0000 		.4byte	.LASF46
 2247 03ca 06       		.byte	0x6
 2248 03cb AB01     		.2byte	0x1ab
 2249 03cd 8D000000 		.4byte	0x8d
 2250 03d1 0C       		.byte	0xc
 2251 03d2 0D       		.uleb128 0xd
 2252 03d3 7E060000 		.4byte	.LASF47
 2253 03d7 06       		.byte	0x6
 2254 03d8 B201     		.2byte	0x1b2
 2255 03da 8D000000 		.4byte	0x8d
 2256 03de 0E       		.byte	0xe
 2257 03df 0D       		.uleb128 0xd
 2258 03e0 EB090000 		.4byte	.LASF48
 2259 03e4 06       		.byte	0x6
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 102


 2260 03e5 B701     		.2byte	0x1b7
 2261 03e7 81000000 		.4byte	0x81
 2262 03eb 10       		.byte	0x10
 2263 03ec 0D       		.uleb128 0xd
 2264 03ed EE050000 		.4byte	.LASF49
 2265 03f1 06       		.byte	0x6
 2266 03f2 BC01     		.2byte	0x1bc
 2267 03f4 81000000 		.4byte	0x81
 2268 03f8 11       		.byte	0x11
 2269 03f9 00       		.byte	0
 2270 03fa 05       		.uleb128 0x5
 2271 03fb 8B0C0000 		.4byte	.LASF55
 2272 03ff 06       		.byte	0x6
 2273 0400 BD01     		.2byte	0x1bd
 2274 0402 3A030000 		.4byte	0x33a
 2275 0406 10       		.uleb128 0x10
 2276 0407 14       		.byte	0x14
 2277 0408 06       		.byte	0x6
 2278 0409 C201     		.2byte	0x1c2
 2279 040b D3040000 		.4byte	0x4d3
 2280 040f 0D       		.uleb128 0xd
 2281 0410 A2060000 		.4byte	.LASF36
 2282 0414 06       		.byte	0x6
 2283 0415 C701     		.2byte	0x1c7
 2284 0417 8D000000 		.4byte	0x8d
 2285 041b 00       		.byte	0
 2286 041c 0D       		.uleb128 0xd
 2287 041d 6B0C0000 		.4byte	.LASF37
 2288 0421 06       		.byte	0x6
 2289 0422 CC01     		.2byte	0x1cc
 2290 0424 EF000000 		.4byte	0xef
 2291 0428 02       		.byte	0x2
 2292 0429 0D       		.uleb128 0xd
 2293 042a A5050000 		.4byte	.LASF38
 2294 042e 06       		.byte	0x6
 2295 042f D101     		.2byte	0x1d1
 2296 0431 81000000 		.4byte	0x81
 2297 0435 04       		.byte	0x4
 2298 0436 0D       		.uleb128 0xd
 2299 0437 24080000 		.4byte	.LASF39
 2300 043b 06       		.byte	0x6
 2301 043c D601     		.2byte	0x1d6
 2302 043e 81000000 		.4byte	0x81
 2303 0442 05       		.byte	0x5
 2304 0443 0D       		.uleb128 0xd
 2305 0444 38050000 		.4byte	.LASF40
 2306 0448 06       		.byte	0x6
 2307 0449 DC01     		.2byte	0x1dc
 2308 044b 81000000 		.4byte	0x81
 2309 044f 06       		.byte	0x6
 2310 0450 0D       		.uleb128 0xd
 2311 0451 81070000 		.4byte	.LASF41
 2312 0455 06       		.byte	0x6
 2313 0456 E201     		.2byte	0x1e2
 2314 0458 81000000 		.4byte	0x81
 2315 045c 07       		.byte	0x7
 2316 045d 0D       		.uleb128 0xd
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 103


 2317 045e 8E050000 		.4byte	.LASF42
 2318 0462 06       		.byte	0x6
 2319 0463 E901     		.2byte	0x1e9
 2320 0465 FB000000 		.4byte	0xfb
 2321 0469 08       		.byte	0x8
 2322 046a 0D       		.uleb128 0xd
 2323 046b 2A0C0000 		.4byte	.LASF43
 2324 046f 06       		.byte	0x6
 2325 0470 F001     		.2byte	0x1f0
 2326 0472 31020000 		.4byte	0x231
 2327 0476 09       		.byte	0x9
 2328 0477 0D       		.uleb128 0xd
 2329 0478 440B0000 		.4byte	.LASF44
 2330 047c 06       		.byte	0x6
 2331 047d F701     		.2byte	0x1f7
 2332 047f 31020000 		.4byte	0x231
 2333 0483 0A       		.byte	0xa
 2334 0484 0D       		.uleb128 0xd
 2335 0485 40030000 		.4byte	.LASF45
 2336 0489 06       		.byte	0x6
 2337 048a FC01     		.2byte	0x1fc
 2338 048c 81000000 		.4byte	0x81
 2339 0490 0B       		.byte	0xb
 2340 0491 0D       		.uleb128 0xd
 2341 0492 D10D0000 		.4byte	.LASF46
 2342 0496 06       		.byte	0x6
 2343 0497 0402     		.2byte	0x204
 2344 0499 8D000000 		.4byte	0x8d
 2345 049d 0C       		.byte	0xc
 2346 049e 0D       		.uleb128 0xd
 2347 049f 7E060000 		.4byte	.LASF47
 2348 04a3 06       		.byte	0x6
 2349 04a4 0B02     		.2byte	0x20b
 2350 04a6 8D000000 		.4byte	0x8d
 2351 04aa 0E       		.byte	0xe
 2352 04ab 0D       		.uleb128 0xd
 2353 04ac EB090000 		.4byte	.LASF48
 2354 04b0 06       		.byte	0x6
 2355 04b1 1002     		.2byte	0x210
 2356 04b3 81000000 		.4byte	0x81
 2357 04b7 10       		.byte	0x10
 2358 04b8 0D       		.uleb128 0xd
 2359 04b9 EE050000 		.4byte	.LASF49
 2360 04bd 06       		.byte	0x6
 2361 04be 1502     		.2byte	0x215
 2362 04c0 81000000 		.4byte	0x81
 2363 04c4 11       		.byte	0x11
 2364 04c5 0D       		.uleb128 0xd
 2365 04c6 87000000 		.4byte	.LASF56
 2366 04ca 06       		.byte	0x6
 2367 04cb 1A02     		.2byte	0x21a
 2368 04cd EF000000 		.4byte	0xef
 2369 04d1 12       		.byte	0x12
 2370 04d2 00       		.byte	0
 2371 04d3 05       		.uleb128 0x5
 2372 04d4 B20C0000 		.4byte	.LASF57
 2373 04d8 06       		.byte	0x6
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 104


 2374 04d9 1B02     		.2byte	0x21b
 2375 04db 06040000 		.4byte	0x406
 2376 04df 10       		.uleb128 0x10
 2377 04e0 4E       		.byte	0x4e
 2378 04e1 06       		.byte	0x6
 2379 04e2 2102     		.2byte	0x221
 2380 04e4 1D050000 		.4byte	0x51d
 2381 04e8 0D       		.uleb128 0xd
 2382 04e9 EA0E0000 		.4byte	.LASF58
 2383 04ed 06       		.byte	0x6
 2384 04ee 2602     		.2byte	0x226
 2385 04f0 2E030000 		.4byte	0x32e
 2386 04f4 00       		.byte	0
 2387 04f5 0D       		.uleb128 0xd
 2388 04f6 BD0D0000 		.4byte	.LASF59
 2389 04fa 06       		.byte	0x6
 2390 04fb 2B02     		.2byte	0x22b
 2391 04fd FA030000 		.4byte	0x3fa
 2392 0501 16       		.byte	0x16
 2393 0502 0D       		.uleb128 0xd
 2394 0503 57000000 		.4byte	.LASF60
 2395 0507 06       		.byte	0x6
 2396 0508 3002     		.2byte	0x230
 2397 050a FA030000 		.4byte	0x3fa
 2398 050e 28       		.byte	0x28
 2399 050f 0D       		.uleb128 0xd
 2400 0510 74070000 		.4byte	.LASF61
 2401 0514 06       		.byte	0x6
 2402 0515 3502     		.2byte	0x235
 2403 0517 D3040000 		.4byte	0x4d3
 2404 051b 3A       		.byte	0x3a
 2405 051c 00       		.byte	0
 2406 051d 05       		.uleb128 0x5
 2407 051e C3020000 		.4byte	.LASF62
 2408 0522 06       		.byte	0x6
 2409 0523 3602     		.2byte	0x236
 2410 0525 DF040000 		.4byte	0x4df
 2411 0529 10       		.uleb128 0x10
 2412 052a 0A       		.byte	0xa
 2413 052b 06       		.byte	0x6
 2414 052c 3C02     		.2byte	0x23c
 2415 052e 74050000 		.4byte	0x574
 2416 0532 11       		.uleb128 0x11
 2417 0533 72617700 		.ascii	"raw\000"
 2418 0537 06       		.byte	0x6
 2419 0538 4102     		.2byte	0x241
 2420 053a 74050000 		.4byte	0x574
 2421 053e 00       		.byte	0
 2422 053f 0D       		.uleb128 0xd
 2423 0540 450E0000 		.4byte	.LASF63
 2424 0544 06       		.byte	0x6
 2425 0545 4602     		.2byte	0x246
 2426 0547 74050000 		.4byte	0x574
 2427 054b 02       		.byte	0x2
 2428 054c 0D       		.uleb128 0xd
 2429 054d 740C0000 		.4byte	.LASF64
 2430 0551 06       		.byte	0x6
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 105


 2431 0552 4C02     		.2byte	0x24c
 2432 0554 31020000 		.4byte	0x231
 2433 0558 04       		.byte	0x4
 2434 0559 0D       		.uleb128 0xd
 2435 055a 9A0A0000 		.4byte	.LASF65
 2436 055e 06       		.byte	0x6
 2437 055f 5102     		.2byte	0x251
 2438 0561 EF000000 		.4byte	0xef
 2439 0565 06       		.byte	0x6
 2440 0566 0D       		.uleb128 0xd
 2441 0567 B10E0000 		.4byte	.LASF66
 2442 056b 06       		.byte	0x6
 2443 056c 5602     		.2byte	0x256
 2444 056e 84050000 		.4byte	0x584
 2445 0572 08       		.byte	0x8
 2446 0573 00       		.byte	0
 2447 0574 0E       		.uleb128 0xe
 2448 0575 8D000000 		.4byte	0x8d
 2449 0579 84050000 		.4byte	0x584
 2450 057d 0F       		.uleb128 0xf
 2451 057e 41020000 		.4byte	0x241
 2452 0582 00       		.byte	0
 2453 0583 00       		.byte	0
 2454 0584 0E       		.uleb128 0xe
 2455 0585 FB000000 		.4byte	0xfb
 2456 0589 94050000 		.4byte	0x594
 2457 058d 0F       		.uleb128 0xf
 2458 058e 41020000 		.4byte	0x241
 2459 0592 00       		.byte	0
 2460 0593 00       		.byte	0
 2461 0594 05       		.uleb128 0x5
 2462 0595 E2040000 		.4byte	.LASF67
 2463 0599 06       		.byte	0x6
 2464 059a 5702     		.2byte	0x257
 2465 059c 29050000 		.4byte	0x529
 2466 05a0 10       		.uleb128 0x10
 2467 05a1 AA       		.byte	0xaa
 2468 05a2 06       		.byte	0x6
 2469 05a3 5D02     		.2byte	0x25d
 2470 05a5 DE050000 		.4byte	0x5de
 2471 05a9 0D       		.uleb128 0xd
 2472 05aa EA0E0000 		.4byte	.LASF58
 2473 05ae 06       		.byte	0x6
 2474 05af 6202     		.2byte	0x262
 2475 05b1 DE050000 		.4byte	0x5de
 2476 05b5 00       		.byte	0
 2477 05b6 0D       		.uleb128 0xd
 2478 05b7 BD0D0000 		.4byte	.LASF59
 2479 05bb 06       		.byte	0x6
 2480 05bc 6702     		.2byte	0x267
 2481 05be EE050000 		.4byte	0x5ee
 2482 05c2 8C       		.byte	0x8c
 2483 05c3 0D       		.uleb128 0xd
 2484 05c4 57000000 		.4byte	.LASF60
 2485 05c8 06       		.byte	0x6
 2486 05c9 6C02     		.2byte	0x26c
 2487 05cb EE050000 		.4byte	0x5ee
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 106


 2488 05cf 96       		.byte	0x96
 2489 05d0 0D       		.uleb128 0xd
 2490 05d1 74070000 		.4byte	.LASF61
 2491 05d5 06       		.byte	0x6
 2492 05d6 7102     		.2byte	0x271
 2493 05d8 EE050000 		.4byte	0x5ee
 2494 05dc A0       		.byte	0xa0
 2495 05dd 00       		.byte	0
 2496 05de 0E       		.uleb128 0xe
 2497 05df 94050000 		.4byte	0x594
 2498 05e3 EE050000 		.4byte	0x5ee
 2499 05e7 0F       		.uleb128 0xf
 2500 05e8 41020000 		.4byte	0x241
 2501 05ec 0D       		.byte	0xd
 2502 05ed 00       		.byte	0
 2503 05ee 0E       		.uleb128 0xe
 2504 05ef 94050000 		.4byte	0x594
 2505 05f3 FE050000 		.4byte	0x5fe
 2506 05f7 0F       		.uleb128 0xf
 2507 05f8 41020000 		.4byte	0x241
 2508 05fc 00       		.byte	0
 2509 05fd 00       		.byte	0
 2510 05fe 05       		.uleb128 0x5
 2511 05ff 930F0000 		.4byte	.LASF68
 2512 0603 06       		.byte	0x6
 2513 0604 7202     		.2byte	0x272
 2514 0606 A0050000 		.4byte	0x5a0
 2515 060a 12       		.uleb128 0x12
 2516 060b 2401     		.2byte	0x124
 2517 060d 06       		.byte	0x6
 2518 060e 7802     		.2byte	0x278
 2519 0610 12070000 		.4byte	0x712
 2520 0614 0D       		.uleb128 0xd
 2521 0615 B3090000 		.4byte	.LASF69
 2522 0619 06       		.byte	0x6
 2523 061a 7F02     		.2byte	0x27f
 2524 061c 8D000000 		.4byte	0x8d
 2525 0620 00       		.byte	0
 2526 0621 0D       		.uleb128 0xd
 2527 0622 F30E0000 		.4byte	.LASF70
 2528 0626 06       		.byte	0x6
 2529 0627 8402     		.2byte	0x284
 2530 0629 8D000000 		.4byte	0x8d
 2531 062d 02       		.byte	0x2
 2532 062e 0D       		.uleb128 0xd
 2533 062f E9000000 		.4byte	.LASF71
 2534 0633 06       		.byte	0x6
 2535 0634 8902     		.2byte	0x289
 2536 0636 8D000000 		.4byte	0x8d
 2537 063a 04       		.byte	0x4
 2538 063b 0D       		.uleb128 0xd
 2539 063c C30A0000 		.4byte	.LASF72
 2540 0640 06       		.byte	0x6
 2541 0641 8F02     		.2byte	0x28f
 2542 0643 8D000000 		.4byte	0x8d
 2543 0647 06       		.byte	0x6
 2544 0648 0D       		.uleb128 0xd
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 107


 2545 0649 DD000000 		.4byte	.LASF73
 2546 064d 06       		.byte	0x6
 2547 064e 9402     		.2byte	0x294
 2548 0650 8D000000 		.4byte	0x8d
 2549 0654 08       		.byte	0x8
 2550 0655 0D       		.uleb128 0xd
 2551 0656 AD060000 		.4byte	.LASF74
 2552 065a 06       		.byte	0x6
 2553 065b 9902     		.2byte	0x299
 2554 065d D7000000 		.4byte	0xd7
 2555 0661 0C       		.byte	0xc
 2556 0662 0D       		.uleb128 0xd
 2557 0663 8F0A0000 		.4byte	.LASF75
 2558 0667 06       		.byte	0x6
 2559 0668 9F02     		.2byte	0x29f
 2560 066a 12070000 		.4byte	0x712
 2561 066e 10       		.byte	0x10
 2562 066f 0D       		.uleb128 0xd
 2563 0670 740B0000 		.4byte	.LASF76
 2564 0674 06       		.byte	0x6
 2565 0675 A602     		.2byte	0x2a6
 2566 0677 12070000 		.4byte	0x712
 2567 067b 14       		.byte	0x14
 2568 067c 0D       		.uleb128 0xd
 2569 067d C7090000 		.4byte	.LASF77
 2570 0681 06       		.byte	0x6
 2571 0682 B602     		.2byte	0x2b6
 2572 0684 22070000 		.4byte	0x722
 2573 0688 18       		.byte	0x18
 2574 0689 0D       		.uleb128 0xd
 2575 068a 2D080000 		.4byte	.LASF78
 2576 068e 06       		.byte	0x6
 2577 068f BC02     		.2byte	0x2bc
 2578 0691 8D000000 		.4byte	0x8d
 2579 0695 20       		.byte	0x20
 2580 0696 0D       		.uleb128 0xd
 2581 0697 D8040000 		.4byte	.LASF79
 2582 069b 06       		.byte	0x6
 2583 069c C102     		.2byte	0x2c1
 2584 069e 81000000 		.4byte	0x81
 2585 06a2 22       		.byte	0x22
 2586 06a3 0D       		.uleb128 0xd
 2587 06a4 9C070000 		.4byte	.LASF80
 2588 06a8 06       		.byte	0x6
 2589 06a9 C602     		.2byte	0x2c6
 2590 06ab 1D050000 		.4byte	0x51d
 2591 06af 24       		.byte	0x24
 2592 06b0 0D       		.uleb128 0xd
 2593 06b1 17040000 		.4byte	.LASF81
 2594 06b5 06       		.byte	0x6
 2595 06b6 CB02     		.2byte	0x2cb
 2596 06b8 FE050000 		.4byte	0x5fe
 2597 06bc 72       		.byte	0x72
 2598 06bd 13       		.uleb128 0x13
 2599 06be AB000000 		.4byte	.LASF82
 2600 06c2 06       		.byte	0x6
 2601 06c3 D002     		.2byte	0x2d0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 108


 2602 06c5 81000000 		.4byte	0x81
 2603 06c9 1C01     		.2byte	0x11c
 2604 06cb 13       		.uleb128 0x13
 2605 06cc 80040000 		.4byte	.LASF83
 2606 06d0 06       		.byte	0x6
 2607 06d1 D502     		.2byte	0x2d5
 2608 06d3 81000000 		.4byte	0x81
 2609 06d7 1D01     		.2byte	0x11d
 2610 06d9 13       		.uleb128 0x13
 2611 06da A0090000 		.4byte	.LASF84
 2612 06de 06       		.byte	0x6
 2613 06df DA02     		.2byte	0x2da
 2614 06e1 8D000000 		.4byte	0x8d
 2615 06e5 1E01     		.2byte	0x11e
 2616 06e7 13       		.uleb128 0x13
 2617 06e8 14080000 		.4byte	.LASF85
 2618 06ec 06       		.byte	0x6
 2619 06ed DF02     		.2byte	0x2df
 2620 06ef 74050000 		.4byte	0x574
 2621 06f3 2001     		.2byte	0x120
 2622 06f5 13       		.uleb128 0x13
 2623 06f6 F1000000 		.4byte	.LASF86
 2624 06fa 06       		.byte	0x6
 2625 06fb E402     		.2byte	0x2e4
 2626 06fd 81000000 		.4byte	0x81
 2627 0701 2201     		.2byte	0x122
 2628 0703 13       		.uleb128 0x13
 2629 0704 2C0D0000 		.4byte	.LASF87
 2630 0708 06       		.byte	0x6
 2631 0709 E902     		.2byte	0x2e9
 2632 070b 81000000 		.4byte	0x81
 2633 070f 2301     		.2byte	0x123
 2634 0711 00       		.byte	0
 2635 0712 0E       		.uleb128 0xe
 2636 0713 99000000 		.4byte	0x99
 2637 0717 22070000 		.4byte	0x722
 2638 071b 0F       		.uleb128 0xf
 2639 071c 41020000 		.4byte	0x241
 2640 0720 00       		.byte	0
 2641 0721 00       		.byte	0
 2642 0722 0E       		.uleb128 0xe
 2643 0723 8D000000 		.4byte	0x8d
 2644 0727 32070000 		.4byte	0x732
 2645 072b 0F       		.uleb128 0xf
 2646 072c 41020000 		.4byte	0x241
 2647 0730 03       		.byte	0x3
 2648 0731 00       		.byte	0
 2649 0732 05       		.uleb128 0x5
 2650 0733 580A0000 		.4byte	.LASF88
 2651 0737 06       		.byte	0x6
 2652 0738 EA02     		.2byte	0x2ea
 2653 073a 0A060000 		.4byte	0x60a
 2654 073e 10       		.uleb128 0x10
 2655 073f 1C       		.byte	0x1c
 2656 0740 06       		.byte	0x6
 2657 0741 F002     		.2byte	0x2f0
 2658 0743 BD070000 		.4byte	0x7bd
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 109


 2659 0747 0D       		.uleb128 0xd
 2660 0748 A1080000 		.4byte	.LASF89
 2661 074c 06       		.byte	0x6
 2662 074d F502     		.2byte	0x2f5
 2663 074f BD070000 		.4byte	0x7bd
 2664 0753 00       		.byte	0
 2665 0754 0D       		.uleb128 0xd
 2666 0755 58070000 		.4byte	.LASF90
 2667 0759 06       		.byte	0x6
 2668 075a FA02     		.2byte	0x2fa
 2669 075c BD070000 		.4byte	0x7bd
 2670 0760 04       		.byte	0x4
 2671 0761 0D       		.uleb128 0xd
 2672 0762 FA040000 		.4byte	.LASF91
 2673 0766 06       		.byte	0x6
 2674 0767 FF02     		.2byte	0x2ff
 2675 0769 BD070000 		.4byte	0x7bd
 2676 076d 08       		.byte	0x8
 2677 076e 0D       		.uleb128 0xd
 2678 076f E80A0000 		.4byte	.LASF92
 2679 0773 06       		.byte	0x6
 2680 0774 0403     		.2byte	0x304
 2681 0776 BD070000 		.4byte	0x7bd
 2682 077a 0C       		.byte	0xc
 2683 077b 0D       		.uleb128 0xd
 2684 077c C70D0000 		.4byte	.LASF93
 2685 0780 06       		.byte	0x6
 2686 0781 0903     		.2byte	0x309
 2687 0783 99000000 		.4byte	0x99
 2688 0787 10       		.byte	0x10
 2689 0788 0D       		.uleb128 0xd
 2690 0789 E0080000 		.4byte	.LASF94
 2691 078d 06       		.byte	0x6
 2692 078e 0E03     		.2byte	0x30e
 2693 0790 99000000 		.4byte	0x99
 2694 0794 14       		.byte	0x14
 2695 0795 0D       		.uleb128 0xd
 2696 0796 4A060000 		.4byte	.LASF95
 2697 079a 06       		.byte	0x6
 2698 079b 1303     		.2byte	0x313
 2699 079d 81000000 		.4byte	0x81
 2700 07a1 18       		.byte	0x18
 2701 07a2 0D       		.uleb128 0xd
 2702 07a3 010C0000 		.4byte	.LASF96
 2703 07a7 06       		.byte	0x6
 2704 07a8 1803     		.2byte	0x318
 2705 07aa 81000000 		.4byte	0x81
 2706 07ae 19       		.byte	0x19
 2707 07af 0D       		.uleb128 0xd
 2708 07b0 5E030000 		.4byte	.LASF97
 2709 07b4 06       		.byte	0x6
 2710 07b5 1D03     		.2byte	0x31d
 2711 07b7 81000000 		.4byte	0x81
 2712 07bb 1A       		.byte	0x1a
 2713 07bc 00       		.byte	0
 2714 07bd 07       		.uleb128 0x7
 2715 07be 04       		.byte	0x4
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 110


 2716 07bf CB000000 		.4byte	0xcb
 2717 07c3 05       		.uleb128 0x5
 2718 07c4 67040000 		.4byte	.LASF98
 2719 07c8 06       		.byte	0x6
 2720 07c9 1E03     		.2byte	0x31e
 2721 07cb 3E070000 		.4byte	0x73e
 2722 07cf 10       		.uleb128 0x10
 2723 07d0 04       		.byte	0x4
 2724 07d1 06       		.byte	0x6
 2725 07d2 2403     		.2byte	0x324
 2726 07d4 00080000 		.4byte	0x800
 2727 07d8 0D       		.uleb128 0xd
 2728 07d9 01090000 		.4byte	.LASF99
 2729 07dd 06       		.byte	0x6
 2730 07de 2903     		.2byte	0x329
 2731 07e0 8D000000 		.4byte	0x8d
 2732 07e4 00       		.byte	0
 2733 07e5 0D       		.uleb128 0xd
 2734 07e6 3C0B0000 		.4byte	.LASF100
 2735 07ea 06       		.byte	0x6
 2736 07eb 2E03     		.2byte	0x32e
 2737 07ed 81000000 		.4byte	0x81
 2738 07f1 02       		.byte	0x2
 2739 07f2 0D       		.uleb128 0xd
 2740 07f3 D30C0000 		.4byte	.LASF101
 2741 07f7 06       		.byte	0x6
 2742 07f8 3C03     		.2byte	0x33c
 2743 07fa 81000000 		.4byte	0x81
 2744 07fe 03       		.byte	0x3
 2745 07ff 00       		.byte	0
 2746 0800 05       		.uleb128 0x5
 2747 0801 88060000 		.4byte	.LASF102
 2748 0805 06       		.byte	0x6
 2749 0806 3D03     		.2byte	0x33d
 2750 0808 CF070000 		.4byte	0x7cf
 2751 080c 10       		.uleb128 0x10
 2752 080d 04       		.byte	0x4
 2753 080e 06       		.byte	0x6
 2754 080f 4303     		.2byte	0x343
 2755 0811 23080000 		.4byte	0x823
 2756 0815 0D       		.uleb128 0xd
 2757 0816 74070000 		.4byte	.LASF61
 2758 081a 06       		.byte	0x6
 2759 081b 4803     		.2byte	0x348
 2760 081d 23080000 		.4byte	0x823
 2761 0821 00       		.byte	0
 2762 0822 00       		.byte	0
 2763 0823 0E       		.uleb128 0xe
 2764 0824 00080000 		.4byte	0x800
 2765 0828 33080000 		.4byte	0x833
 2766 082c 0F       		.uleb128 0xf
 2767 082d 41020000 		.4byte	0x241
 2768 0831 00       		.byte	0
 2769 0832 00       		.byte	0
 2770 0833 05       		.uleb128 0x5
 2771 0834 AB010000 		.4byte	.LASF103
 2772 0838 06       		.byte	0x6
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 111


 2773 0839 4903     		.2byte	0x349
 2774 083b 0C080000 		.4byte	0x80c
 2775 083f 10       		.uleb128 0x10
 2776 0840 34       		.byte	0x34
 2777 0841 06       		.byte	0x6
 2778 0842 5103     		.2byte	0x351
 2779 0844 19090000 		.4byte	0x919
 2780 0848 0D       		.uleb128 0xd
 2781 0849 8B0E0000 		.4byte	.LASF104
 2782 084d 06       		.byte	0x6
 2783 084e 5A03     		.2byte	0x35a
 2784 0850 19090000 		.4byte	0x919
 2785 0854 00       		.byte	0
 2786 0855 0D       		.uleb128 0xd
 2787 0856 3B0D0000 		.4byte	.LASF105
 2788 085a 06       		.byte	0x6
 2789 085b 6103     		.2byte	0x361
 2790 085d 20090000 		.4byte	0x920
 2791 0861 04       		.byte	0x4
 2792 0862 0D       		.uleb128 0xd
 2793 0863 BC090000 		.4byte	.LASF106
 2794 0867 06       		.byte	0x6
 2795 0868 6703     		.2byte	0x367
 2796 086a 22090000 		.4byte	0x922
 2797 086e 08       		.byte	0x8
 2798 086f 0D       		.uleb128 0xd
 2799 0870 B1080000 		.4byte	.LASF107
 2800 0874 06       		.byte	0x6
 2801 0875 6D03     		.2byte	0x36d
 2802 0877 20090000 		.4byte	0x920
 2803 087b 0C       		.byte	0xc
 2804 087c 0D       		.uleb128 0xd
 2805 087d 470C0000 		.4byte	.LASF108
 2806 0881 06       		.byte	0x6
 2807 0882 7403     		.2byte	0x374
 2808 0884 28090000 		.4byte	0x928
 2809 0888 10       		.byte	0x10
 2810 0889 0D       		.uleb128 0xd
 2811 088a 060D0000 		.4byte	.LASF109
 2812 088e 06       		.byte	0x6
 2813 088f 7903     		.2byte	0x379
 2814 0891 99000000 		.4byte	0x99
 2815 0895 14       		.byte	0x14
 2816 0896 0D       		.uleb128 0xd
 2817 0897 99050000 		.4byte	.LASF110
 2818 089b 06       		.byte	0x6
 2819 089c 8003     		.2byte	0x380
 2820 089e 8D000000 		.4byte	0x8d
 2821 08a2 18       		.byte	0x18
 2822 08a3 0D       		.uleb128 0xd
 2823 08a4 90040000 		.4byte	.LASF111
 2824 08a8 06       		.byte	0x6
 2825 08a9 8703     		.2byte	0x387
 2826 08ab 81000000 		.4byte	0x81
 2827 08af 1A       		.byte	0x1a
 2828 08b0 0D       		.uleb128 0xd
 2829 08b1 6C070000 		.4byte	.LASF112
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 112


 2830 08b5 06       		.byte	0x6
 2831 08b6 9103     		.2byte	0x391
 2832 08b8 81000000 		.4byte	0x81
 2833 08bc 1B       		.byte	0x1b
 2834 08bd 0D       		.uleb128 0xd
 2835 08be 8D0D0000 		.4byte	.LASF113
 2836 08c2 06       		.byte	0x6
 2837 08c3 9903     		.2byte	0x399
 2838 08c5 81000000 		.4byte	0x81
 2839 08c9 1C       		.byte	0x1c
 2840 08ca 0D       		.uleb128 0xd
 2841 08cb 290A0000 		.4byte	.LASF114
 2842 08cf 06       		.byte	0x6
 2843 08d0 9E03     		.2byte	0x39e
 2844 08d2 8D000000 		.4byte	0x8d
 2845 08d6 1E       		.byte	0x1e
 2846 08d7 0D       		.uleb128 0xd
 2847 08d8 FC0E0000 		.4byte	.LASF115
 2848 08dc 06       		.byte	0x6
 2849 08dd A303     		.2byte	0x3a3
 2850 08df 8D000000 		.4byte	0x8d
 2851 08e3 20       		.byte	0x20
 2852 08e4 0D       		.uleb128 0xd
 2853 08e5 570C0000 		.4byte	.LASF116
 2854 08e9 06       		.byte	0x6
 2855 08ea AC03     		.2byte	0x3ac
 2856 08ec 99000000 		.4byte	0x99
 2857 08f0 24       		.byte	0x24
 2858 08f1 0D       		.uleb128 0xd
 2859 08f2 F8090000 		.4byte	.LASF117
 2860 08f6 06       		.byte	0x6
 2861 08f7 B503     		.2byte	0x3b5
 2862 08f9 99000000 		.4byte	0x99
 2863 08fd 28       		.byte	0x28
 2864 08fe 0D       		.uleb128 0xd
 2865 08ff 7C0C0000 		.4byte	.LASF118
 2866 0903 06       		.byte	0x6
 2867 0904 BC03     		.2byte	0x3bc
 2868 0906 20090000 		.4byte	0x920
 2869 090a 2C       		.byte	0x2c
 2870 090b 0D       		.uleb128 0xd
 2871 090c F7020000 		.4byte	.LASF119
 2872 0910 06       		.byte	0x6
 2873 0911 C103     		.2byte	0x3c1
 2874 0913 81000000 		.4byte	0x81
 2875 0917 30       		.byte	0x30
 2876 0918 00       		.byte	0
 2877 0919 07       		.uleb128 0x7
 2878 091a 04       		.byte	0x4
 2879 091b 1F090000 		.4byte	0x91f
 2880 091f 14       		.uleb128 0x14
 2881 0920 15       		.uleb128 0x15
 2882 0921 04       		.byte	0x4
 2883 0922 07       		.uleb128 0x7
 2884 0923 04       		.byte	0x4
 2885 0924 94050000 		.4byte	0x594
 2886 0928 07       		.uleb128 0x7
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 113


 2887 0929 04       		.byte	0x4
 2888 092a 81000000 		.4byte	0x81
 2889 092e 05       		.uleb128 0x5
 2890 092f 6D050000 		.4byte	.LASF120
 2891 0933 06       		.byte	0x6
 2892 0934 C203     		.2byte	0x3c2
 2893 0936 3F080000 		.4byte	0x83f
 2894 093a 10       		.uleb128 0x10
 2895 093b D4       		.byte	0xd4
 2896 093c 06       		.byte	0x6
 2897 093d C803     		.2byte	0x3c8
 2898 093f 5E090000 		.4byte	0x95e
 2899 0943 0D       		.uleb128 0xd
 2900 0944 B00F0000 		.4byte	.LASF121
 2901 0948 06       		.byte	0x6
 2902 0949 CD03     		.2byte	0x3cd
 2903 094b 5E090000 		.4byte	0x95e
 2904 094f 00       		.byte	0
 2905 0950 0D       		.uleb128 0xd
 2906 0951 1D0D0000 		.4byte	.LASF122
 2907 0955 06       		.byte	0x6
 2908 0956 D203     		.2byte	0x3d2
 2909 0958 33080000 		.4byte	0x833
 2910 095c D0       		.byte	0xd0
 2911 095d 00       		.byte	0
 2912 095e 0E       		.uleb128 0xe
 2913 095f 2E090000 		.4byte	0x92e
 2914 0963 6E090000 		.4byte	0x96e
 2915 0967 0F       		.uleb128 0xf
 2916 0968 41020000 		.4byte	0x241
 2917 096c 03       		.byte	0x3
 2918 096d 00       		.byte	0
 2919 096e 05       		.uleb128 0x5
 2920 096f B9070000 		.4byte	.LASF123
 2921 0973 06       		.byte	0x6
 2922 0974 D303     		.2byte	0x3d3
 2923 0976 3A090000 		.4byte	0x93a
 2924 097a 02       		.uleb128 0x2
 2925 097b 08       		.byte	0x8
 2926 097c 04       		.byte	0x4
 2927 097d 75090000 		.4byte	.LASF124
 2928 0981 09       		.uleb128 0x9
 2929 0982 01       		.byte	0x1
 2930 0983 2C000000 		.4byte	0x2c
 2931 0987 07       		.byte	0x7
 2932 0988 43       		.byte	0x43
 2933 0989 AC090000 		.4byte	0x9ac
 2934 098d 0A       		.uleb128 0xa
 2935 098e A5070000 		.4byte	.LASF125
 2936 0992 00       		.byte	0
 2937 0993 0A       		.uleb128 0xa
 2938 0994 CD060000 		.4byte	.LASF126
 2939 0998 01       		.byte	0x1
 2940 0999 0A       		.uleb128 0xa
 2941 099a 2E060000 		.4byte	.LASF127
 2942 099e 02       		.byte	0x2
 2943 099f 0A       		.uleb128 0xa
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 114


 2944 09a0 150F0000 		.4byte	.LASF128
 2945 09a4 03       		.byte	0x3
 2946 09a5 0A       		.uleb128 0xa
 2947 09a6 35010000 		.4byte	.LASF129
 2948 09aa 04       		.byte	0x4
 2949 09ab 00       		.byte	0
 2950 09ac 03       		.uleb128 0x3
 2951 09ad 28090000 		.4byte	.LASF130
 2952 09b1 07       		.byte	0x7
 2953 09b2 49       		.byte	0x49
 2954 09b3 81090000 		.4byte	0x981
 2955 09b7 0B       		.uleb128 0xb
 2956 09b8 08       		.byte	0x8
 2957 09b9 07       		.byte	0x7
 2958 09ba CF       		.byte	0xcf
 2959 09bb D8090000 		.4byte	0x9d8
 2960 09bf 0C       		.uleb128 0xc
 2961 09c0 340B0000 		.4byte	.LASF131
 2962 09c4 07       		.byte	0x7
 2963 09c5 D4       		.byte	0xd4
 2964 09c6 99000000 		.4byte	0x99
 2965 09ca 00       		.byte	0
 2966 09cb 0C       		.uleb128 0xc
 2967 09cc C1080000 		.4byte	.LASF132
 2968 09d0 07       		.byte	0x7
 2969 09d1 D9       		.byte	0xd9
 2970 09d2 99000000 		.4byte	0x99
 2971 09d6 04       		.byte	0x4
 2972 09d7 00       		.byte	0
 2973 09d8 03       		.uleb128 0x3
 2974 09d9 00050000 		.4byte	.LASF133
 2975 09dd 07       		.byte	0x7
 2976 09de DA       		.byte	0xda
 2977 09df B7090000 		.4byte	0x9b7
 2978 09e3 16       		.uleb128 0x16
 2979 09e4 20030000 		.4byte	.LASF188
 2980 09e8 01       		.byte	0x1
 2981 09e9 9909     		.2byte	0x999
 2982 09eb 00000000 		.4byte	.LFB20
 2983 09ef 20000000 		.4byte	.LFE20-.LFB20
 2984 09f3 01       		.uleb128 0x1
 2985 09f4 9C       		.byte	0x9c
 2986 09f5 320A0000 		.4byte	0xa32
 2987 09f9 17       		.uleb128 0x17
 2988 09fa 4F090000 		.4byte	.LASF134
 2989 09fe 01       		.byte	0x1
 2990 09ff 9909     		.2byte	0x999
 2991 0a01 99000000 		.4byte	0x99
 2992 0a05 00000000 		.4byte	.LLST0
 2993 0a09 18       		.uleb128 0x18
 2994 0a0a 0F030000 		.4byte	.LASF135
 2995 0a0e 01       		.byte	0x1
 2996 0a0f 9909     		.2byte	0x999
 2997 0a11 320A0000 		.4byte	0xa32
 2998 0a15 01       		.uleb128 0x1
 2999 0a16 51       		.byte	0x51
 3000 0a17 19       		.uleb128 0x19
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 115


 3001 0a18 99040000 		.4byte	.LASF136
 3002 0a1c 01       		.byte	0x1
 3003 0a1d 9B09     		.2byte	0x99b
 3004 0a1f 81000000 		.4byte	0x81
 3005 0a23 00       		.byte	0
 3006 0a24 19       		.uleb128 0x19
 3007 0a25 5F010000 		.4byte	.LASF137
 3008 0a29 01       		.byte	0x1
 3009 0a2a 9C09     		.2byte	0x99c
 3010 0a2c 81000000 		.4byte	0x81
 3011 0a30 00       		.byte	0
 3012 0a31 00       		.byte	0
 3013 0a32 07       		.uleb128 0x7
 3014 0a33 04       		.byte	0x4
 3015 0a34 48020000 		.4byte	0x248
 3016 0a38 1A       		.uleb128 0x1a
 3017 0a39 9B010000 		.4byte	.LASF224
 3018 0a3d 01       		.byte	0x1
 3019 0a3e EC       		.byte	0xec
 3020 0a3f 99000000 		.4byte	0x99
 3021 0a43 00000000 		.4byte	.LFB1
 3022 0a47 10000000 		.4byte	.LFE1-.LFB1
 3023 0a4b 01       		.uleb128 0x1
 3024 0a4c 9C       		.byte	0x9c
 3025 0a4d 1B       		.uleb128 0x1b
 3026 0a4e EE0A0000 		.4byte	.LASF140
 3027 0a52 01       		.byte	0x1
 3028 0a53 1A01     		.2byte	0x11a
 3029 0a55 BA000000 		.4byte	0xba
 3030 0a59 00000000 		.4byte	.LFB2
 3031 0a5d 40000000 		.4byte	.LFE2-.LFB2
 3032 0a61 01       		.uleb128 0x1
 3033 0a62 9C       		.byte	0x9c
 3034 0a63 910A0000 		.4byte	0xa91
 3035 0a67 17       		.uleb128 0x17
 3036 0a68 310F0000 		.4byte	.LASF138
 3037 0a6c 01       		.byte	0x1
 3038 0a6d 1A01     		.2byte	0x11a
 3039 0a6f 99000000 		.4byte	0x99
 3040 0a73 21000000 		.4byte	.LLST1
 3041 0a77 1C       		.uleb128 0x1c
 3042 0a78 080F0000 		.4byte	.LASF139
 3043 0a7c 01       		.byte	0x1
 3044 0a7d 1C01     		.2byte	0x11c
 3045 0a7f BA000000 		.4byte	0xba
 3046 0a83 42000000 		.4byte	.LLST2
 3047 0a87 1D       		.uleb128 0x1d
 3048 0a88 38000000 		.4byte	.LVL4
 3049 0a8c BC130000 		.4byte	0x13bc
 3050 0a90 00       		.byte	0
 3051 0a91 1B       		.uleb128 0x1b
 3052 0a92 CF070000 		.4byte	.LASF141
 3053 0a96 01       		.byte	0x1
 3054 0a97 6D01     		.2byte	0x16d
 3055 0a99 BA000000 		.4byte	0xba
 3056 0a9d 00000000 		.4byte	.LFB3
 3057 0aa1 2C000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 116


 3058 0aa5 01       		.uleb128 0x1
 3059 0aa6 9C       		.byte	0x9c
 3060 0aa7 C50A0000 		.4byte	0xac5
 3061 0aab 1C       		.uleb128 0x1c
 3062 0aac 62000000 		.4byte	.LASF142
 3063 0ab0 01       		.byte	0x1
 3064 0ab1 6F01     		.2byte	0x16f
 3065 0ab3 BA000000 		.4byte	0xba
 3066 0ab7 60000000 		.4byte	.LLST3
 3067 0abb 1D       		.uleb128 0x1d
 3068 0abc 16000000 		.4byte	.LVL7
 3069 0ac0 C8130000 		.4byte	0x13c8
 3070 0ac4 00       		.byte	0
 3071 0ac5 1B       		.uleb128 0x1b
 3072 0ac6 A50D0000 		.4byte	.LASF143
 3073 0aca 01       		.byte	0x1
 3074 0acb AB01     		.2byte	0x1ab
 3075 0acd BA000000 		.4byte	0xba
 3076 0ad1 00000000 		.4byte	.LFB4
 3077 0ad5 48000000 		.4byte	.LFE4-.LFB4
 3078 0ad9 01       		.uleb128 0x1
 3079 0ada 9C       		.byte	0x9c
 3080 0adb 1D0B0000 		.4byte	0xb1d
 3081 0adf 1C       		.uleb128 0x1c
 3082 0ae0 62000000 		.4byte	.LASF142
 3083 0ae4 01       		.byte	0x1
 3084 0ae5 AD01     		.2byte	0x1ad
 3085 0ae7 BA000000 		.4byte	0xba
 3086 0aeb 7F000000 		.4byte	.LLST4
 3087 0aef 1C       		.uleb128 0x1c
 3088 0af0 4F090000 		.4byte	.LASF134
 3089 0af4 01       		.byte	0x1
 3090 0af5 AF01     		.2byte	0x1af
 3091 0af7 99000000 		.4byte	0x99
 3092 0afb CD000000 		.4byte	.LLST5
 3093 0aff 1E       		.uleb128 0x1e
 3094 0b00 18000000 		.4byte	.LVL12
 3095 0b04 4D0A0000 		.4byte	0xa4d
 3096 0b08 130B0000 		.4byte	0xb13
 3097 0b0c 1F       		.uleb128 0x1f
 3098 0b0d 01       		.uleb128 0x1
 3099 0b0e 50       		.byte	0x50
 3100 0b0f 02       		.uleb128 0x2
 3101 0b10 74       		.byte	0x74
 3102 0b11 00       		.sleb128 0
 3103 0b12 00       		.byte	0
 3104 0b13 1D       		.uleb128 0x1d
 3105 0b14 32000000 		.4byte	.LVL13
 3106 0b18 910A0000 		.4byte	0xa91
 3107 0b1c 00       		.byte	0
 3108 0b1d 1B       		.uleb128 0x1b
 3109 0b1e 93000000 		.4byte	.LASF144
 3110 0b22 01       		.byte	0x1
 3111 0b23 1702     		.2byte	0x217
 3112 0b25 BA000000 		.4byte	0xba
 3113 0b29 00000000 		.4byte	.LFB5
 3114 0b2d 58000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 117


 3115 0b31 01       		.uleb128 0x1
 3116 0b32 9C       		.byte	0x9c
 3117 0b33 710B0000 		.4byte	0xb71
 3118 0b37 17       		.uleb128 0x17
 3119 0b38 310F0000 		.4byte	.LASF138
 3120 0b3c 01       		.byte	0x1
 3121 0b3d 1702     		.2byte	0x217
 3122 0b3f 99000000 		.4byte	0x99
 3123 0b43 E0000000 		.4byte	.LLST6
 3124 0b47 17       		.uleb128 0x17
 3125 0b48 06030000 		.4byte	.LASF145
 3126 0b4c 01       		.byte	0x1
 3127 0b4d 1702     		.2byte	0x217
 3128 0b4f 99000000 		.4byte	0x99
 3129 0b53 01010000 		.4byte	.LLST7
 3130 0b57 1C       		.uleb128 0x1c
 3131 0b58 080F0000 		.4byte	.LASF139
 3132 0b5c 01       		.byte	0x1
 3133 0b5d 1902     		.2byte	0x219
 3134 0b5f BA000000 		.4byte	0xba
 3135 0b63 22010000 		.4byte	.LLST8
 3136 0b67 1D       		.uleb128 0x1d
 3137 0b68 4A000000 		.4byte	.LVL19
 3138 0b6c D4130000 		.4byte	0x13d4
 3139 0b70 00       		.byte	0
 3140 0b71 1B       		.uleb128 0x1b
 3141 0b72 5E080000 		.4byte	.LASF146
 3142 0b76 01       		.byte	0x1
 3143 0b77 8102     		.2byte	0x281
 3144 0b79 BA000000 		.4byte	0xba
 3145 0b7d 00000000 		.4byte	.LFB6
 3146 0b81 2C000000 		.4byte	.LFE6-.LFB6
 3147 0b85 01       		.uleb128 0x1
 3148 0b86 9C       		.byte	0x9c
 3149 0b87 A50B0000 		.4byte	0xba5
 3150 0b8b 1C       		.uleb128 0x1c
 3151 0b8c 62000000 		.4byte	.LASF142
 3152 0b90 01       		.byte	0x1
 3153 0b91 8302     		.2byte	0x283
 3154 0b93 BA000000 		.4byte	0xba
 3155 0b97 40010000 		.4byte	.LLST9
 3156 0b9b 1D       		.uleb128 0x1d
 3157 0b9c 16000000 		.4byte	.LVL22
 3158 0ba0 E0130000 		.4byte	0x13e0
 3159 0ba4 00       		.byte	0
 3160 0ba5 20       		.uleb128 0x20
 3161 0ba6 F10C0000 		.4byte	.LASF154
 3162 0baa 01       		.byte	0x1
 3163 0bab 4803     		.2byte	0x348
 3164 0bad 00000000 		.4byte	.LFB8
 3165 0bb1 0C010000 		.4byte	.LFE8-.LFB8
 3166 0bb5 01       		.uleb128 0x1
 3167 0bb6 9C       		.byte	0x9c
 3168 0bb7 980C0000 		.4byte	0xc98
 3169 0bbb 17       		.uleb128 0x17
 3170 0bbc 310F0000 		.4byte	.LASF138
 3171 0bc0 01       		.byte	0x1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 118


 3172 0bc1 4803     		.2byte	0x348
 3173 0bc3 99000000 		.4byte	0x99
 3174 0bc7 5F010000 		.4byte	.LLST10
 3175 0bcb 17       		.uleb128 0x17
 3176 0bcc 3A000000 		.4byte	.LASF147
 3177 0bd0 01       		.byte	0x1
 3178 0bd1 4803     		.2byte	0x348
 3179 0bd3 99000000 		.4byte	0x99
 3180 0bd7 99010000 		.4byte	.LLST11
 3181 0bdb 17       		.uleb128 0x17
 3182 0bdc 950D0000 		.4byte	.LASF148
 3183 0be0 01       		.byte	0x1
 3184 0be1 4803     		.2byte	0x348
 3185 0be3 99000000 		.4byte	0x99
 3186 0be7 D3010000 		.4byte	.LLST12
 3187 0beb 1C       		.uleb128 0x1c
 3188 0bec 86050000 		.4byte	.LASF149
 3189 0bf0 01       		.byte	0x1
 3190 0bf1 4A03     		.2byte	0x34a
 3191 0bf3 99000000 		.4byte	0x99
 3192 0bf7 FF010000 		.4byte	.LLST13
 3193 0bfb 1C       		.uleb128 0x1c
 3194 0bfc 9B0D0000 		.4byte	.LASF150
 3195 0c00 01       		.byte	0x1
 3196 0c01 4B03     		.2byte	0x34b
 3197 0c03 99000000 		.4byte	0x99
 3198 0c07 29020000 		.4byte	.LLST14
 3199 0c0b 1C       		.uleb128 0x1c
 3200 0c0c 50010000 		.4byte	.LASF151
 3201 0c10 01       		.byte	0x1
 3202 0c11 4C03     		.2byte	0x34c
 3203 0c13 81000000 		.4byte	0x81
 3204 0c17 48020000 		.4byte	.LLST15
 3205 0c1b 1C       		.uleb128 0x1c
 3206 0c1c 260D0000 		.4byte	.LASF152
 3207 0c20 01       		.byte	0x1
 3208 0c21 4D03     		.2byte	0x34d
 3209 0c23 980C0000 		.4byte	0xc98
 3210 0c27 7C020000 		.4byte	.LLST16
 3211 0c2b 1C       		.uleb128 0x1c
 3212 0c2c 6F010000 		.4byte	.LASF153
 3213 0c30 01       		.byte	0x1
 3214 0c31 4F03     		.2byte	0x34f
 3215 0c33 A30C0000 		.4byte	0xca3
 3216 0c37 9A020000 		.4byte	.LLST17
 3217 0c3b 1D       		.uleb128 0x1d
 3218 0c3c 4E000000 		.4byte	.LVL38
 3219 0c40 EC130000 		.4byte	0x13ec
 3220 0c44 1D       		.uleb128 0x1d
 3221 0c45 76000000 		.4byte	.LVL39
 3222 0c49 F7130000 		.4byte	0x13f7
 3223 0c4d 1D       		.uleb128 0x1d
 3224 0c4e 8C000000 		.4byte	.LVL40
 3225 0c52 EC130000 		.4byte	0x13ec
 3226 0c56 1D       		.uleb128 0x1d
 3227 0c57 B4000000 		.4byte	.LVL41
 3228 0c5b F7130000 		.4byte	0x13f7
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 119


 3229 0c5f 1D       		.uleb128 0x1d
 3230 0c60 BA000000 		.4byte	.LVL42
 3231 0c64 EC130000 		.4byte	0x13ec
 3232 0c68 1D       		.uleb128 0x1d
 3233 0c69 D0000000 		.4byte	.LVL43
 3234 0c6d F7130000 		.4byte	0x13f7
 3235 0c71 1E       		.uleb128 0x1e
 3236 0c72 D8000000 		.4byte	.LVL44
 3237 0c76 02140000 		.4byte	0x1402
 3238 0c7a 850C0000 		.4byte	0xc85
 3239 0c7e 1F       		.uleb128 0x1f
 3240 0c7f 01       		.uleb128 0x1
 3241 0c80 50       		.byte	0x50
 3242 0c81 02       		.uleb128 0x2
 3243 0c82 74       		.byte	0x74
 3244 0c83 00       		.sleb128 0
 3245 0c84 00       		.byte	0
 3246 0c85 1D       		.uleb128 0x1d
 3247 0c86 DE000000 		.4byte	.LVL45
 3248 0c8a EC130000 		.4byte	0x13ec
 3249 0c8e 1D       		.uleb128 0x1d
 3250 0c8f F4000000 		.4byte	.LVL46
 3251 0c93 F7130000 		.4byte	0x13f7
 3252 0c97 00       		.byte	0
 3253 0c98 07       		.uleb128 0x7
 3254 0c99 04       		.byte	0x4
 3255 0c9a 9E0C0000 		.4byte	0xc9e
 3256 0c9e 21       		.uleb128 0x21
 3257 0c9f C3070000 		.4byte	0x7c3
 3258 0ca3 07       		.uleb128 0x7
 3259 0ca4 04       		.byte	0x4
 3260 0ca5 A90C0000 		.4byte	0xca9
 3261 0ca9 21       		.uleb128 0x21
 3262 0caa 00080000 		.4byte	0x800
 3263 0cae 20       		.uleb128 0x20
 3264 0caf 6C0A0000 		.4byte	.LASF155
 3265 0cb3 01       		.byte	0x1
 3266 0cb4 8E04     		.2byte	0x48e
 3267 0cb6 00000000 		.4byte	.LFB11
 3268 0cba 8C000000 		.4byte	.LFE11-.LFB11
 3269 0cbe 01       		.uleb128 0x1
 3270 0cbf 9C       		.byte	0x9c
 3271 0cc0 670D0000 		.4byte	0xd67
 3272 0cc4 17       		.uleb128 0x17
 3273 0cc5 950D0000 		.4byte	.LASF148
 3274 0cc9 01       		.byte	0x1
 3275 0cca 8E04     		.2byte	0x48e
 3276 0ccc 99000000 		.4byte	0x99
 3277 0cd0 B8020000 		.4byte	.LLST18
 3278 0cd4 1C       		.uleb128 0x1c
 3279 0cd5 50010000 		.4byte	.LASF151
 3280 0cd9 01       		.byte	0x1
 3281 0cda 9004     		.2byte	0x490
 3282 0cdc 81000000 		.4byte	0x81
 3283 0ce0 E4020000 		.4byte	.LLST19
 3284 0ce4 1C       		.uleb128 0x1c
 3285 0ce5 4E030000 		.4byte	.LASF156
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 120


 3286 0ce9 01       		.byte	0x1
 3287 0cea 9204     		.2byte	0x492
 3288 0cec 99000000 		.4byte	0x99
 3289 0cf0 F7020000 		.4byte	.LLST20
 3290 0cf4 1C       		.uleb128 0x1c
 3291 0cf5 2C050000 		.4byte	.LASF157
 3292 0cf9 01       		.byte	0x1
 3293 0cfa 9404     		.2byte	0x494
 3294 0cfc 99000000 		.4byte	0x99
 3295 0d00 16030000 		.4byte	.LLST21
 3296 0d04 1C       		.uleb128 0x1c
 3297 0d05 C9040000 		.4byte	.LASF158
 3298 0d09 01       		.byte	0x1
 3299 0d0a 9504     		.2byte	0x495
 3300 0d0c 99000000 		.4byte	0x99
 3301 0d10 35030000 		.4byte	.LLST22
 3302 0d14 1C       		.uleb128 0x1c
 3303 0d15 1E060000 		.4byte	.LASF159
 3304 0d19 01       		.byte	0x1
 3305 0d1a 9704     		.2byte	0x497
 3306 0d1c 99000000 		.4byte	0x99
 3307 0d20 54030000 		.4byte	.LLST23
 3308 0d24 1C       		.uleb128 0x1c
 3309 0d25 F4070000 		.4byte	.LASF160
 3310 0d29 01       		.byte	0x1
 3311 0d2a 9804     		.2byte	0x498
 3312 0d2c 99000000 		.4byte	0x99
 3313 0d30 7E030000 		.4byte	.LLST24
 3314 0d34 1C       		.uleb128 0x1c
 3315 0d35 0E040000 		.4byte	.LASF161
 3316 0d39 01       		.byte	0x1
 3317 0d3a 9A04     		.2byte	0x49a
 3318 0d3c 980C0000 		.4byte	0xc98
 3319 0d40 91030000 		.4byte	.LLST25
 3320 0d44 1D       		.uleb128 0x1d
 3321 0d45 38000000 		.4byte	.LVL58
 3322 0d49 EC130000 		.4byte	0x13ec
 3323 0d4d 1D       		.uleb128 0x1d
 3324 0d4e 70000000 		.4byte	.LVL69
 3325 0d52 F7130000 		.4byte	0x13f7
 3326 0d56 22       		.uleb128 0x22
 3327 0d57 7E000000 		.4byte	.LVL72
 3328 0d5b 0E140000 		.4byte	0x140e
 3329 0d5f 1F       		.uleb128 0x1f
 3330 0d60 01       		.uleb128 0x1
 3331 0d61 50       		.byte	0x50
 3332 0d62 02       		.uleb128 0x2
 3333 0d63 78       		.byte	0x78
 3334 0d64 00       		.sleb128 0
 3335 0d65 00       		.byte	0
 3336 0d66 00       		.byte	0
 3337 0d67 20       		.uleb128 0x20
 3338 0d68 6D0E0000 		.4byte	.LASF162
 3339 0d6c 01       		.byte	0x1
 3340 0d6d 2405     		.2byte	0x524
 3341 0d6f 00000000 		.4byte	.LFB12
 3342 0d73 78000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 121


 3343 0d77 01       		.uleb128 0x1
 3344 0d78 9C       		.byte	0x9c
 3345 0d79 A00D0000 		.4byte	0xda0
 3346 0d7d 1C       		.uleb128 0x1c
 3347 0d7e 48000000 		.4byte	.LASF163
 3348 0d82 01       		.byte	0x1
 3349 0d83 2C05     		.2byte	0x52c
 3350 0d85 BA000000 		.4byte	0xba
 3351 0d89 A4030000 		.4byte	.LLST26
 3352 0d8d 1D       		.uleb128 0x1d
 3353 0d8e 14000000 		.4byte	.LVL78
 3354 0d92 4D0A0000 		.4byte	0xa4d
 3355 0d96 1D       		.uleb128 0x1d
 3356 0d97 2A000000 		.4byte	.LVL80
 3357 0d9b 910A0000 		.4byte	0xa91
 3358 0d9f 00       		.byte	0
 3359 0da0 20       		.uleb128 0x20
 3360 0da1 350A0000 		.4byte	.LASF164
 3361 0da5 01       		.byte	0x1
 3362 0da6 7105     		.2byte	0x571
 3363 0da8 00000000 		.4byte	.LFB13
 3364 0dac 08000000 		.4byte	.LFE13-.LFB13
 3365 0db0 01       		.uleb128 0x1
 3366 0db1 9C       		.byte	0x9c
 3367 0db2 D80D0000 		.4byte	0xdd8
 3368 0db6 17       		.uleb128 0x17
 3369 0db7 220C0000 		.4byte	.LASF165
 3370 0dbb 01       		.byte	0x1
 3371 0dbc 7105     		.2byte	0x571
 3372 0dbe DC000000 		.4byte	0xdc
 3373 0dc2 EF030000 		.4byte	.LLST27
 3374 0dc6 22       		.uleb128 0x22
 3375 0dc7 06000000 		.4byte	.LVL87
 3376 0dcb 1A140000 		.4byte	0x141a
 3377 0dcf 1F       		.uleb128 0x1f
 3378 0dd0 01       		.uleb128 0x1
 3379 0dd1 50       		.byte	0x50
 3380 0dd2 03       		.uleb128 0x3
 3381 0dd3 F3       		.byte	0xf3
 3382 0dd4 01       		.uleb128 0x1
 3383 0dd5 50       		.byte	0x50
 3384 0dd6 00       		.byte	0
 3385 0dd7 00       		.byte	0
 3386 0dd8 20       		.uleb128 0x20
 3387 0dd9 D3010000 		.4byte	.LASF166
 3388 0ddd 01       		.byte	0x1
 3389 0dde 8805     		.2byte	0x588
 3390 0de0 00000000 		.4byte	.LFB14
 3391 0de4 30000000 		.4byte	.LFE14-.LFB14
 3392 0de8 01       		.uleb128 0x1
 3393 0de9 9C       		.byte	0x9c
 3394 0dea FF0D0000 		.4byte	0xdff
 3395 0dee 17       		.uleb128 0x17
 3396 0def 25050000 		.4byte	.LASF167
 3397 0df3 01       		.byte	0x1
 3398 0df4 8805     		.2byte	0x588
 3399 0df6 99000000 		.4byte	0x99
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 122


 3400 0dfa 10040000 		.4byte	.LLST28
 3401 0dfe 00       		.byte	0
 3402 0dff 20       		.uleb128 0x20
 3403 0e00 FC060000 		.4byte	.LASF168
 3404 0e04 01       		.byte	0x1
 3405 0e05 CC05     		.2byte	0x5cc
 3406 0e07 00000000 		.4byte	.LFB15
 3407 0e0b 14000000 		.4byte	.LFE15-.LFB15
 3408 0e0f 01       		.uleb128 0x1
 3409 0e10 9C       		.byte	0x9c
 3410 0e11 360E0000 		.4byte	0xe36
 3411 0e15 17       		.uleb128 0x17
 3412 0e16 D10D0000 		.4byte	.LASF46
 3413 0e1a 01       		.byte	0x1
 3414 0e1b CC05     		.2byte	0x5cc
 3415 0e1d 99000000 		.4byte	0x99
 3416 0e21 3E040000 		.4byte	.LLST29
 3417 0e25 1C       		.uleb128 0x1c
 3418 0e26 980E0000 		.4byte	.LASF169
 3419 0e2a 01       		.byte	0x1
 3420 0e2b CF05     		.2byte	0x5cf
 3421 0e2d 99000000 		.4byte	0x99
 3422 0e31 6C040000 		.4byte	.LLST30
 3423 0e35 00       		.byte	0
 3424 0e36 20       		.uleb128 0x20
 3425 0e37 0C090000 		.4byte	.LASF170
 3426 0e3b 01       		.byte	0x1
 3427 0e3c 2006     		.2byte	0x620
 3428 0e3e 00000000 		.4byte	.LFB16
 3429 0e42 12000000 		.4byte	.LFE16-.LFB16
 3430 0e46 01       		.uleb128 0x1
 3431 0e47 9C       		.byte	0x9c
 3432 0e48 920E0000 		.4byte	0xe92
 3433 0e4c 17       		.uleb128 0x17
 3434 0e4d D10D0000 		.4byte	.LASF46
 3435 0e51 01       		.byte	0x1
 3436 0e52 2006     		.2byte	0x620
 3437 0e54 99000000 		.4byte	0x99
 3438 0e58 95040000 		.4byte	.LLST31
 3439 0e5c 17       		.uleb128 0x17
 3440 0e5d 25050000 		.4byte	.LASF167
 3441 0e61 01       		.byte	0x1
 3442 0e62 2006     		.2byte	0x620
 3443 0e64 99000000 		.4byte	0x99
 3444 0e68 C1040000 		.4byte	.LLST32
 3445 0e6c 1E       		.uleb128 0x1e
 3446 0e6d 0A000000 		.4byte	.LVL99
 3447 0e71 D80D0000 		.4byte	0xdd8
 3448 0e75 810E0000 		.4byte	0xe81
 3449 0e79 1F       		.uleb128 0x1f
 3450 0e7a 01       		.uleb128 0x1
 3451 0e7b 50       		.byte	0x50
 3452 0e7c 03       		.uleb128 0x3
 3453 0e7d F3       		.byte	0xf3
 3454 0e7e 01       		.uleb128 0x1
 3455 0e7f 51       		.byte	0x51
 3456 0e80 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 123


 3457 0e81 22       		.uleb128 0x22
 3458 0e82 10000000 		.4byte	.LVL100
 3459 0e86 FF0D0000 		.4byte	0xdff
 3460 0e8a 1F       		.uleb128 0x1f
 3461 0e8b 01       		.uleb128 0x1
 3462 0e8c 50       		.byte	0x50
 3463 0e8d 02       		.uleb128 0x2
 3464 0e8e 74       		.byte	0x74
 3465 0e8f 00       		.sleb128 0
 3466 0e90 00       		.byte	0
 3467 0e91 00       		.byte	0
 3468 0e92 1B       		.uleb128 0x1b
 3469 0e93 B4060000 		.4byte	.LASF171
 3470 0e97 01       		.byte	0x1
 3471 0e98 5406     		.2byte	0x654
 3472 0e9a BA000000 		.4byte	0xba
 3473 0e9e 00000000 		.4byte	.LFB17
 3474 0ea2 1C000000 		.4byte	.LFE17-.LFB17
 3475 0ea6 01       		.uleb128 0x1
 3476 0ea7 9C       		.byte	0x9c
 3477 0ea8 E40E0000 		.4byte	0xee4
 3478 0eac 17       		.uleb128 0x17
 3479 0ead 310F0000 		.4byte	.LASF138
 3480 0eb1 01       		.byte	0x1
 3481 0eb2 5406     		.2byte	0x654
 3482 0eb4 99000000 		.4byte	0x99
 3483 0eb8 E2040000 		.4byte	.LLST33
 3484 0ebc 1C       		.uleb128 0x1c
 3485 0ebd 8C070000 		.4byte	.LASF172
 3486 0ec1 01       		.byte	0x1
 3487 0ec2 5606     		.2byte	0x656
 3488 0ec4 BA000000 		.4byte	0xba
 3489 0ec8 24050000 		.4byte	.LLST34
 3490 0ecc 22       		.uleb128 0x22
 3491 0ecd 1A000000 		.4byte	.LVL108
 3492 0ed1 25140000 		.4byte	0x1425
 3493 0ed5 1F       		.uleb128 0x1f
 3494 0ed6 01       		.uleb128 0x1
 3495 0ed7 50       		.byte	0x50
 3496 0ed8 03       		.uleb128 0x3
 3497 0ed9 F3       		.byte	0xf3
 3498 0eda 01       		.uleb128 0x1
 3499 0edb 50       		.byte	0x50
 3500 0edc 1F       		.uleb128 0x1f
 3501 0edd 01       		.uleb128 0x1
 3502 0ede 51       		.byte	0x51
 3503 0edf 02       		.uleb128 0x2
 3504 0ee0 08       		.byte	0x8
 3505 0ee1 55       		.byte	0x55
 3506 0ee2 00       		.byte	0
 3507 0ee3 00       		.byte	0
 3508 0ee4 1B       		.uleb128 0x1b
 3509 0ee5 7E010000 		.4byte	.LASF173
 3510 0ee9 01       		.byte	0x1
 3511 0eea C906     		.2byte	0x6c9
 3512 0eec BA000000 		.4byte	0xba
 3513 0ef0 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 124


 3514 0ef4 1A000000 		.4byte	.LFE18-.LFB18
 3515 0ef8 01       		.uleb128 0x1
 3516 0ef9 9C       		.byte	0x9c
 3517 0efa 2F0F0000 		.4byte	0xf2f
 3518 0efe 1C       		.uleb128 0x1c
 3519 0eff 8C070000 		.4byte	.LASF172
 3520 0f03 01       		.byte	0x1
 3521 0f04 CB06     		.2byte	0x6cb
 3522 0f06 BA000000 		.4byte	0xba
 3523 0f0a 4E050000 		.4byte	.LLST35
 3524 0f0e 1C       		.uleb128 0x1c
 3525 0f0f 4F090000 		.4byte	.LASF134
 3526 0f13 01       		.byte	0x1
 3527 0f14 CC06     		.2byte	0x6cc
 3528 0f16 99000000 		.4byte	0x99
 3529 0f1a 78050000 		.4byte	.LLST36
 3530 0f1e 22       		.uleb128 0x22
 3531 0f1f 0E000000 		.4byte	.LVL111
 3532 0f23 920E0000 		.4byte	0xe92
 3533 0f27 1F       		.uleb128 0x1f
 3534 0f28 01       		.uleb128 0x1
 3535 0f29 50       		.byte	0x50
 3536 0f2a 02       		.uleb128 0x2
 3537 0f2b 74       		.byte	0x74
 3538 0f2c 00       		.sleb128 0
 3539 0f2d 00       		.byte	0
 3540 0f2e 00       		.byte	0
 3541 0f2f 20       		.uleb128 0x20
 3542 0f30 580F0000 		.4byte	.LASF174
 3543 0f34 01       		.byte	0x1
 3544 0f35 6409     		.2byte	0x964
 3545 0f37 00000000 		.4byte	.LFB19
 3546 0f3b 24000000 		.4byte	.LFE19-.LFB19
 3547 0f3f 01       		.uleb128 0x1
 3548 0f40 9C       		.byte	0x9c
 3549 0f41 760F0000 		.4byte	0xf76
 3550 0f45 1C       		.uleb128 0x1c
 3551 0f46 4F090000 		.4byte	.LASF134
 3552 0f4a 01       		.byte	0x1
 3553 0f4b 6609     		.2byte	0x966
 3554 0f4d 99000000 		.4byte	0x99
 3555 0f51 97050000 		.4byte	.LLST37
 3556 0f55 1C       		.uleb128 0x1c
 3557 0f56 0F030000 		.4byte	.LASF135
 3558 0f5a 01       		.byte	0x1
 3559 0f5b 6709     		.2byte	0x967
 3560 0f5d 320A0000 		.4byte	0xa32
 3561 0f61 B6050000 		.4byte	.LLST38
 3562 0f65 22       		.uleb128 0x22
 3563 0f66 16000000 		.4byte	.LVL119
 3564 0f6a E3090000 		.4byte	0x9e3
 3565 0f6e 1F       		.uleb128 0x1f
 3566 0f6f 01       		.uleb128 0x1
 3567 0f70 50       		.byte	0x50
 3568 0f71 02       		.uleb128 0x2
 3569 0f72 74       		.byte	0x74
 3570 0f73 00       		.sleb128 0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 125


 3571 0f74 00       		.byte	0
 3572 0f75 00       		.byte	0
 3573 0f76 1B       		.uleb128 0x1b
 3574 0f77 18000000 		.4byte	.LASF175
 3575 0f7b 01       		.byte	0x1
 3576 0f7c E80A     		.2byte	0xae8
 3577 0f7e 99000000 		.4byte	0x99
 3578 0f82 00000000 		.4byte	.LFB21
 3579 0f86 14000000 		.4byte	.LFE21-.LFB21
 3580 0f8a 01       		.uleb128 0x1
 3581 0f8b 9C       		.byte	0x9c
 3582 0f8c BD0F0000 		.4byte	0xfbd
 3583 0f90 17       		.uleb128 0x17
 3584 0f91 310F0000 		.4byte	.LASF138
 3585 0f95 01       		.byte	0x1
 3586 0f96 E80A     		.2byte	0xae8
 3587 0f98 99000000 		.4byte	0x99
 3588 0f9c C9050000 		.4byte	.LLST39
 3589 0fa0 23       		.uleb128 0x23
 3590 0fa1 1B0C0000 		.4byte	.LASF176
 3591 0fa5 01       		.byte	0x1
 3592 0fa6 EA0A     		.2byte	0xaea
 3593 0fa8 99000000 		.4byte	0x99
 3594 0fac 01       		.uleb128 0x1
 3595 0fad 50       		.byte	0x50
 3596 0fae 23       		.uleb128 0x23
 3597 0faf 0F030000 		.4byte	.LASF135
 3598 0fb3 01       		.byte	0x1
 3599 0fb4 EE0A     		.2byte	0xaee
 3600 0fb6 320A0000 		.4byte	0xa32
 3601 0fba 01       		.uleb128 0x1
 3602 0fbb 53       		.byte	0x53
 3603 0fbc 00       		.byte	0
 3604 0fbd 1B       		.uleb128 0x1b
 3605 0fbe 55060000 		.4byte	.LASF177
 3606 0fc2 01       		.byte	0x1
 3607 0fc3 140B     		.2byte	0xb14
 3608 0fc5 99000000 		.4byte	0x99
 3609 0fc9 00000000 		.4byte	.LFB22
 3610 0fcd 14000000 		.4byte	.LFE22-.LFB22
 3611 0fd1 01       		.uleb128 0x1
 3612 0fd2 9C       		.byte	0x9c
 3613 0fd3 04100000 		.4byte	0x1004
 3614 0fd7 17       		.uleb128 0x17
 3615 0fd8 310F0000 		.4byte	.LASF138
 3616 0fdc 01       		.byte	0x1
 3617 0fdd 140B     		.2byte	0xb14
 3618 0fdf 99000000 		.4byte	0x99
 3619 0fe3 EA050000 		.4byte	.LLST40
 3620 0fe7 23       		.uleb128 0x23
 3621 0fe8 1B0C0000 		.4byte	.LASF176
 3622 0fec 01       		.byte	0x1
 3623 0fed 160B     		.2byte	0xb16
 3624 0fef 99000000 		.4byte	0x99
 3625 0ff3 01       		.uleb128 0x1
 3626 0ff4 50       		.byte	0x50
 3627 0ff5 23       		.uleb128 0x23
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 126


 3628 0ff6 0F030000 		.4byte	.LASF135
 3629 0ffa 01       		.byte	0x1
 3630 0ffb 1A0B     		.2byte	0xb1a
 3631 0ffd 320A0000 		.4byte	0xa32
 3632 1001 01       		.uleb128 0x1
 3633 1002 53       		.byte	0x53
 3634 1003 00       		.byte	0
 3635 1004 20       		.uleb128 0x20
 3636 1005 FE050000 		.4byte	.LASF178
 3637 1009 01       		.byte	0x1
 3638 100a 7A0B     		.2byte	0xb7a
 3639 100c 00000000 		.4byte	.LFB23
 3640 1010 C0000000 		.4byte	.LFE23-.LFB23
 3641 1014 01       		.uleb128 0x1
 3642 1015 9C       		.byte	0x9c
 3643 1016 FD100000 		.4byte	0x10fd
 3644 101a 17       		.uleb128 0x17
 3645 101b 5F050000 		.4byte	.LASF179
 3646 101f 01       		.byte	0x1
 3647 1020 7A0B     		.2byte	0xb7a
 3648 1022 99000000 		.4byte	0x99
 3649 1026 0B060000 		.4byte	.LLST41
 3650 102a 1C       		.uleb128 0x1c
 3651 102b CA010000 		.4byte	.LASF180
 3652 102f 01       		.byte	0x1
 3653 1030 7C0B     		.2byte	0xb7c
 3654 1032 99000000 		.4byte	0x99
 3655 1036 38060000 		.4byte	.LLST42
 3656 103a 1C       		.uleb128 0x1c
 3657 103b 69010000 		.4byte	.LASF181
 3658 103f 01       		.byte	0x1
 3659 1040 7D0B     		.2byte	0xb7d
 3660 1042 99000000 		.4byte	0x99
 3661 1046 57060000 		.4byte	.LLST43
 3662 104a 1C       		.uleb128 0x1c
 3663 104b BD040000 		.4byte	.LASF182
 3664 104f 01       		.byte	0x1
 3665 1050 7E0B     		.2byte	0xb7e
 3666 1052 99000000 		.4byte	0x99
 3667 1056 75060000 		.4byte	.LLST44
 3668 105a 1C       		.uleb128 0x1c
 3669 105b 980E0000 		.4byte	.LASF169
 3670 105f 01       		.byte	0x1
 3671 1060 7F0B     		.2byte	0xb7f
 3672 1062 99000000 		.4byte	0x99
 3673 1066 93060000 		.4byte	.LLST45
 3674 106a 1C       		.uleb128 0x1c
 3675 106b 50010000 		.4byte	.LASF151
 3676 106f 01       		.byte	0x1
 3677 1070 800B     		.2byte	0xb80
 3678 1072 81000000 		.4byte	0x81
 3679 1076 DD060000 		.4byte	.LLST46
 3680 107a 1D       		.uleb128 0x1d
 3681 107b 36000000 		.4byte	.LVL136
 3682 107f EC130000 		.4byte	0x13ec
 3683 1083 1D       		.uleb128 0x1d
 3684 1084 40000000 		.4byte	.LVL140
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 127


 3685 1088 F7130000 		.4byte	0x13f7
 3686 108c 1D       		.uleb128 0x1d
 3687 108d 44000000 		.4byte	.LVL141
 3688 1091 EC130000 		.4byte	0x13ec
 3689 1095 1D       		.uleb128 0x1d
 3690 1096 50000000 		.4byte	.LVL144
 3691 109a F7130000 		.4byte	0x13f7
 3692 109e 1D       		.uleb128 0x1d
 3693 109f 54000000 		.4byte	.LVL145
 3694 10a3 EC130000 		.4byte	0x13ec
 3695 10a7 1D       		.uleb128 0x1d
 3696 10a8 64000000 		.4byte	.LVL149
 3697 10ac F7130000 		.4byte	0x13f7
 3698 10b0 1E       		.uleb128 0x1e
 3699 10b1 6C000000 		.4byte	.LVL150
 3700 10b5 31140000 		.4byte	0x1431
 3701 10b9 C6100000 		.4byte	0x10c6
 3702 10bd 1F       		.uleb128 0x1f
 3703 10be 01       		.uleb128 0x1
 3704 10bf 50       		.byte	0x50
 3705 10c0 04       		.uleb128 0x4
 3706 10c1 7D       		.byte	0x7d
 3707 10c2 04       		.sleb128 4
 3708 10c3 94       		.byte	0x94
 3709 10c4 02       		.byte	0x2
 3710 10c5 00       		.byte	0
 3711 10c6 1D       		.uleb128 0x1d
 3712 10c7 70000000 		.4byte	.LVL151
 3713 10cb EC130000 		.4byte	0x13ec
 3714 10cf 1D       		.uleb128 0x1d
 3715 10d0 80000000 		.4byte	.LVL155
 3716 10d4 F7130000 		.4byte	0x13f7
 3717 10d8 1D       		.uleb128 0x1d
 3718 10d9 84000000 		.4byte	.LVL156
 3719 10dd EC130000 		.4byte	0x13ec
 3720 10e1 1D       		.uleb128 0x1d
 3721 10e2 94000000 		.4byte	.LVL160
 3722 10e6 F7130000 		.4byte	0x13f7
 3723 10ea 1D       		.uleb128 0x1d
 3724 10eb 98000000 		.4byte	.LVL161
 3725 10ef EC130000 		.4byte	0x13ec
 3726 10f3 1D       		.uleb128 0x1d
 3727 10f4 A6000000 		.4byte	.LVL165
 3728 10f8 F7130000 		.4byte	0x13f7
 3729 10fc 00       		.byte	0
 3730 10fd 1B       		.uleb128 0x1b
 3731 10fe 35070000 		.4byte	.LASF183
 3732 1102 01       		.byte	0x1
 3733 1103 840C     		.2byte	0xc84
 3734 1105 76000000 		.4byte	0x76
 3735 1109 00000000 		.4byte	.LFB24
 3736 110d 20000000 		.4byte	.LFE24-.LFB24
 3737 1111 01       		.uleb128 0x1
 3738 1112 9C       		.byte	0x9c
 3739 1113 57110000 		.4byte	0x1157
 3740 1117 17       		.uleb128 0x17
 3741 1118 20050000 		.4byte	.LASF184
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 128


 3742 111c 01       		.byte	0x1
 3743 111d 840C     		.2byte	0xc84
 3744 111f AC090000 		.4byte	0x9ac
 3745 1123 27070000 		.4byte	.LLST47
 3746 1127 17       		.uleb128 0x17
 3747 1128 950D0000 		.4byte	.LASF148
 3748 112c 01       		.byte	0x1
 3749 112d 840C     		.2byte	0xc84
 3750 112f 76000000 		.4byte	0x76
 3751 1133 48070000 		.4byte	.LLST48
 3752 1137 1C       		.uleb128 0x1c
 3753 1138 1B0C0000 		.4byte	.LASF176
 3754 113c 01       		.byte	0x1
 3755 113d 860C     		.2byte	0xc86
 3756 113f 76000000 		.4byte	0x76
 3757 1143 69070000 		.4byte	.LLST49
 3758 1147 22       		.uleb128 0x22
 3759 1148 16000000 		.4byte	.LVL171
 3760 114c 3C140000 		.4byte	0x143c
 3761 1150 1F       		.uleb128 0x1f
 3762 1151 01       		.uleb128 0x1
 3763 1152 50       		.byte	0x50
 3764 1153 01       		.uleb128 0x1
 3765 1154 30       		.byte	0x30
 3766 1155 00       		.byte	0
 3767 1156 00       		.byte	0
 3768 1157 20       		.uleb128 0x20
 3769 1158 DD070000 		.4byte	.LASF185
 3770 115c 01       		.byte	0x1
 3771 115d D90C     		.2byte	0xcd9
 3772 115f 00000000 		.4byte	.LFB25
 3773 1163 1C000000 		.4byte	.LFE25-.LFB25
 3774 1167 01       		.uleb128 0x1
 3775 1168 9C       		.byte	0x9c
 3776 1169 C0110000 		.4byte	0x11c0
 3777 116d 17       		.uleb128 0x17
 3778 116e F4010000 		.4byte	.LASF186
 3779 1172 01       		.byte	0x1
 3780 1173 D90C     		.2byte	0xcd9
 3781 1175 BD070000 		.4byte	0x7bd
 3782 1179 94070000 		.4byte	.LLST50
 3783 117d 17       		.uleb128 0x17
 3784 117e E0080000 		.4byte	.LASF94
 3785 1182 01       		.byte	0x1
 3786 1183 D90C     		.2byte	0xcd9
 3787 1185 99000000 		.4byte	0x99
 3788 1189 C0070000 		.4byte	.LLST51
 3789 118d 17       		.uleb128 0x17
 3790 118e C3040000 		.4byte	.LASF187
 3791 1192 01       		.byte	0x1
 3792 1193 D90C     		.2byte	0xcd9
 3793 1195 99000000 		.4byte	0x99
 3794 1199 EC070000 		.4byte	.LLST52
 3795 119d 1C       		.uleb128 0x1c
 3796 119e 50010000 		.4byte	.LASF151
 3797 11a2 01       		.byte	0x1
 3798 11a3 DB0C     		.2byte	0xcdb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 129


 3799 11a5 81000000 		.4byte	0x81
 3800 11a9 18080000 		.4byte	.LLST53
 3801 11ad 1D       		.uleb128 0x1d
 3802 11ae 0C000000 		.4byte	.LVL174
 3803 11b2 EC130000 		.4byte	0x13ec
 3804 11b6 1D       		.uleb128 0x1d
 3805 11b7 1A000000 		.4byte	.LVL176
 3806 11bb F7130000 		.4byte	0x13f7
 3807 11bf 00       		.byte	0
 3808 11c0 16       		.uleb128 0x16
 3809 11c1 6D000000 		.4byte	.LASF189
 3810 11c5 01       		.byte	0x1
 3811 11c6 B903     		.2byte	0x3b9
 3812 11c8 00000000 		.4byte	.LFB9
 3813 11cc 1C000000 		.4byte	.LFE9-.LFB9
 3814 11d0 01       		.uleb128 0x1
 3815 11d1 9C       		.byte	0x9c
 3816 11d2 0B120000 		.4byte	0x120b
 3817 11d6 1E       		.uleb128 0x1e
 3818 11d7 0C000000 		.4byte	.LVL179
 3819 11db 57110000 		.4byte	0x1157
 3820 11df F8110000 		.4byte	0x11f8
 3821 11e3 1F       		.uleb128 0x1f
 3822 11e4 01       		.uleb128 0x1
 3823 11e5 50       		.byte	0x50
 3824 11e6 05       		.uleb128 0x5
 3825 11e7 0C       		.byte	0xc
 3826 11e8 00040240 		.4byte	0x40020400
 3827 11ec 1F       		.uleb128 0x1f
 3828 11ed 01       		.uleb128 0x1
 3829 11ee 51       		.byte	0x51
 3830 11ef 02       		.uleb128 0x2
 3831 11f0 08       		.byte	0x8
 3832 11f1 F0       		.byte	0xf0
 3833 11f2 1F       		.uleb128 0x1f
 3834 11f3 01       		.uleb128 0x1
 3835 11f4 52       		.byte	0x52
 3836 11f5 01       		.uleb128 0x1
 3837 11f6 30       		.byte	0x30
 3838 11f7 00       		.byte	0
 3839 11f8 1D       		.uleb128 0x1d
 3840 11f9 10000000 		.4byte	.LVL180
 3841 11fd 47140000 		.4byte	0x1447
 3842 1201 1D       		.uleb128 0x1d
 3843 1202 14000000 		.4byte	.LVL181
 3844 1206 53140000 		.4byte	0x1453
 3845 120a 00       		.byte	0
 3846 120b 20       		.uleb128 0x20
 3847 120c D80D0000 		.4byte	.LASF190
 3848 1210 01       		.byte	0x1
 3849 1211 2B04     		.2byte	0x42b
 3850 1213 00000000 		.4byte	.LFB10
 3851 1217 3C000000 		.4byte	.LFE10-.LFB10
 3852 121b 01       		.uleb128 0x1
 3853 121c 9C       		.byte	0x9c
 3854 121d 44120000 		.4byte	0x1244
 3855 1221 17       		.uleb128 0x17
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 130


 3856 1222 20050000 		.4byte	.LASF184
 3857 1226 01       		.byte	0x1
 3858 1227 2B04     		.2byte	0x42b
 3859 1229 74010000 		.4byte	0x174
 3860 122d 2B080000 		.4byte	.LLST54
 3861 1231 1D       		.uleb128 0x1d
 3862 1232 14000000 		.4byte	.LVL183
 3863 1236 C0110000 		.4byte	0x11c0
 3864 123a 1D       		.uleb128 0x1d
 3865 123b 1C000000 		.4byte	.LVL184
 3866 123f 5F140000 		.4byte	0x145f
 3867 1243 00       		.byte	0
 3868 1244 1B       		.uleb128 0x1b
 3869 1245 BF0E0000 		.4byte	.LASF191
 3870 1249 01       		.byte	0x1
 3871 124a C302     		.2byte	0x2c3
 3872 124c BA000000 		.4byte	0xba
 3873 1250 00000000 		.4byte	.LFB7
 3874 1254 2C000000 		.4byte	.LFE7-.LFB7
 3875 1258 01       		.uleb128 0x1
 3876 1259 9C       		.byte	0x9c
 3877 125a AA120000 		.4byte	0x12aa
 3878 125e 19       		.uleb128 0x19
 3879 125f FC000000 		.4byte	.LASF192
 3880 1263 01       		.byte	0x1
 3881 1264 C502     		.2byte	0x2c5
 3882 1266 BA000000 		.4byte	0xba
 3883 126a 00       		.byte	0
 3884 126b 1D       		.uleb128 0x1d
 3885 126c 06000000 		.4byte	.LVL186
 3886 1270 2F0F0000 		.4byte	0xf2f
 3887 1274 1E       		.uleb128 0x1e
 3888 1275 0C000000 		.4byte	.LVL187
 3889 1279 AE0C0000 		.4byte	0xcae
 3890 127d 87120000 		.4byte	0x1287
 3891 1281 1F       		.uleb128 0x1f
 3892 1282 01       		.uleb128 0x1
 3893 1283 50       		.byte	0x50
 3894 1284 01       		.uleb128 0x1
 3895 1285 30       		.byte	0x30
 3896 1286 00       		.byte	0
 3897 1287 1E       		.uleb128 0x1e
 3898 1288 1C000000 		.4byte	.LVL188
 3899 128c 0B120000 		.4byte	0x120b
 3900 1290 9A120000 		.4byte	0x129a
 3901 1294 1F       		.uleb128 0x1f
 3902 1295 01       		.uleb128 0x1
 3903 1296 50       		.byte	0x50
 3904 1297 01       		.uleb128 0x1
 3905 1298 30       		.byte	0x30
 3906 1299 00       		.byte	0
 3907 129a 22       		.uleb128 0x22
 3908 129b 22000000 		.4byte	.LVL189
 3909 129f 0B120000 		.4byte	0x120b
 3910 12a3 1F       		.uleb128 0x1f
 3911 12a4 01       		.uleb128 0x1
 3912 12a5 50       		.byte	0x50
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 131


 3913 12a6 01       		.uleb128 0x1
 3914 12a7 31       		.byte	0x31
 3915 12a8 00       		.byte	0
 3916 12a9 00       		.byte	0
 3917 12aa 24       		.uleb128 0x24
 3918 12ab 05080000 		.4byte	.LASF193
 3919 12af 06       		.byte	0x6
 3920 12b0 AC05     		.2byte	0x5ac
 3921 12b2 32070000 		.4byte	0x732
 3922 12b6 24       		.uleb128 0x24
 3923 12b7 4F0B0000 		.4byte	.LASF194
 3924 12bb 06       		.byte	0x6
 3925 12bc AD05     		.2byte	0x5ad
 3926 12be C2120000 		.4byte	0x12c2
 3927 12c2 21       		.uleb128 0x21
 3928 12c3 6E090000 		.4byte	0x96e
 3929 12c7 0E       		.uleb128 0xe
 3930 12c8 9E0C0000 		.4byte	0xc9e
 3931 12cc D7120000 		.4byte	0x12d7
 3932 12d0 0F       		.uleb128 0xf
 3933 12d1 41020000 		.4byte	0x241
 3934 12d5 18       		.byte	0x18
 3935 12d6 00       		.byte	0
 3936 12d7 24       		.uleb128 0x24
 3937 12d8 5D0E0000 		.4byte	.LASF195
 3938 12dc 06       		.byte	0x6
 3939 12dd AE05     		.2byte	0x5ae
 3940 12df E3120000 		.4byte	0x12e3
 3941 12e3 21       		.uleb128 0x21
 3942 12e4 C7120000 		.4byte	0x12c7
 3943 12e8 25       		.uleb128 0x25
 3944 12e9 D50E0000 		.4byte	.LASF196
 3945 12ed 01       		.byte	0x1
 3946 12ee BC       		.byte	0xbc
 3947 12ef C6000000 		.4byte	0xc6
 3948 12f3 05       		.uleb128 0x5
 3949 12f4 03       		.byte	0x3
 3950 12f5 00000000 		.4byte	CapSense_widgetIndex
 3951 12f9 25       		.uleb128 0x25
 3952 12fa 36040000 		.4byte	.LASF197
 3953 12fe 01       		.byte	0x1
 3954 12ff BD       		.byte	0xbd
 3955 1300 C6000000 		.4byte	0xc6
 3956 1304 05       		.uleb128 0x5
 3957 1305 03       		.byte	0x3
 3958 1306 00000000 		.4byte	CapSense_sensorIndex
 3959 130a 25       		.uleb128 0x25
 3960 130b 3A0F0000 		.4byte	.LASF198
 3961 130f 01       		.byte	0x1
 3962 1310 BE       		.byte	0xbe
 3963 1311 81000000 		.4byte	0x81
 3964 1315 05       		.uleb128 0x5
 3965 1316 03       		.byte	0x3
 3966 1317 00000000 		.4byte	CapSense_requestScanAllWidget
 3967 131b 25       		.uleb128 0x25
 3968 131c 0C0E0000 		.4byte	.LASF199
 3969 1320 01       		.byte	0x1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 132


 3970 1321 C1       		.byte	0xc1
 3971 1322 22090000 		.4byte	0x922
 3972 1326 05       		.uleb128 0x5
 3973 1327 03       		.byte	0x3
 3974 1328 00000000 		.4byte	CapSense_curRamSnsPtr
 3975 132c 25       		.uleb128 0x25
 3976 132d DC0B0000 		.4byte	.LASF200
 3977 1331 01       		.byte	0x1
 3978 1332 AF       		.byte	0xaf
 3979 1333 74010000 		.4byte	0x174
 3980 1337 05       		.uleb128 0x5
 3981 1338 03       		.byte	0x3
 3982 1339 00000000 		.4byte	CapSense_currentSenseMethod
 3983 133d 25       		.uleb128 0x25
 3984 133e 2E0E0000 		.4byte	.LASF201
 3985 1342 01       		.byte	0x1
 3986 1343 B8       		.byte	0xb8
 3987 1344 4E130000 		.4byte	0x134e
 3988 1348 05       		.uleb128 0x5
 3989 1349 03       		.byte	0x3
 3990 134a 00000000 		.4byte	CapSense_scanFreqIndex
 3991 134e 21       		.uleb128 0x21
 3992 134f 81000000 		.4byte	0x81
 3993 1353 25       		.uleb128 0x25
 3994 1354 81090000 		.4byte	.LASF202
 3995 1358 01       		.byte	0x1
 3996 1359 C7       		.byte	0xc7
 3997 135a 64130000 		.4byte	0x1364
 3998 135e 05       		.uleb128 0x5
 3999 135f 03       		.byte	0x3
 4000 1360 00000000 		.4byte	CapSense_curFlashWdgtPtr
 4001 1364 07       		.uleb128 0x7
 4002 1365 04       		.byte	0x4
 4003 1366 6A130000 		.4byte	0x136a
 4004 136a 21       		.uleb128 0x21
 4005 136b 2E090000 		.4byte	0x92e
 4006 136f 25       		.uleb128 0x25
 4007 1370 DF020000 		.4byte	.LASF203
 4008 1374 01       		.byte	0x1
 4009 1375 CC       		.byte	0xcc
 4010 1376 A30C0000 		.4byte	0xca3
 4011 137a 05       		.uleb128 0x5
 4012 137b 03       		.byte	0x3
 4013 137c 00000000 		.4byte	CapSense_curFlashSnsPtr
 4014 1380 25       		.uleb128 0x25
 4015 1381 CB080000 		.4byte	.LASF204
 4016 1385 01       		.byte	0x1
 4017 1386 D0       		.byte	0xd0
 4018 1387 980C0000 		.4byte	0xc98
 4019 138b 05       		.uleb128 0x5
 4020 138c 03       		.byte	0x3
 4021 138d 00000000 		.4byte	CapSense_curSnsIOPtr
 4022 1391 0E       		.uleb128 0xe
 4023 1392 A1130000 		.4byte	0x13a1
 4024 1396 A1130000 		.4byte	0x13a1
 4025 139a 0F       		.uleb128 0xf
 4026 139b 41020000 		.4byte	0x241
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 133


 4027 139f 05       		.byte	0x5
 4028 13a0 00       		.byte	0
 4029 13a1 21       		.uleb128 0x21
 4030 13a2 D8090000 		.4byte	0x9d8
 4031 13a6 25       		.uleb128 0x25
 4032 13a7 7C0F0000 		.4byte	.LASF205
 4033 13ab 01       		.byte	0x1
 4034 13ac D2       		.byte	0xd2
 4035 13ad B7130000 		.4byte	0x13b7
 4036 13b1 05       		.uleb128 0x5
 4037 13b2 03       		.byte	0x3
 4038 13b3 00000000 		.4byte	CapSense_idacGainTable
 4039 13b7 21       		.uleb128 0x21
 4040 13b8 91130000 		.4byte	0x1391
 4041 13bc 26       		.uleb128 0x26
 4042 13bd F6030000 		.4byte	.LASF206
 4043 13c1 F6030000 		.4byte	.LASF206
 4044 13c5 08       		.byte	0x8
 4045 13c6 8801     		.2byte	0x188
 4046 13c8 26       		.uleb128 0x26
 4047 13c9 5F0D0000 		.4byte	.LASF207
 4048 13cd 5F0D0000 		.4byte	.LASF207
 4049 13d1 08       		.byte	0x8
 4050 13d2 8A01     		.2byte	0x18a
 4051 13d4 26       		.uleb128 0x26
 4052 13d5 A2040000 		.4byte	.LASF208
 4053 13d9 A2040000 		.4byte	.LASF208
 4054 13dd 08       		.byte	0x8
 4055 13de 8901     		.2byte	0x189
 4056 13e0 26       		.uleb128 0x26
 4057 13e1 600B0000 		.4byte	.LASF209
 4058 13e5 600B0000 		.4byte	.LASF209
 4059 13e9 08       		.byte	0x8
 4060 13ea 8B01     		.2byte	0x18b
 4061 13ec 27       		.uleb128 0x27
 4062 13ed F50D0000 		.4byte	.LASF210
 4063 13f1 F50D0000 		.4byte	.LASF210
 4064 13f5 09       		.byte	0x9
 4065 13f6 F8       		.byte	0xf8
 4066 13f7 27       		.uleb128 0x27
 4067 13f8 D8050000 		.4byte	.LASF211
 4068 13fc D8050000 		.4byte	.LASF211
 4069 1400 09       		.byte	0x9
 4070 1401 F9       		.byte	0xf9
 4071 1402 26       		.uleb128 0x26
 4072 1403 A90B0000 		.4byte	.LASF212
 4073 1407 A90B0000 		.4byte	.LASF212
 4074 140b 08       		.byte	0x8
 4075 140c 9101     		.2byte	0x191
 4076 140e 26       		.uleb128 0x26
 4077 140f 07010000 		.4byte	.LASF213
 4078 1413 07010000 		.4byte	.LASF213
 4079 1417 08       		.byte	0x8
 4080 1418 AA01     		.2byte	0x1aa
 4081 141a 27       		.uleb128 0x27
 4082 141b 320C0000 		.4byte	.LASF214
 4083 141f 320C0000 		.4byte	.LASF214
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 134


 4084 1423 0A       		.byte	0xa
 4085 1424 18       		.byte	0x18
 4086 1425 26       		.uleb128 0x26
 4087 1426 030B0000 		.4byte	.LASF215
 4088 142a 030B0000 		.4byte	.LASF215
 4089 142e 08       		.byte	0x8
 4090 142f 8E01     		.2byte	0x18e
 4091 1431 27       		.uleb128 0x27
 4092 1432 45090000 		.4byte	.LASF216
 4093 1436 45090000 		.4byte	.LASF216
 4094 143a 09       		.byte	0x9
 4095 143b ED       		.byte	0xed
 4096 143c 27       		.uleb128 0x27
 4097 143d 2E010000 		.4byte	.LASF217
 4098 1441 2E010000 		.4byte	.LASF217
 4099 1445 09       		.byte	0x9
 4100 1446 FA       		.byte	0xfa
 4101 1447 26       		.uleb128 0x26
 4102 1448 0C0A0000 		.4byte	.LASF218
 4103 144c 0C0A0000 		.4byte	.LASF218
 4104 1450 08       		.byte	0x8
 4105 1451 A501     		.2byte	0x1a5
 4106 1453 26       		.uleb128 0x26
 4107 1454 AD050000 		.4byte	.LASF219
 4108 1458 AD050000 		.4byte	.LASF219
 4109 145c 08       		.byte	0x8
 4110 145d A901     		.2byte	0x1a9
 4111 145f 26       		.uleb128 0x26
 4112 1460 45080000 		.4byte	.LASF220
 4113 1464 45080000 		.4byte	.LASF220
 4114 1468 08       		.byte	0x8
 4115 1469 A101     		.2byte	0x1a1
 4116 146b 00       		.byte	0
 4117              		.section	.debug_abbrev,"",%progbits
 4118              	.Ldebug_abbrev0:
 4119 0000 01       		.uleb128 0x1
 4120 0001 11       		.uleb128 0x11
 4121 0002 01       		.byte	0x1
 4122 0003 25       		.uleb128 0x25
 4123 0004 0E       		.uleb128 0xe
 4124 0005 13       		.uleb128 0x13
 4125 0006 0B       		.uleb128 0xb
 4126 0007 03       		.uleb128 0x3
 4127 0008 0E       		.uleb128 0xe
 4128 0009 1B       		.uleb128 0x1b
 4129 000a 0E       		.uleb128 0xe
 4130 000b 55       		.uleb128 0x55
 4131 000c 17       		.uleb128 0x17
 4132 000d 11       		.uleb128 0x11
 4133 000e 01       		.uleb128 0x1
 4134 000f 10       		.uleb128 0x10
 4135 0010 17       		.uleb128 0x17
 4136 0011 00       		.byte	0
 4137 0012 00       		.byte	0
 4138 0013 02       		.uleb128 0x2
 4139 0014 24       		.uleb128 0x24
 4140 0015 00       		.byte	0
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 135


 4141 0016 0B       		.uleb128 0xb
 4142 0017 0B       		.uleb128 0xb
 4143 0018 3E       		.uleb128 0x3e
 4144 0019 0B       		.uleb128 0xb
 4145 001a 03       		.uleb128 0x3
 4146 001b 0E       		.uleb128 0xe
 4147 001c 00       		.byte	0
 4148 001d 00       		.byte	0
 4149 001e 03       		.uleb128 0x3
 4150 001f 16       		.uleb128 0x16
 4151 0020 00       		.byte	0
 4152 0021 03       		.uleb128 0x3
 4153 0022 0E       		.uleb128 0xe
 4154 0023 3A       		.uleb128 0x3a
 4155 0024 0B       		.uleb128 0xb
 4156 0025 3B       		.uleb128 0x3b
 4157 0026 0B       		.uleb128 0xb
 4158 0027 49       		.uleb128 0x49
 4159 0028 13       		.uleb128 0x13
 4160 0029 00       		.byte	0
 4161 002a 00       		.byte	0
 4162 002b 04       		.uleb128 0x4
 4163 002c 24       		.uleb128 0x24
 4164 002d 00       		.byte	0
 4165 002e 0B       		.uleb128 0xb
 4166 002f 0B       		.uleb128 0xb
 4167 0030 3E       		.uleb128 0x3e
 4168 0031 0B       		.uleb128 0xb
 4169 0032 03       		.uleb128 0x3
 4170 0033 08       		.uleb128 0x8
 4171 0034 00       		.byte	0
 4172 0035 00       		.byte	0
 4173 0036 05       		.uleb128 0x5
 4174 0037 16       		.uleb128 0x16
 4175 0038 00       		.byte	0
 4176 0039 03       		.uleb128 0x3
 4177 003a 0E       		.uleb128 0xe
 4178 003b 3A       		.uleb128 0x3a
 4179 003c 0B       		.uleb128 0xb
 4180 003d 3B       		.uleb128 0x3b
 4181 003e 05       		.uleb128 0x5
 4182 003f 49       		.uleb128 0x49
 4183 0040 13       		.uleb128 0x13
 4184 0041 00       		.byte	0
 4185 0042 00       		.byte	0
 4186 0043 06       		.uleb128 0x6
 4187 0044 35       		.uleb128 0x35
 4188 0045 00       		.byte	0
 4189 0046 49       		.uleb128 0x49
 4190 0047 13       		.uleb128 0x13
 4191 0048 00       		.byte	0
 4192 0049 00       		.byte	0
 4193 004a 07       		.uleb128 0x7
 4194 004b 0F       		.uleb128 0xf
 4195 004c 00       		.byte	0
 4196 004d 0B       		.uleb128 0xb
 4197 004e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 136


 4198 004f 49       		.uleb128 0x49
 4199 0050 13       		.uleb128 0x13
 4200 0051 00       		.byte	0
 4201 0052 00       		.byte	0
 4202 0053 08       		.uleb128 0x8
 4203 0054 15       		.uleb128 0x15
 4204 0055 00       		.byte	0
 4205 0056 27       		.uleb128 0x27
 4206 0057 19       		.uleb128 0x19
 4207 0058 00       		.byte	0
 4208 0059 00       		.byte	0
 4209 005a 09       		.uleb128 0x9
 4210 005b 04       		.uleb128 0x4
 4211 005c 01       		.byte	0x1
 4212 005d 0B       		.uleb128 0xb
 4213 005e 0B       		.uleb128 0xb
 4214 005f 49       		.uleb128 0x49
 4215 0060 13       		.uleb128 0x13
 4216 0061 3A       		.uleb128 0x3a
 4217 0062 0B       		.uleb128 0xb
 4218 0063 3B       		.uleb128 0x3b
 4219 0064 0B       		.uleb128 0xb
 4220 0065 01       		.uleb128 0x1
 4221 0066 13       		.uleb128 0x13
 4222 0067 00       		.byte	0
 4223 0068 00       		.byte	0
 4224 0069 0A       		.uleb128 0xa
 4225 006a 28       		.uleb128 0x28
 4226 006b 00       		.byte	0
 4227 006c 03       		.uleb128 0x3
 4228 006d 0E       		.uleb128 0xe
 4229 006e 1C       		.uleb128 0x1c
 4230 006f 0B       		.uleb128 0xb
 4231 0070 00       		.byte	0
 4232 0071 00       		.byte	0
 4233 0072 0B       		.uleb128 0xb
 4234 0073 13       		.uleb128 0x13
 4235 0074 01       		.byte	0x1
 4236 0075 0B       		.uleb128 0xb
 4237 0076 0B       		.uleb128 0xb
 4238 0077 3A       		.uleb128 0x3a
 4239 0078 0B       		.uleb128 0xb
 4240 0079 3B       		.uleb128 0x3b
 4241 007a 0B       		.uleb128 0xb
 4242 007b 01       		.uleb128 0x1
 4243 007c 13       		.uleb128 0x13
 4244 007d 00       		.byte	0
 4245 007e 00       		.byte	0
 4246 007f 0C       		.uleb128 0xc
 4247 0080 0D       		.uleb128 0xd
 4248 0081 00       		.byte	0
 4249 0082 03       		.uleb128 0x3
 4250 0083 0E       		.uleb128 0xe
 4251 0084 3A       		.uleb128 0x3a
 4252 0085 0B       		.uleb128 0xb
 4253 0086 3B       		.uleb128 0x3b
 4254 0087 0B       		.uleb128 0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 137


 4255 0088 49       		.uleb128 0x49
 4256 0089 13       		.uleb128 0x13
 4257 008a 38       		.uleb128 0x38
 4258 008b 0B       		.uleb128 0xb
 4259 008c 00       		.byte	0
 4260 008d 00       		.byte	0
 4261 008e 0D       		.uleb128 0xd
 4262 008f 0D       		.uleb128 0xd
 4263 0090 00       		.byte	0
 4264 0091 03       		.uleb128 0x3
 4265 0092 0E       		.uleb128 0xe
 4266 0093 3A       		.uleb128 0x3a
 4267 0094 0B       		.uleb128 0xb
 4268 0095 3B       		.uleb128 0x3b
 4269 0096 05       		.uleb128 0x5
 4270 0097 49       		.uleb128 0x49
 4271 0098 13       		.uleb128 0x13
 4272 0099 38       		.uleb128 0x38
 4273 009a 0B       		.uleb128 0xb
 4274 009b 00       		.byte	0
 4275 009c 00       		.byte	0
 4276 009d 0E       		.uleb128 0xe
 4277 009e 01       		.uleb128 0x1
 4278 009f 01       		.byte	0x1
 4279 00a0 49       		.uleb128 0x49
 4280 00a1 13       		.uleb128 0x13
 4281 00a2 01       		.uleb128 0x1
 4282 00a3 13       		.uleb128 0x13
 4283 00a4 00       		.byte	0
 4284 00a5 00       		.byte	0
 4285 00a6 0F       		.uleb128 0xf
 4286 00a7 21       		.uleb128 0x21
 4287 00a8 00       		.byte	0
 4288 00a9 49       		.uleb128 0x49
 4289 00aa 13       		.uleb128 0x13
 4290 00ab 2F       		.uleb128 0x2f
 4291 00ac 0B       		.uleb128 0xb
 4292 00ad 00       		.byte	0
 4293 00ae 00       		.byte	0
 4294 00af 10       		.uleb128 0x10
 4295 00b0 13       		.uleb128 0x13
 4296 00b1 01       		.byte	0x1
 4297 00b2 0B       		.uleb128 0xb
 4298 00b3 0B       		.uleb128 0xb
 4299 00b4 3A       		.uleb128 0x3a
 4300 00b5 0B       		.uleb128 0xb
 4301 00b6 3B       		.uleb128 0x3b
 4302 00b7 05       		.uleb128 0x5
 4303 00b8 01       		.uleb128 0x1
 4304 00b9 13       		.uleb128 0x13
 4305 00ba 00       		.byte	0
 4306 00bb 00       		.byte	0
 4307 00bc 11       		.uleb128 0x11
 4308 00bd 0D       		.uleb128 0xd
 4309 00be 00       		.byte	0
 4310 00bf 03       		.uleb128 0x3
 4311 00c0 08       		.uleb128 0x8
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 138


 4312 00c1 3A       		.uleb128 0x3a
 4313 00c2 0B       		.uleb128 0xb
 4314 00c3 3B       		.uleb128 0x3b
 4315 00c4 05       		.uleb128 0x5
 4316 00c5 49       		.uleb128 0x49
 4317 00c6 13       		.uleb128 0x13
 4318 00c7 38       		.uleb128 0x38
 4319 00c8 0B       		.uleb128 0xb
 4320 00c9 00       		.byte	0
 4321 00ca 00       		.byte	0
 4322 00cb 12       		.uleb128 0x12
 4323 00cc 13       		.uleb128 0x13
 4324 00cd 01       		.byte	0x1
 4325 00ce 0B       		.uleb128 0xb
 4326 00cf 05       		.uleb128 0x5
 4327 00d0 3A       		.uleb128 0x3a
 4328 00d1 0B       		.uleb128 0xb
 4329 00d2 3B       		.uleb128 0x3b
 4330 00d3 05       		.uleb128 0x5
 4331 00d4 01       		.uleb128 0x1
 4332 00d5 13       		.uleb128 0x13
 4333 00d6 00       		.byte	0
 4334 00d7 00       		.byte	0
 4335 00d8 13       		.uleb128 0x13
 4336 00d9 0D       		.uleb128 0xd
 4337 00da 00       		.byte	0
 4338 00db 03       		.uleb128 0x3
 4339 00dc 0E       		.uleb128 0xe
 4340 00dd 3A       		.uleb128 0x3a
 4341 00de 0B       		.uleb128 0xb
 4342 00df 3B       		.uleb128 0x3b
 4343 00e0 05       		.uleb128 0x5
 4344 00e1 49       		.uleb128 0x49
 4345 00e2 13       		.uleb128 0x13
 4346 00e3 38       		.uleb128 0x38
 4347 00e4 05       		.uleb128 0x5
 4348 00e5 00       		.byte	0
 4349 00e6 00       		.byte	0
 4350 00e7 14       		.uleb128 0x14
 4351 00e8 26       		.uleb128 0x26
 4352 00e9 00       		.byte	0
 4353 00ea 00       		.byte	0
 4354 00eb 00       		.byte	0
 4355 00ec 15       		.uleb128 0x15
 4356 00ed 0F       		.uleb128 0xf
 4357 00ee 00       		.byte	0
 4358 00ef 0B       		.uleb128 0xb
 4359 00f0 0B       		.uleb128 0xb
 4360 00f1 00       		.byte	0
 4361 00f2 00       		.byte	0
 4362 00f3 16       		.uleb128 0x16
 4363 00f4 2E       		.uleb128 0x2e
 4364 00f5 01       		.byte	0x1
 4365 00f6 03       		.uleb128 0x3
 4366 00f7 0E       		.uleb128 0xe
 4367 00f8 3A       		.uleb128 0x3a
 4368 00f9 0B       		.uleb128 0xb
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 139


 4369 00fa 3B       		.uleb128 0x3b
 4370 00fb 05       		.uleb128 0x5
 4371 00fc 27       		.uleb128 0x27
 4372 00fd 19       		.uleb128 0x19
 4373 00fe 11       		.uleb128 0x11
 4374 00ff 01       		.uleb128 0x1
 4375 0100 12       		.uleb128 0x12
 4376 0101 06       		.uleb128 0x6
 4377 0102 40       		.uleb128 0x40
 4378 0103 18       		.uleb128 0x18
 4379 0104 9742     		.uleb128 0x2117
 4380 0106 19       		.uleb128 0x19
 4381 0107 01       		.uleb128 0x1
 4382 0108 13       		.uleb128 0x13
 4383 0109 00       		.byte	0
 4384 010a 00       		.byte	0
 4385 010b 17       		.uleb128 0x17
 4386 010c 05       		.uleb128 0x5
 4387 010d 00       		.byte	0
 4388 010e 03       		.uleb128 0x3
 4389 010f 0E       		.uleb128 0xe
 4390 0110 3A       		.uleb128 0x3a
 4391 0111 0B       		.uleb128 0xb
 4392 0112 3B       		.uleb128 0x3b
 4393 0113 05       		.uleb128 0x5
 4394 0114 49       		.uleb128 0x49
 4395 0115 13       		.uleb128 0x13
 4396 0116 02       		.uleb128 0x2
 4397 0117 17       		.uleb128 0x17
 4398 0118 00       		.byte	0
 4399 0119 00       		.byte	0
 4400 011a 18       		.uleb128 0x18
 4401 011b 05       		.uleb128 0x5
 4402 011c 00       		.byte	0
 4403 011d 03       		.uleb128 0x3
 4404 011e 0E       		.uleb128 0xe
 4405 011f 3A       		.uleb128 0x3a
 4406 0120 0B       		.uleb128 0xb
 4407 0121 3B       		.uleb128 0x3b
 4408 0122 05       		.uleb128 0x5
 4409 0123 49       		.uleb128 0x49
 4410 0124 13       		.uleb128 0x13
 4411 0125 02       		.uleb128 0x2
 4412 0126 18       		.uleb128 0x18
 4413 0127 00       		.byte	0
 4414 0128 00       		.byte	0
 4415 0129 19       		.uleb128 0x19
 4416 012a 34       		.uleb128 0x34
 4417 012b 00       		.byte	0
 4418 012c 03       		.uleb128 0x3
 4419 012d 0E       		.uleb128 0xe
 4420 012e 3A       		.uleb128 0x3a
 4421 012f 0B       		.uleb128 0xb
 4422 0130 3B       		.uleb128 0x3b
 4423 0131 05       		.uleb128 0x5
 4424 0132 49       		.uleb128 0x49
 4425 0133 13       		.uleb128 0x13
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 140


 4426 0134 1C       		.uleb128 0x1c
 4427 0135 0B       		.uleb128 0xb
 4428 0136 00       		.byte	0
 4429 0137 00       		.byte	0
 4430 0138 1A       		.uleb128 0x1a
 4431 0139 2E       		.uleb128 0x2e
 4432 013a 00       		.byte	0
 4433 013b 3F       		.uleb128 0x3f
 4434 013c 19       		.uleb128 0x19
 4435 013d 03       		.uleb128 0x3
 4436 013e 0E       		.uleb128 0xe
 4437 013f 3A       		.uleb128 0x3a
 4438 0140 0B       		.uleb128 0xb
 4439 0141 3B       		.uleb128 0x3b
 4440 0142 0B       		.uleb128 0xb
 4441 0143 27       		.uleb128 0x27
 4442 0144 19       		.uleb128 0x19
 4443 0145 49       		.uleb128 0x49
 4444 0146 13       		.uleb128 0x13
 4445 0147 11       		.uleb128 0x11
 4446 0148 01       		.uleb128 0x1
 4447 0149 12       		.uleb128 0x12
 4448 014a 06       		.uleb128 0x6
 4449 014b 40       		.uleb128 0x40
 4450 014c 18       		.uleb128 0x18
 4451 014d 9742     		.uleb128 0x2117
 4452 014f 19       		.uleb128 0x19
 4453 0150 00       		.byte	0
 4454 0151 00       		.byte	0
 4455 0152 1B       		.uleb128 0x1b
 4456 0153 2E       		.uleb128 0x2e
 4457 0154 01       		.byte	0x1
 4458 0155 3F       		.uleb128 0x3f
 4459 0156 19       		.uleb128 0x19
 4460 0157 03       		.uleb128 0x3
 4461 0158 0E       		.uleb128 0xe
 4462 0159 3A       		.uleb128 0x3a
 4463 015a 0B       		.uleb128 0xb
 4464 015b 3B       		.uleb128 0x3b
 4465 015c 05       		.uleb128 0x5
 4466 015d 27       		.uleb128 0x27
 4467 015e 19       		.uleb128 0x19
 4468 015f 49       		.uleb128 0x49
 4469 0160 13       		.uleb128 0x13
 4470 0161 11       		.uleb128 0x11
 4471 0162 01       		.uleb128 0x1
 4472 0163 12       		.uleb128 0x12
 4473 0164 06       		.uleb128 0x6
 4474 0165 40       		.uleb128 0x40
 4475 0166 18       		.uleb128 0x18
 4476 0167 9742     		.uleb128 0x2117
 4477 0169 19       		.uleb128 0x19
 4478 016a 01       		.uleb128 0x1
 4479 016b 13       		.uleb128 0x13
 4480 016c 00       		.byte	0
 4481 016d 00       		.byte	0
 4482 016e 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 141


 4483 016f 34       		.uleb128 0x34
 4484 0170 00       		.byte	0
 4485 0171 03       		.uleb128 0x3
 4486 0172 0E       		.uleb128 0xe
 4487 0173 3A       		.uleb128 0x3a
 4488 0174 0B       		.uleb128 0xb
 4489 0175 3B       		.uleb128 0x3b
 4490 0176 05       		.uleb128 0x5
 4491 0177 49       		.uleb128 0x49
 4492 0178 13       		.uleb128 0x13
 4493 0179 02       		.uleb128 0x2
 4494 017a 17       		.uleb128 0x17
 4495 017b 00       		.byte	0
 4496 017c 00       		.byte	0
 4497 017d 1D       		.uleb128 0x1d
 4498 017e 898201   		.uleb128 0x4109
 4499 0181 00       		.byte	0
 4500 0182 11       		.uleb128 0x11
 4501 0183 01       		.uleb128 0x1
 4502 0184 31       		.uleb128 0x31
 4503 0185 13       		.uleb128 0x13
 4504 0186 00       		.byte	0
 4505 0187 00       		.byte	0
 4506 0188 1E       		.uleb128 0x1e
 4507 0189 898201   		.uleb128 0x4109
 4508 018c 01       		.byte	0x1
 4509 018d 11       		.uleb128 0x11
 4510 018e 01       		.uleb128 0x1
 4511 018f 31       		.uleb128 0x31
 4512 0190 13       		.uleb128 0x13
 4513 0191 01       		.uleb128 0x1
 4514 0192 13       		.uleb128 0x13
 4515 0193 00       		.byte	0
 4516 0194 00       		.byte	0
 4517 0195 1F       		.uleb128 0x1f
 4518 0196 8A8201   		.uleb128 0x410a
 4519 0199 00       		.byte	0
 4520 019a 02       		.uleb128 0x2
 4521 019b 18       		.uleb128 0x18
 4522 019c 9142     		.uleb128 0x2111
 4523 019e 18       		.uleb128 0x18
 4524 019f 00       		.byte	0
 4525 01a0 00       		.byte	0
 4526 01a1 20       		.uleb128 0x20
 4527 01a2 2E       		.uleb128 0x2e
 4528 01a3 01       		.byte	0x1
 4529 01a4 3F       		.uleb128 0x3f
 4530 01a5 19       		.uleb128 0x19
 4531 01a6 03       		.uleb128 0x3
 4532 01a7 0E       		.uleb128 0xe
 4533 01a8 3A       		.uleb128 0x3a
 4534 01a9 0B       		.uleb128 0xb
 4535 01aa 3B       		.uleb128 0x3b
 4536 01ab 05       		.uleb128 0x5
 4537 01ac 27       		.uleb128 0x27
 4538 01ad 19       		.uleb128 0x19
 4539 01ae 11       		.uleb128 0x11
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 142


 4540 01af 01       		.uleb128 0x1
 4541 01b0 12       		.uleb128 0x12
 4542 01b1 06       		.uleb128 0x6
 4543 01b2 40       		.uleb128 0x40
 4544 01b3 18       		.uleb128 0x18
 4545 01b4 9742     		.uleb128 0x2117
 4546 01b6 19       		.uleb128 0x19
 4547 01b7 01       		.uleb128 0x1
 4548 01b8 13       		.uleb128 0x13
 4549 01b9 00       		.byte	0
 4550 01ba 00       		.byte	0
 4551 01bb 21       		.uleb128 0x21
 4552 01bc 26       		.uleb128 0x26
 4553 01bd 00       		.byte	0
 4554 01be 49       		.uleb128 0x49
 4555 01bf 13       		.uleb128 0x13
 4556 01c0 00       		.byte	0
 4557 01c1 00       		.byte	0
 4558 01c2 22       		.uleb128 0x22
 4559 01c3 898201   		.uleb128 0x4109
 4560 01c6 01       		.byte	0x1
 4561 01c7 11       		.uleb128 0x11
 4562 01c8 01       		.uleb128 0x1
 4563 01c9 31       		.uleb128 0x31
 4564 01ca 13       		.uleb128 0x13
 4565 01cb 00       		.byte	0
 4566 01cc 00       		.byte	0
 4567 01cd 23       		.uleb128 0x23
 4568 01ce 34       		.uleb128 0x34
 4569 01cf 00       		.byte	0
 4570 01d0 03       		.uleb128 0x3
 4571 01d1 0E       		.uleb128 0xe
 4572 01d2 3A       		.uleb128 0x3a
 4573 01d3 0B       		.uleb128 0xb
 4574 01d4 3B       		.uleb128 0x3b
 4575 01d5 05       		.uleb128 0x5
 4576 01d6 49       		.uleb128 0x49
 4577 01d7 13       		.uleb128 0x13
 4578 01d8 02       		.uleb128 0x2
 4579 01d9 18       		.uleb128 0x18
 4580 01da 00       		.byte	0
 4581 01db 00       		.byte	0
 4582 01dc 24       		.uleb128 0x24
 4583 01dd 34       		.uleb128 0x34
 4584 01de 00       		.byte	0
 4585 01df 03       		.uleb128 0x3
 4586 01e0 0E       		.uleb128 0xe
 4587 01e1 3A       		.uleb128 0x3a
 4588 01e2 0B       		.uleb128 0xb
 4589 01e3 3B       		.uleb128 0x3b
 4590 01e4 05       		.uleb128 0x5
 4591 01e5 49       		.uleb128 0x49
 4592 01e6 13       		.uleb128 0x13
 4593 01e7 3F       		.uleb128 0x3f
 4594 01e8 19       		.uleb128 0x19
 4595 01e9 3C       		.uleb128 0x3c
 4596 01ea 19       		.uleb128 0x19
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 143


 4597 01eb 00       		.byte	0
 4598 01ec 00       		.byte	0
 4599 01ed 25       		.uleb128 0x25
 4600 01ee 34       		.uleb128 0x34
 4601 01ef 00       		.byte	0
 4602 01f0 03       		.uleb128 0x3
 4603 01f1 0E       		.uleb128 0xe
 4604 01f2 3A       		.uleb128 0x3a
 4605 01f3 0B       		.uleb128 0xb
 4606 01f4 3B       		.uleb128 0x3b
 4607 01f5 0B       		.uleb128 0xb
 4608 01f6 49       		.uleb128 0x49
 4609 01f7 13       		.uleb128 0x13
 4610 01f8 3F       		.uleb128 0x3f
 4611 01f9 19       		.uleb128 0x19
 4612 01fa 02       		.uleb128 0x2
 4613 01fb 18       		.uleb128 0x18
 4614 01fc 00       		.byte	0
 4615 01fd 00       		.byte	0
 4616 01fe 26       		.uleb128 0x26
 4617 01ff 2E       		.uleb128 0x2e
 4618 0200 00       		.byte	0
 4619 0201 3F       		.uleb128 0x3f
 4620 0202 19       		.uleb128 0x19
 4621 0203 3C       		.uleb128 0x3c
 4622 0204 19       		.uleb128 0x19
 4623 0205 6E       		.uleb128 0x6e
 4624 0206 0E       		.uleb128 0xe
 4625 0207 03       		.uleb128 0x3
 4626 0208 0E       		.uleb128 0xe
 4627 0209 3A       		.uleb128 0x3a
 4628 020a 0B       		.uleb128 0xb
 4629 020b 3B       		.uleb128 0x3b
 4630 020c 05       		.uleb128 0x5
 4631 020d 00       		.byte	0
 4632 020e 00       		.byte	0
 4633 020f 27       		.uleb128 0x27
 4634 0210 2E       		.uleb128 0x2e
 4635 0211 00       		.byte	0
 4636 0212 3F       		.uleb128 0x3f
 4637 0213 19       		.uleb128 0x19
 4638 0214 3C       		.uleb128 0x3c
 4639 0215 19       		.uleb128 0x19
 4640 0216 6E       		.uleb128 0x6e
 4641 0217 0E       		.uleb128 0xe
 4642 0218 03       		.uleb128 0x3
 4643 0219 0E       		.uleb128 0xe
 4644 021a 3A       		.uleb128 0x3a
 4645 021b 0B       		.uleb128 0xb
 4646 021c 3B       		.uleb128 0x3b
 4647 021d 0B       		.uleb128 0xb
 4648 021e 00       		.byte	0
 4649 021f 00       		.byte	0
 4650 0220 00       		.byte	0
 4651              		.section	.debug_loc,"",%progbits
 4652              	.Ldebug_loc0:
 4653              	.LLST0:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 144


 4654 0000 00000000 		.4byte	.LVL0
 4655 0004 08000000 		.4byte	.LVL1
 4656 0008 0100     		.2byte	0x1
 4657 000a 50       		.byte	0x50
 4658 000b 08000000 		.4byte	.LVL1
 4659 000f 20000000 		.4byte	.LFE20
 4660 0013 0400     		.2byte	0x4
 4661 0015 F3       		.byte	0xf3
 4662 0016 01       		.uleb128 0x1
 4663 0017 50       		.byte	0x50
 4664 0018 9F       		.byte	0x9f
 4665 0019 00000000 		.4byte	0
 4666 001d 00000000 		.4byte	0
 4667              	.LLST1:
 4668 0021 00000000 		.4byte	.LVL2
 4669 0025 37000000 		.4byte	.LVL4-1
 4670 0029 0100     		.2byte	0x1
 4671 002b 50       		.byte	0x50
 4672 002c 37000000 		.4byte	.LVL4-1
 4673 0030 40000000 		.4byte	.LFE2
 4674 0034 0400     		.2byte	0x4
 4675 0036 F3       		.byte	0xf3
 4676 0037 01       		.uleb128 0x1
 4677 0038 50       		.byte	0x50
 4678 0039 9F       		.byte	0x9f
 4679 003a 00000000 		.4byte	0
 4680 003e 00000000 		.4byte	0
 4681              	.LLST2:
 4682 0042 30000000 		.4byte	.LVL3
 4683 0046 3A000000 		.4byte	.LVL5
 4684 004a 0100     		.2byte	0x1
 4685 004c 54       		.byte	0x54
 4686 004d 3A000000 		.4byte	.LVL5
 4687 0051 40000000 		.4byte	.LFE2
 4688 0055 0100     		.2byte	0x1
 4689 0057 50       		.byte	0x50
 4690 0058 00000000 		.4byte	0
 4691 005c 00000000 		.4byte	0
 4692              	.LLST3:
 4693 0060 02000000 		.4byte	.LVL6
 4694 0064 22000000 		.4byte	.LVL8
 4695 0068 0200     		.2byte	0x2
 4696 006a 30       		.byte	0x30
 4697 006b 9F       		.byte	0x9f
 4698 006c 22000000 		.4byte	.LVL8
 4699 0070 2C000000 		.4byte	.LFE3
 4700 0074 0100     		.2byte	0x1
 4701 0076 50       		.byte	0x50
 4702 0077 00000000 		.4byte	0
 4703 007b 00000000 		.4byte	0
 4704              	.LLST4:
 4705 007f 02000000 		.4byte	.LVL9
 4706 0083 12000000 		.4byte	.LVL10
 4707 0087 0300     		.2byte	0x3
 4708 0089 09       		.byte	0x9
 4709 008a FF       		.byte	0xff
 4710 008b 9F       		.byte	0x9f
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 145


 4711 008c 12000000 		.4byte	.LVL10
 4712 0090 14000000 		.4byte	.LVL11
 4713 0094 0100     		.2byte	0x1
 4714 0096 50       		.byte	0x50
 4715 0097 18000000 		.4byte	.LVL12
 4716 009b 31000000 		.4byte	.LVL13-1
 4717 009f 0100     		.2byte	0x1
 4718 00a1 50       		.byte	0x50
 4719 00a2 32000000 		.4byte	.LVL13
 4720 00a6 3C000000 		.4byte	.LVL15
 4721 00aa 0100     		.2byte	0x1
 4722 00ac 50       		.byte	0x50
 4723 00ad 3C000000 		.4byte	.LVL15
 4724 00b1 3E000000 		.4byte	.LVL16
 4725 00b5 0300     		.2byte	0x3
 4726 00b7 09       		.byte	0x9
 4727 00b8 FF       		.byte	0xff
 4728 00b9 9F       		.byte	0x9f
 4729 00ba 3E000000 		.4byte	.LVL16
 4730 00be 48000000 		.4byte	.LFE4
 4731 00c2 0100     		.2byte	0x1
 4732 00c4 50       		.byte	0x50
 4733 00c5 00000000 		.4byte	0
 4734 00c9 00000000 		.4byte	0
 4735              	.LLST5:
 4736 00cd 12000000 		.4byte	.LVL10
 4737 00d1 3C000000 		.4byte	.LVL15
 4738 00d5 0100     		.2byte	0x1
 4739 00d7 54       		.byte	0x54
 4740 00d8 00000000 		.4byte	0
 4741 00dc 00000000 		.4byte	0
 4742              	.LLST6:
 4743 00e0 00000000 		.4byte	.LVL17
 4744 00e4 49000000 		.4byte	.LVL19-1
 4745 00e8 0100     		.2byte	0x1
 4746 00ea 50       		.byte	0x50
 4747 00eb 49000000 		.4byte	.LVL19-1
 4748 00ef 58000000 		.4byte	.LFE5
 4749 00f3 0400     		.2byte	0x4
 4750 00f5 F3       		.byte	0xf3
 4751 00f6 01       		.uleb128 0x1
 4752 00f7 50       		.byte	0x50
 4753 00f8 9F       		.byte	0x9f
 4754 00f9 00000000 		.4byte	0
 4755 00fd 00000000 		.4byte	0
 4756              	.LLST7:
 4757 0101 00000000 		.4byte	.LVL17
 4758 0105 49000000 		.4byte	.LVL19-1
 4759 0109 0100     		.2byte	0x1
 4760 010b 51       		.byte	0x51
 4761 010c 49000000 		.4byte	.LVL19-1
 4762 0110 58000000 		.4byte	.LFE5
 4763 0114 0400     		.2byte	0x4
 4764 0116 F3       		.byte	0xf3
 4765 0117 01       		.uleb128 0x1
 4766 0118 51       		.byte	0x51
 4767 0119 9F       		.byte	0x9f
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 146


 4768 011a 00000000 		.4byte	0
 4769 011e 00000000 		.4byte	0
 4770              	.LLST8:
 4771 0122 42000000 		.4byte	.LVL18
 4772 0126 4C000000 		.4byte	.LVL20
 4773 012a 0100     		.2byte	0x1
 4774 012c 54       		.byte	0x54
 4775 012d 4C000000 		.4byte	.LVL20
 4776 0131 58000000 		.4byte	.LFE5
 4777 0135 0100     		.2byte	0x1
 4778 0137 50       		.byte	0x50
 4779 0138 00000000 		.4byte	0
 4780 013c 00000000 		.4byte	0
 4781              	.LLST9:
 4782 0140 02000000 		.4byte	.LVL21
 4783 0144 22000000 		.4byte	.LVL23
 4784 0148 0200     		.2byte	0x2
 4785 014a 30       		.byte	0x30
 4786 014b 9F       		.byte	0x9f
 4787 014c 22000000 		.4byte	.LVL23
 4788 0150 2C000000 		.4byte	.LFE6
 4789 0154 0100     		.2byte	0x1
 4790 0156 50       		.byte	0x50
 4791 0157 00000000 		.4byte	0
 4792 015b 00000000 		.4byte	0
 4793              	.LLST10:
 4794 015f 00000000 		.4byte	.LVL24
 4795 0163 1A000000 		.4byte	.LVL26
 4796 0167 0100     		.2byte	0x1
 4797 0169 50       		.byte	0x50
 4798 016a 1A000000 		.4byte	.LVL26
 4799 016e 32000000 		.4byte	.LVL32
 4800 0172 0400     		.2byte	0x4
 4801 0174 F3       		.byte	0xf3
 4802 0175 01       		.uleb128 0x1
 4803 0176 50       		.byte	0x50
 4804 0177 9F       		.byte	0x9f
 4805 0178 32000000 		.4byte	.LVL32
 4806 017c 36000000 		.4byte	.LVL33
 4807 0180 0100     		.2byte	0x1
 4808 0182 50       		.byte	0x50
 4809 0183 36000000 		.4byte	.LVL33
 4810 0187 0C010000 		.4byte	.LFE8
 4811 018b 0400     		.2byte	0x4
 4812 018d F3       		.byte	0xf3
 4813 018e 01       		.uleb128 0x1
 4814 018f 50       		.byte	0x50
 4815 0190 9F       		.byte	0x9f
 4816 0191 00000000 		.4byte	0
 4817 0195 00000000 		.4byte	0
 4818              	.LLST11:
 4819 0199 00000000 		.4byte	.LVL24
 4820 019d 1E000000 		.4byte	.LVL28
 4821 01a1 0100     		.2byte	0x1
 4822 01a3 51       		.byte	0x51
 4823 01a4 1E000000 		.4byte	.LVL28
 4824 01a8 32000000 		.4byte	.LVL32
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 147


 4825 01ac 0400     		.2byte	0x4
 4826 01ae F3       		.byte	0xf3
 4827 01af 01       		.uleb128 0x1
 4828 01b0 51       		.byte	0x51
 4829 01b1 9F       		.byte	0x9f
 4830 01b2 32000000 		.4byte	.LVL32
 4831 01b6 3E000000 		.4byte	.LVL34
 4832 01ba 0100     		.2byte	0x1
 4833 01bc 51       		.byte	0x51
 4834 01bd 3E000000 		.4byte	.LVL34
 4835 01c1 0C010000 		.4byte	.LFE8
 4836 01c5 0400     		.2byte	0x4
 4837 01c7 F3       		.byte	0xf3
 4838 01c8 01       		.uleb128 0x1
 4839 01c9 51       		.byte	0x51
 4840 01ca 9F       		.byte	0x9f
 4841 01cb 00000000 		.4byte	0
 4842 01cf 00000000 		.4byte	0
 4843              	.LLST12:
 4844 01d3 00000000 		.4byte	.LVL24
 4845 01d7 0E000000 		.4byte	.LVL25
 4846 01db 0100     		.2byte	0x1
 4847 01dd 52       		.byte	0x52
 4848 01de 0E000000 		.4byte	.LVL25
 4849 01e2 FC000000 		.4byte	.LVL51
 4850 01e6 0100     		.2byte	0x1
 4851 01e8 56       		.byte	0x56
 4852 01e9 FC000000 		.4byte	.LVL51
 4853 01ed 0C010000 		.4byte	.LFE8
 4854 01f1 0400     		.2byte	0x4
 4855 01f3 F3       		.byte	0xf3
 4856 01f4 01       		.uleb128 0x1
 4857 01f5 52       		.byte	0x52
 4858 01f6 9F       		.byte	0x9f
 4859 01f7 00000000 		.4byte	0
 4860 01fb 00000000 		.4byte	0
 4861              	.LLST13:
 4862 01ff 30000000 		.4byte	.LVL31
 4863 0203 32000000 		.4byte	.LVL32
 4864 0207 0100     		.2byte	0x1
 4865 0209 53       		.byte	0x53
 4866 020a 42000000 		.4byte	.LVL35
 4867 020e 46000000 		.4byte	.LVL36
 4868 0212 0200     		.2byte	0x2
 4869 0214 31       		.byte	0x31
 4870 0215 9F       		.byte	0x9f
 4871 0216 46000000 		.4byte	.LVL36
 4872 021a FC000000 		.4byte	.LVL52
 4873 021e 0100     		.2byte	0x1
 4874 0220 58       		.byte	0x58
 4875 0221 00000000 		.4byte	0
 4876 0225 00000000 		.4byte	0
 4877              	.LLST14:
 4878 0229 46000000 		.4byte	.LVL36
 4879 022d 4A000000 		.4byte	.LVL37
 4880 0231 0200     		.2byte	0x2
 4881 0233 30       		.byte	0x30
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 148


 4882 0234 9F       		.byte	0x9f
 4883 0235 4A000000 		.4byte	.LVL37
 4884 0239 FC000000 		.4byte	.LVL50
 4885 023d 0100     		.2byte	0x1
 4886 023f 55       		.byte	0x55
 4887 0240 00000000 		.4byte	0
 4888 0244 00000000 		.4byte	0
 4889              	.LLST15:
 4890 0248 4E000000 		.4byte	.LVL38
 4891 024c 75000000 		.4byte	.LVL39-1
 4892 0250 0100     		.2byte	0x1
 4893 0252 50       		.byte	0x50
 4894 0253 8C000000 		.4byte	.LVL40
 4895 0257 B3000000 		.4byte	.LVL41-1
 4896 025b 0100     		.2byte	0x1
 4897 025d 50       		.byte	0x50
 4898 025e BA000000 		.4byte	.LVL42
 4899 0262 CF000000 		.4byte	.LVL43-1
 4900 0266 0100     		.2byte	0x1
 4901 0268 50       		.byte	0x50
 4902 0269 DE000000 		.4byte	.LVL45
 4903 026d F3000000 		.4byte	.LVL46-1
 4904 0271 0100     		.2byte	0x1
 4905 0273 50       		.byte	0x50
 4906 0274 00000000 		.4byte	0
 4907 0278 00000000 		.4byte	0
 4908              	.LLST16:
 4909 027c 2C000000 		.4byte	.LVL30
 4910 0280 32000000 		.4byte	.LVL32
 4911 0284 0100     		.2byte	0x1
 4912 0286 54       		.byte	0x54
 4913 0287 42000000 		.4byte	.LVL35
 4914 028b FC000000 		.4byte	.LVL49
 4915 028f 0100     		.2byte	0x1
 4916 0291 54       		.byte	0x54
 4917 0292 00000000 		.4byte	0
 4918 0296 00000000 		.4byte	0
 4919              	.LLST17:
 4920 029a 1C000000 		.4byte	.LVL27
 4921 029e 20000000 		.4byte	.LVL29
 4922 02a2 0100     		.2byte	0x1
 4923 02a4 53       		.byte	0x53
 4924 02a5 20000000 		.4byte	.LVL29
 4925 02a9 32000000 		.4byte	.LVL32
 4926 02ad 0100     		.2byte	0x1
 4927 02af 51       		.byte	0x51
 4928 02b0 00000000 		.4byte	0
 4929 02b4 00000000 		.4byte	0
 4930              	.LLST18:
 4931 02b8 00000000 		.4byte	.LVL53
 4932 02bc 34000000 		.4byte	.LVL57
 4933 02c0 0100     		.2byte	0x1
 4934 02c2 50       		.byte	0x50
 4935 02c3 34000000 		.4byte	.LVL57
 4936 02c7 7E000000 		.4byte	.LVL75
 4937 02cb 0100     		.2byte	0x1
 4938 02cd 58       		.byte	0x58
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 149


 4939 02ce 7E000000 		.4byte	.LVL75
 4940 02d2 8C000000 		.4byte	.LFE11
 4941 02d6 0400     		.2byte	0x4
 4942 02d8 F3       		.byte	0xf3
 4943 02d9 01       		.uleb128 0x1
 4944 02da 50       		.byte	0x50
 4945 02db 9F       		.byte	0x9f
 4946 02dc 00000000 		.4byte	0
 4947 02e0 00000000 		.4byte	0
 4948              	.LLST19:
 4949 02e4 38000000 		.4byte	.LVL58
 4950 02e8 6F000000 		.4byte	.LVL69-1
 4951 02ec 0100     		.2byte	0x1
 4952 02ee 50       		.byte	0x50
 4953 02ef 00000000 		.4byte	0
 4954 02f3 00000000 		.4byte	0
 4955              	.LLST20:
 4956 02f7 2E000000 		.4byte	.LVL56
 4957 02fb 34000000 		.4byte	.LVL57
 4958 02ff 0200     		.2byte	0x2
 4959 0301 30       		.byte	0x30
 4960 0302 9F       		.byte	0x9f
 4961 0303 34000000 		.4byte	.LVL57
 4962 0307 7E000000 		.4byte	.LVL74
 4963 030b 0100     		.2byte	0x1
 4964 030d 55       		.byte	0x55
 4965 030e 00000000 		.4byte	0
 4966 0312 00000000 		.4byte	0
 4967              	.LLST21:
 4968 0316 1E000000 		.4byte	.LVL54
 4969 031a 28000000 		.4byte	.LVL55
 4970 031e 0200     		.2byte	0x2
 4971 0320 30       		.byte	0x30
 4972 0321 9F       		.byte	0x9f
 4973 0322 2E000000 		.4byte	.LVL56
 4974 0326 7E000000 		.4byte	.LVL76
 4975 032a 0100     		.2byte	0x1
 4976 032c 59       		.byte	0x59
 4977 032d 00000000 		.4byte	0
 4978 0331 00000000 		.4byte	0
 4979              	.LLST22:
 4980 0335 1E000000 		.4byte	.LVL54
 4981 0339 28000000 		.4byte	.LVL55
 4982 033d 0200     		.2byte	0x2
 4983 033f 35       		.byte	0x35
 4984 0340 9F       		.byte	0x9f
 4985 0341 2E000000 		.4byte	.LVL56
 4986 0345 7E000000 		.4byte	.LVL77
 4987 0349 0100     		.2byte	0x1
 4988 034b 5A       		.byte	0x5a
 4989 034c 00000000 		.4byte	0
 4990 0350 00000000 		.4byte	0
 4991              	.LLST23:
 4992 0354 46000000 		.4byte	.LVL61
 4993 0358 58000000 		.4byte	.LVL64
 4994 035c 0100     		.2byte	0x1
 4995 035e 52       		.byte	0x52
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 150


 4996 035f 58000000 		.4byte	.LVL64
 4997 0363 62000000 		.4byte	.LVL66
 4998 0367 0200     		.2byte	0x2
 4999 0369 76       		.byte	0x76
 5000 036a 00       		.sleb128 0
 5001 036b 66000000 		.4byte	.LVL67
 5002 036f 6F000000 		.4byte	.LVL69-1
 5003 0373 0100     		.2byte	0x1
 5004 0375 53       		.byte	0x53
 5005 0376 00000000 		.4byte	0
 5006 037a 00000000 		.4byte	0
 5007              	.LLST24:
 5008 037e 3C000000 		.4byte	.LVL59
 5009 0382 66000000 		.4byte	.LVL67
 5010 0386 0100     		.2byte	0x1
 5011 0388 53       		.byte	0x53
 5012 0389 00000000 		.4byte	0
 5013 038d 00000000 		.4byte	0
 5014              	.LLST25:
 5015 0391 34000000 		.4byte	.LVL57
 5016 0395 7E000000 		.4byte	.LVL73
 5017 0399 0100     		.2byte	0x1
 5018 039b 54       		.byte	0x54
 5019 039c 00000000 		.4byte	0
 5020 03a0 00000000 		.4byte	0
 5021              	.LLST26:
 5022 03a4 16000000 		.4byte	.LVL79
 5023 03a8 29000000 		.4byte	.LVL80-1
 5024 03ac 0100     		.2byte	0x1
 5025 03ae 50       		.byte	0x50
 5026 03af 29000000 		.4byte	.LVL80-1
 5027 03b3 2C000000 		.4byte	.LVL81
 5028 03b7 0100     		.2byte	0x1
 5029 03b9 54       		.byte	0x54
 5030 03ba 2C000000 		.4byte	.LVL81
 5031 03be 54000000 		.4byte	.LVL82
 5032 03c2 0100     		.2byte	0x1
 5033 03c4 50       		.byte	0x50
 5034 03c5 54000000 		.4byte	.LVL82
 5035 03c9 58000000 		.4byte	.LVL83
 5036 03cd 0200     		.2byte	0x2
 5037 03cf 30       		.byte	0x30
 5038 03d0 9F       		.byte	0x9f
 5039 03d1 58000000 		.4byte	.LVL83
 5040 03d5 6A000000 		.4byte	.LVL84
 5041 03d9 0100     		.2byte	0x1
 5042 03db 50       		.byte	0x50
 5043 03dc 6A000000 		.4byte	.LVL84
 5044 03e0 6E000000 		.4byte	.LVL85
 5045 03e4 0100     		.2byte	0x1
 5046 03e6 54       		.byte	0x54
 5047 03e7 00000000 		.4byte	0
 5048 03eb 00000000 		.4byte	0
 5049              	.LLST27:
 5050 03ef 00000000 		.4byte	.LVL86
 5051 03f3 05000000 		.4byte	.LVL87-1
 5052 03f7 0100     		.2byte	0x1
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 151


 5053 03f9 50       		.byte	0x50
 5054 03fa 05000000 		.4byte	.LVL87-1
 5055 03fe 08000000 		.4byte	.LFE13
 5056 0402 0400     		.2byte	0x4
 5057 0404 F3       		.byte	0xf3
 5058 0405 01       		.uleb128 0x1
 5059 0406 50       		.byte	0x50
 5060 0407 9F       		.byte	0x9f
 5061 0408 00000000 		.4byte	0
 5062 040c 00000000 		.4byte	0
 5063              	.LLST28:
 5064 0410 00000000 		.4byte	.LVL88
 5065 0414 08000000 		.4byte	.LVL89
 5066 0418 0100     		.2byte	0x1
 5067 041a 50       		.byte	0x50
 5068 041b 08000000 		.4byte	.LVL89
 5069 041f 0A000000 		.4byte	.LVL90
 5070 0423 0300     		.2byte	0x3
 5071 0425 70       		.byte	0x70
 5072 0426 01       		.sleb128 1
 5073 0427 9F       		.byte	0x9f
 5074 0428 0A000000 		.4byte	.LVL90
 5075 042c 30000000 		.4byte	.LFE14
 5076 0430 0400     		.2byte	0x4
 5077 0432 F3       		.byte	0xf3
 5078 0433 01       		.uleb128 0x1
 5079 0434 50       		.byte	0x50
 5080 0435 9F       		.byte	0x9f
 5081 0436 00000000 		.4byte	0
 5082 043a 00000000 		.4byte	0
 5083              	.LLST29:
 5084 043e 00000000 		.4byte	.LVL91
 5085 0442 0A000000 		.4byte	.LVL95
 5086 0446 0100     		.2byte	0x1
 5087 0448 50       		.byte	0x50
 5088 0449 0A000000 		.4byte	.LVL95
 5089 044d 0C000000 		.4byte	.LVL96
 5090 0451 0300     		.2byte	0x3
 5091 0453 70       		.byte	0x70
 5092 0454 01       		.sleb128 1
 5093 0455 9F       		.byte	0x9f
 5094 0456 0C000000 		.4byte	.LVL96
 5095 045a 14000000 		.4byte	.LFE15
 5096 045e 0400     		.2byte	0x4
 5097 0460 F3       		.byte	0xf3
 5098 0461 01       		.uleb128 0x1
 5099 0462 50       		.byte	0x50
 5100 0463 9F       		.byte	0x9f
 5101 0464 00000000 		.4byte	0
 5102 0468 00000000 		.4byte	0
 5103              	.LLST30:
 5104 046c 04000000 		.4byte	.LVL92
 5105 0470 06000000 		.4byte	.LVL93
 5106 0474 0100     		.2byte	0x1
 5107 0476 53       		.byte	0x53
 5108 0477 08000000 		.4byte	.LVL94
 5109 047b 0C000000 		.4byte	.LVL96
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 152


 5110 047f 0100     		.2byte	0x1
 5111 0481 53       		.byte	0x53
 5112 0482 0C000000 		.4byte	.LVL96
 5113 0486 14000000 		.4byte	.LFE15
 5114 048a 0100     		.2byte	0x1
 5115 048c 50       		.byte	0x50
 5116 048d 00000000 		.4byte	0
 5117 0491 00000000 		.4byte	0
 5118              	.LLST31:
 5119 0495 00000000 		.4byte	.LVL97
 5120 0499 06000000 		.4byte	.LVL98
 5121 049d 0100     		.2byte	0x1
 5122 049f 50       		.byte	0x50
 5123 04a0 06000000 		.4byte	.LVL98
 5124 04a4 10000000 		.4byte	.LVL101
 5125 04a8 0100     		.2byte	0x1
 5126 04aa 54       		.byte	0x54
 5127 04ab 10000000 		.4byte	.LVL101
 5128 04af 12000000 		.4byte	.LFE16
 5129 04b3 0400     		.2byte	0x4
 5130 04b5 F3       		.byte	0xf3
 5131 04b6 01       		.uleb128 0x1
 5132 04b7 50       		.byte	0x50
 5133 04b8 9F       		.byte	0x9f
 5134 04b9 00000000 		.4byte	0
 5135 04bd 00000000 		.4byte	0
 5136              	.LLST32:
 5137 04c1 00000000 		.4byte	.LVL97
 5138 04c5 09000000 		.4byte	.LVL99-1
 5139 04c9 0100     		.2byte	0x1
 5140 04cb 51       		.byte	0x51
 5141 04cc 09000000 		.4byte	.LVL99-1
 5142 04d0 12000000 		.4byte	.LFE16
 5143 04d4 0400     		.2byte	0x4
 5144 04d6 F3       		.byte	0xf3
 5145 04d7 01       		.uleb128 0x1
 5146 04d8 51       		.byte	0x51
 5147 04d9 9F       		.byte	0x9f
 5148 04da 00000000 		.4byte	0
 5149 04de 00000000 		.4byte	0
 5150              	.LLST33:
 5151 04e2 00000000 		.4byte	.LVL102
 5152 04e6 0A000000 		.4byte	.LVL104
 5153 04ea 0100     		.2byte	0x1
 5154 04ec 50       		.byte	0x50
 5155 04ed 0A000000 		.4byte	.LVL104
 5156 04f1 0C000000 		.4byte	.LVL105
 5157 04f5 0100     		.2byte	0x1
 5158 04f7 53       		.byte	0x53
 5159 04f8 0C000000 		.4byte	.LVL105
 5160 04fc 0E000000 		.4byte	.LVL106
 5161 0500 0100     		.2byte	0x1
 5162 0502 50       		.byte	0x50
 5163 0503 0E000000 		.4byte	.LVL106
 5164 0507 19000000 		.4byte	.LVL108-1
 5165 050b 0100     		.2byte	0x1
 5166 050d 53       		.byte	0x53
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 153


 5167 050e 19000000 		.4byte	.LVL108-1
 5168 0512 1C000000 		.4byte	.LFE17
 5169 0516 0400     		.2byte	0x4
 5170 0518 F3       		.byte	0xf3
 5171 0519 01       		.uleb128 0x1
 5172 051a 50       		.byte	0x50
 5173 051b 9F       		.byte	0x9f
 5174 051c 00000000 		.4byte	0
 5175 0520 00000000 		.4byte	0
 5176              	.LLST34:
 5177 0524 04000000 		.4byte	.LVL103
 5178 0528 0E000000 		.4byte	.LVL106
 5179 052c 0200     		.2byte	0x2
 5180 052e 30       		.byte	0x30
 5181 052f 9F       		.byte	0x9f
 5182 0530 0E000000 		.4byte	.LVL106
 5183 0534 16000000 		.4byte	.LVL107
 5184 0538 0100     		.2byte	0x1
 5185 053a 50       		.byte	0x50
 5186 053b 1A000000 		.4byte	.LVL108
 5187 053f 1C000000 		.4byte	.LFE17
 5188 0543 0100     		.2byte	0x1
 5189 0545 50       		.byte	0x50
 5190 0546 00000000 		.4byte	0
 5191 054a 00000000 		.4byte	0
 5192              	.LLST35:
 5193 054e 02000000 		.4byte	.LVL109
 5194 0552 08000000 		.4byte	.LVL110
 5195 0556 0200     		.2byte	0x2
 5196 0558 30       		.byte	0x30
 5197 0559 9F       		.byte	0x9f
 5198 055a 08000000 		.4byte	.LVL110
 5199 055e 18000000 		.4byte	.LVL115
 5200 0562 0100     		.2byte	0x1
 5201 0564 55       		.byte	0x55
 5202 0565 18000000 		.4byte	.LVL115
 5203 0569 1A000000 		.4byte	.LFE18
 5204 056d 0100     		.2byte	0x1
 5205 056f 50       		.byte	0x50
 5206 0570 00000000 		.4byte	0
 5207 0574 00000000 		.4byte	0
 5208              	.LLST36:
 5209 0578 02000000 		.4byte	.LVL109
 5210 057c 08000000 		.4byte	.LVL110
 5211 0580 0200     		.2byte	0x2
 5212 0582 30       		.byte	0x30
 5213 0583 9F       		.byte	0x9f
 5214 0584 08000000 		.4byte	.LVL110
 5215 0588 18000000 		.4byte	.LVL114
 5216 058c 0100     		.2byte	0x1
 5217 058e 54       		.byte	0x54
 5218 058f 00000000 		.4byte	0
 5219 0593 00000000 		.4byte	0
 5220              	.LLST37:
 5221 0597 02000000 		.4byte	.LVL116
 5222 059b 06000000 		.4byte	.LVL117
 5223 059f 0200     		.2byte	0x2
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 154


 5224 05a1 30       		.byte	0x30
 5225 05a2 9F       		.byte	0x9f
 5226 05a3 06000000 		.4byte	.LVL117
 5227 05a7 1C000000 		.4byte	.LVL121
 5228 05ab 0100     		.2byte	0x1
 5229 05ad 54       		.byte	0x54
 5230 05ae 00000000 		.4byte	0
 5231 05b2 00000000 		.4byte	0
 5232              	.LLST38:
 5233 05b6 10000000 		.4byte	.LVL118
 5234 05ba 15000000 		.4byte	.LVL119-1
 5235 05be 0100     		.2byte	0x1
 5236 05c0 51       		.byte	0x51
 5237 05c1 00000000 		.4byte	0
 5238 05c5 00000000 		.4byte	0
 5239              	.LLST39:
 5240 05c9 00000000 		.4byte	.LVL122
 5241 05cd 04000000 		.4byte	.LVL123
 5242 05d1 0100     		.2byte	0x1
 5243 05d3 50       		.byte	0x50
 5244 05d4 04000000 		.4byte	.LVL123
 5245 05d8 14000000 		.4byte	.LFE21
 5246 05dc 0400     		.2byte	0x4
 5247 05de F3       		.byte	0xf3
 5248 05df 01       		.uleb128 0x1
 5249 05e0 50       		.byte	0x50
 5250 05e1 9F       		.byte	0x9f
 5251 05e2 00000000 		.4byte	0
 5252 05e6 00000000 		.4byte	0
 5253              	.LLST40:
 5254 05ea 00000000 		.4byte	.LVL126
 5255 05ee 04000000 		.4byte	.LVL127
 5256 05f2 0100     		.2byte	0x1
 5257 05f4 50       		.byte	0x50
 5258 05f5 04000000 		.4byte	.LVL127
 5259 05f9 14000000 		.4byte	.LFE22
 5260 05fd 0400     		.2byte	0x4
 5261 05ff F3       		.byte	0xf3
 5262 0600 01       		.uleb128 0x1
 5263 0601 50       		.byte	0x50
 5264 0602 9F       		.byte	0x9f
 5265 0603 00000000 		.4byte	0
 5266 0607 00000000 		.4byte	0
 5267              	.LLST41:
 5268 060b 00000000 		.4byte	.LVL130
 5269 060f 35000000 		.4byte	.LVL136-1
 5270 0613 0100     		.2byte	0x1
 5271 0615 50       		.byte	0x50
 5272 0616 35000000 		.4byte	.LVL136-1
 5273 061a 3C000000 		.4byte	.LVL139
 5274 061e 0200     		.2byte	0x2
 5275 0620 91       		.byte	0x91
 5276 0621 54       		.sleb128 -44
 5277 0622 3C000000 		.4byte	.LVL139
 5278 0626 C0000000 		.4byte	.LFE23
 5279 062a 0400     		.2byte	0x4
 5280 062c F3       		.byte	0xf3
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 155


 5281 062d 01       		.uleb128 0x1
 5282 062e 50       		.byte	0x50
 5283 062f 9F       		.byte	0x9f
 5284 0630 00000000 		.4byte	0
 5285 0634 00000000 		.4byte	0
 5286              	.LLST42:
 5287 0638 1A000000 		.4byte	.LVL131
 5288 063c 1E000000 		.4byte	.LVL132
 5289 0640 0100     		.2byte	0x1
 5290 0642 53       		.byte	0x53
 5291 0643 1E000000 		.4byte	.LVL132
 5292 0647 3C000000 		.4byte	.LVL139
 5293 064b 0200     		.2byte	0x2
 5294 064d 7D       		.byte	0x7d
 5295 064e 00       		.sleb128 0
 5296 064f 00000000 		.4byte	0
 5297 0653 00000000 		.4byte	0
 5298              	.LLST43:
 5299 0657 26000000 		.4byte	.LVL133
 5300 065b 2C000000 		.4byte	.LVL134
 5301 065f 0100     		.2byte	0x1
 5302 0661 51       		.byte	0x51
 5303 0662 2C000000 		.4byte	.LVL134
 5304 0666 A8000000 		.4byte	.LVL166
 5305 066a 0100     		.2byte	0x1
 5306 066c 58       		.byte	0x58
 5307 066d 00000000 		.4byte	0
 5308 0671 00000000 		.4byte	0
 5309              	.LLST44:
 5310 0675 32000000 		.4byte	.LVL135
 5311 0679 35000000 		.4byte	.LVL136-1
 5312 067d 0100     		.2byte	0x1
 5313 067f 51       		.byte	0x51
 5314 0680 35000000 		.4byte	.LVL136-1
 5315 0684 A8000000 		.4byte	.LVL167
 5316 0688 0100     		.2byte	0x1
 5317 068a 5A       		.byte	0x5a
 5318 068b 00000000 		.4byte	0
 5319 068f 00000000 		.4byte	0
 5320              	.LLST45:
 5321 0693 38000000 		.4byte	.LVL137
 5322 0697 3F000000 		.4byte	.LVL140-1
 5323 069b 0100     		.2byte	0x1
 5324 069d 53       		.byte	0x53
 5325 069e 46000000 		.4byte	.LVL142
 5326 06a2 4F000000 		.4byte	.LVL144-1
 5327 06a6 0100     		.2byte	0x1
 5328 06a8 53       		.byte	0x53
 5329 06a9 56000000 		.4byte	.LVL146
 5330 06ad 63000000 		.4byte	.LVL149-1
 5331 06b1 0100     		.2byte	0x1
 5332 06b3 53       		.byte	0x53
 5333 06b4 72000000 		.4byte	.LVL152
 5334 06b8 7F000000 		.4byte	.LVL155-1
 5335 06bc 0100     		.2byte	0x1
 5336 06be 53       		.byte	0x53
 5337 06bf 86000000 		.4byte	.LVL157
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 156


 5338 06c3 93000000 		.4byte	.LVL160-1
 5339 06c7 0100     		.2byte	0x1
 5340 06c9 53       		.byte	0x53
 5341 06ca 9A000000 		.4byte	.LVL162
 5342 06ce A5000000 		.4byte	.LVL165-1
 5343 06d2 0100     		.2byte	0x1
 5344 06d4 53       		.byte	0x53
 5345 06d5 00000000 		.4byte	0
 5346 06d9 00000000 		.4byte	0
 5347              	.LLST46:
 5348 06dd 36000000 		.4byte	.LVL136
 5349 06e1 3F000000 		.4byte	.LVL140-1
 5350 06e5 0100     		.2byte	0x1
 5351 06e7 50       		.byte	0x50
 5352 06e8 44000000 		.4byte	.LVL141
 5353 06ec 4F000000 		.4byte	.LVL144-1
 5354 06f0 0100     		.2byte	0x1
 5355 06f2 50       		.byte	0x50
 5356 06f3 54000000 		.4byte	.LVL145
 5357 06f7 63000000 		.4byte	.LVL149-1
 5358 06fb 0100     		.2byte	0x1
 5359 06fd 50       		.byte	0x50
 5360 06fe 70000000 		.4byte	.LVL151
 5361 0702 7F000000 		.4byte	.LVL155-1
 5362 0706 0100     		.2byte	0x1
 5363 0708 50       		.byte	0x50
 5364 0709 84000000 		.4byte	.LVL156
 5365 070d 93000000 		.4byte	.LVL160-1
 5366 0711 0100     		.2byte	0x1
 5367 0713 50       		.byte	0x50
 5368 0714 98000000 		.4byte	.LVL161
 5369 0718 A5000000 		.4byte	.LVL165-1
 5370 071c 0100     		.2byte	0x1
 5371 071e 50       		.byte	0x50
 5372 071f 00000000 		.4byte	0
 5373 0723 00000000 		.4byte	0
 5374              	.LLST47:
 5375 0727 00000000 		.4byte	.LVL168
 5376 072b 12000000 		.4byte	.LVL170
 5377 072f 0100     		.2byte	0x1
 5378 0731 50       		.byte	0x50
 5379 0732 12000000 		.4byte	.LVL170
 5380 0736 20000000 		.4byte	.LFE24
 5381 073a 0400     		.2byte	0x4
 5382 073c F3       		.byte	0xf3
 5383 073d 01       		.uleb128 0x1
 5384 073e 50       		.byte	0x50
 5385 073f 9F       		.byte	0x9f
 5386 0740 00000000 		.4byte	0
 5387 0744 00000000 		.4byte	0
 5388              	.LLST48:
 5389 0748 00000000 		.4byte	.LVL168
 5390 074c 15000000 		.4byte	.LVL171-1
 5391 0750 0100     		.2byte	0x1
 5392 0752 51       		.byte	0x51
 5393 0753 15000000 		.4byte	.LVL171-1
 5394 0757 20000000 		.4byte	.LFE24
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 157


 5395 075b 0400     		.2byte	0x4
 5396 075d F3       		.byte	0xf3
 5397 075e 01       		.uleb128 0x1
 5398 075f 51       		.byte	0x51
 5399 0760 9F       		.byte	0x9f
 5400 0761 00000000 		.4byte	0
 5401 0765 00000000 		.4byte	0
 5402              	.LLST49:
 5403 0769 02000000 		.4byte	.LVL169
 5404 076d 16000000 		.4byte	.LVL171
 5405 0771 0200     		.2byte	0x2
 5406 0773 30       		.byte	0x30
 5407 0774 9F       		.byte	0x9f
 5408 0775 16000000 		.4byte	.LVL171
 5409 0779 18000000 		.4byte	.LVL172
 5410 077d 0200     		.2byte	0x2
 5411 077f 31       		.byte	0x31
 5412 0780 9F       		.byte	0x9f
 5413 0781 18000000 		.4byte	.LVL172
 5414 0785 20000000 		.4byte	.LFE24
 5415 0789 0100     		.2byte	0x1
 5416 078b 50       		.byte	0x50
 5417 078c 00000000 		.4byte	0
 5418 0790 00000000 		.4byte	0
 5419              	.LLST50:
 5420 0794 00000000 		.4byte	.LVL173
 5421 0798 0B000000 		.4byte	.LVL174-1
 5422 079c 0100     		.2byte	0x1
 5423 079e 50       		.byte	0x50
 5424 079f 0B000000 		.4byte	.LVL174-1
 5425 07a3 1A000000 		.4byte	.LVL177
 5426 07a7 0100     		.2byte	0x1
 5427 07a9 55       		.byte	0x55
 5428 07aa 1A000000 		.4byte	.LVL177
 5429 07ae 1C000000 		.4byte	.LFE25
 5430 07b2 0400     		.2byte	0x4
 5431 07b4 F3       		.byte	0xf3
 5432 07b5 01       		.uleb128 0x1
 5433 07b6 50       		.byte	0x50
 5434 07b7 9F       		.byte	0x9f
 5435 07b8 00000000 		.4byte	0
 5436 07bc 00000000 		.4byte	0
 5437              	.LLST51:
 5438 07c0 00000000 		.4byte	.LVL173
 5439 07c4 0B000000 		.4byte	.LVL174-1
 5440 07c8 0100     		.2byte	0x1
 5441 07ca 51       		.byte	0x51
 5442 07cb 0B000000 		.4byte	.LVL174-1
 5443 07cf 1A000000 		.4byte	.LVL178
 5444 07d3 0100     		.2byte	0x1
 5445 07d5 56       		.byte	0x56
 5446 07d6 1A000000 		.4byte	.LVL178
 5447 07da 1C000000 		.4byte	.LFE25
 5448 07de 0400     		.2byte	0x4
 5449 07e0 F3       		.byte	0xf3
 5450 07e1 01       		.uleb128 0x1
 5451 07e2 51       		.byte	0x51
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 158


 5452 07e3 9F       		.byte	0x9f
 5453 07e4 00000000 		.4byte	0
 5454 07e8 00000000 		.4byte	0
 5455              	.LLST52:
 5456 07ec 00000000 		.4byte	.LVL173
 5457 07f0 0B000000 		.4byte	.LVL174-1
 5458 07f4 0100     		.2byte	0x1
 5459 07f6 52       		.byte	0x52
 5460 07f7 0B000000 		.4byte	.LVL174-1
 5461 07fb 10000000 		.4byte	.LVL175
 5462 07ff 0100     		.2byte	0x1
 5463 0801 54       		.byte	0x54
 5464 0802 10000000 		.4byte	.LVL175
 5465 0806 1C000000 		.4byte	.LFE25
 5466 080a 0400     		.2byte	0x4
 5467 080c F3       		.byte	0xf3
 5468 080d 01       		.uleb128 0x1
 5469 080e 52       		.byte	0x52
 5470 080f 9F       		.byte	0x9f
 5471 0810 00000000 		.4byte	0
 5472 0814 00000000 		.4byte	0
 5473              	.LLST53:
 5474 0818 0C000000 		.4byte	.LVL174
 5475 081c 19000000 		.4byte	.LVL176-1
 5476 0820 0100     		.2byte	0x1
 5477 0822 50       		.byte	0x50
 5478 0823 00000000 		.4byte	0
 5479 0827 00000000 		.4byte	0
 5480              	.LLST54:
 5481 082b 00000000 		.4byte	.LVL182
 5482 082f 13000000 		.4byte	.LVL183-1
 5483 0833 0100     		.2byte	0x1
 5484 0835 50       		.byte	0x50
 5485 0836 13000000 		.4byte	.LVL183-1
 5486 083a 3C000000 		.4byte	.LFE10
 5487 083e 0400     		.2byte	0x4
 5488 0840 F3       		.byte	0xf3
 5489 0841 01       		.uleb128 0x1
 5490 0842 50       		.byte	0x50
 5491 0843 9F       		.byte	0x9f
 5492 0844 00000000 		.4byte	0
 5493 0848 00000000 		.4byte	0
 5494              		.section	.debug_aranges,"",%progbits
 5495 0000 DC000000 		.4byte	0xdc
 5496 0004 0200     		.2byte	0x2
 5497 0006 00000000 		.4byte	.Ldebug_info0
 5498 000a 04       		.byte	0x4
 5499 000b 00       		.byte	0
 5500 000c 0000     		.2byte	0
 5501 000e 0000     		.2byte	0
 5502 0010 00000000 		.4byte	.LFB20
 5503 0014 20000000 		.4byte	.LFE20-.LFB20
 5504 0018 00000000 		.4byte	.LFB1
 5505 001c 10000000 		.4byte	.LFE1-.LFB1
 5506 0020 00000000 		.4byte	.LFB2
 5507 0024 40000000 		.4byte	.LFE2-.LFB2
 5508 0028 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 159


 5509 002c 2C000000 		.4byte	.LFE3-.LFB3
 5510 0030 00000000 		.4byte	.LFB4
 5511 0034 48000000 		.4byte	.LFE4-.LFB4
 5512 0038 00000000 		.4byte	.LFB5
 5513 003c 58000000 		.4byte	.LFE5-.LFB5
 5514 0040 00000000 		.4byte	.LFB6
 5515 0044 2C000000 		.4byte	.LFE6-.LFB6
 5516 0048 00000000 		.4byte	.LFB8
 5517 004c 0C010000 		.4byte	.LFE8-.LFB8
 5518 0050 00000000 		.4byte	.LFB11
 5519 0054 8C000000 		.4byte	.LFE11-.LFB11
 5520 0058 00000000 		.4byte	.LFB12
 5521 005c 78000000 		.4byte	.LFE12-.LFB12
 5522 0060 00000000 		.4byte	.LFB13
 5523 0064 08000000 		.4byte	.LFE13-.LFB13
 5524 0068 00000000 		.4byte	.LFB14
 5525 006c 30000000 		.4byte	.LFE14-.LFB14
 5526 0070 00000000 		.4byte	.LFB15
 5527 0074 14000000 		.4byte	.LFE15-.LFB15
 5528 0078 00000000 		.4byte	.LFB16
 5529 007c 12000000 		.4byte	.LFE16-.LFB16
 5530 0080 00000000 		.4byte	.LFB17
 5531 0084 1C000000 		.4byte	.LFE17-.LFB17
 5532 0088 00000000 		.4byte	.LFB18
 5533 008c 1A000000 		.4byte	.LFE18-.LFB18
 5534 0090 00000000 		.4byte	.LFB19
 5535 0094 24000000 		.4byte	.LFE19-.LFB19
 5536 0098 00000000 		.4byte	.LFB21
 5537 009c 14000000 		.4byte	.LFE21-.LFB21
 5538 00a0 00000000 		.4byte	.LFB22
 5539 00a4 14000000 		.4byte	.LFE22-.LFB22
 5540 00a8 00000000 		.4byte	.LFB23
 5541 00ac C0000000 		.4byte	.LFE23-.LFB23
 5542 00b0 00000000 		.4byte	.LFB24
 5543 00b4 20000000 		.4byte	.LFE24-.LFB24
 5544 00b8 00000000 		.4byte	.LFB25
 5545 00bc 1C000000 		.4byte	.LFE25-.LFB25
 5546 00c0 00000000 		.4byte	.LFB9
 5547 00c4 1C000000 		.4byte	.LFE9-.LFB9
 5548 00c8 00000000 		.4byte	.LFB10
 5549 00cc 3C000000 		.4byte	.LFE10-.LFB10
 5550 00d0 00000000 		.4byte	.LFB7
 5551 00d4 2C000000 		.4byte	.LFE7-.LFB7
 5552 00d8 00000000 		.4byte	0
 5553 00dc 00000000 		.4byte	0
 5554              		.section	.debug_ranges,"",%progbits
 5555              	.Ldebug_ranges0:
 5556 0000 00000000 		.4byte	.LFB20
 5557 0004 20000000 		.4byte	.LFE20
 5558 0008 00000000 		.4byte	.LFB1
 5559 000c 10000000 		.4byte	.LFE1
 5560 0010 00000000 		.4byte	.LFB2
 5561 0014 40000000 		.4byte	.LFE2
 5562 0018 00000000 		.4byte	.LFB3
 5563 001c 2C000000 		.4byte	.LFE3
 5564 0020 00000000 		.4byte	.LFB4
 5565 0024 48000000 		.4byte	.LFE4
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 160


 5566 0028 00000000 		.4byte	.LFB5
 5567 002c 58000000 		.4byte	.LFE5
 5568 0030 00000000 		.4byte	.LFB6
 5569 0034 2C000000 		.4byte	.LFE6
 5570 0038 00000000 		.4byte	.LFB8
 5571 003c 0C010000 		.4byte	.LFE8
 5572 0040 00000000 		.4byte	.LFB11
 5573 0044 8C000000 		.4byte	.LFE11
 5574 0048 00000000 		.4byte	.LFB12
 5575 004c 78000000 		.4byte	.LFE12
 5576 0050 00000000 		.4byte	.LFB13
 5577 0054 08000000 		.4byte	.LFE13
 5578 0058 00000000 		.4byte	.LFB14
 5579 005c 30000000 		.4byte	.LFE14
 5580 0060 00000000 		.4byte	.LFB15
 5581 0064 14000000 		.4byte	.LFE15
 5582 0068 00000000 		.4byte	.LFB16
 5583 006c 12000000 		.4byte	.LFE16
 5584 0070 00000000 		.4byte	.LFB17
 5585 0074 1C000000 		.4byte	.LFE17
 5586 0078 00000000 		.4byte	.LFB18
 5587 007c 1A000000 		.4byte	.LFE18
 5588 0080 00000000 		.4byte	.LFB19
 5589 0084 24000000 		.4byte	.LFE19
 5590 0088 00000000 		.4byte	.LFB21
 5591 008c 14000000 		.4byte	.LFE21
 5592 0090 00000000 		.4byte	.LFB22
 5593 0094 14000000 		.4byte	.LFE22
 5594 0098 00000000 		.4byte	.LFB23
 5595 009c C0000000 		.4byte	.LFE23
 5596 00a0 00000000 		.4byte	.LFB24
 5597 00a4 20000000 		.4byte	.LFE24
 5598 00a8 00000000 		.4byte	.LFB25
 5599 00ac 1C000000 		.4byte	.LFE25
 5600 00b0 00000000 		.4byte	.LFB9
 5601 00b4 1C000000 		.4byte	.LFE9
 5602 00b8 00000000 		.4byte	.LFB10
 5603 00bc 3C000000 		.4byte	.LFE10
 5604 00c0 00000000 		.4byte	.LFB7
 5605 00c4 2C000000 		.4byte	.LFE7
 5606 00c8 00000000 		.4byte	0
 5607 00cc 00000000 		.4byte	0
 5608              		.section	.debug_line,"",%progbits
 5609              	.Ldebug_line0:
 5610 0000 50050000 		.section	.debug_str,"MS",%progbits,1
 5610      0200CD01 
 5610      00000201 
 5610      FB0E0D00 
 5610      01010101 
 5611              	.LASF27:
 5612 0000 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 5612      656E7365 
 5612      5F57445F 
 5612      50524F58 
 5612      494D4954 
 5613              	.LASF175:
 5614 0018 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 161


 5614      656E7365 
 5614      5F537343 
 5614      53444765 
 5614      74436F6C 
 5615              	.LASF147:
 5616 003a 73656E73 		.ascii	"sensorElement\000"
 5616      6F72456C 
 5616      656D656E 
 5616      7400
 5617              	.LASF163:
 5618 0048 706F7374 		.ascii	"postScanStatus\000"
 5618      5363616E 
 5618      53746174 
 5618      757300
 5619              	.LASF60:
 5620 0057 72696768 		.ascii	"rightclick\000"
 5620      74636C69 
 5620      636B00
 5621              	.LASF142:
 5622 0062 7363616E 		.ascii	"scanStatus\000"
 5622      53746174 
 5622      757300
 5623              	.LASF189:
 5624 006d 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 5624      656E7365 
 5624      5F537343 
 5624      53444469 
 5624      7361626C 
 5625              	.LASF56:
 5626 0087 70726F78 		.ascii	"proxTouchTh\000"
 5626      546F7563 
 5626      68546800 
 5627              	.LASF144:
 5628 0093 43617053 		.ascii	"CapSense_SetupWidgetExt\000"
 5628      656E7365 
 5628      5F536574 
 5628      75705769 
 5628      64676574 
 5629              	.LASF82:
 5630 00ab 736E7254 		.ascii	"snrTestWidgetId\000"
 5630      65737457 
 5630      69646765 
 5630      74496400 
 5631              	.LASF30:
 5632 00bb 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 5632      656E7365 
 5632      5F554E44 
 5632      4546494E 
 5632      45445F45 
 5633              	.LASF8:
 5634 00d0 756E7369 		.ascii	"unsigned int\000"
 5634      676E6564 
 5634      20696E74 
 5634      00
 5635              	.LASF73:
 5636 00dd 7363616E 		.ascii	"scanCounter\000"
 5636      436F756E 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 162


 5636      74657200 
 5637              	.LASF71:
 5638 00e9 6877436C 		.ascii	"hwClock\000"
 5638      6F636B00 
 5639              	.LASF86:
 5640 00f1 7363616E 		.ascii	"scanCsdISC\000"
 5640      43736449 
 5640      534300
 5641              	.LASF192:
 5642 00fc 696E6974 		.ascii	"initStatus\000"
 5642      53746174 
 5642      757300
 5643              	.LASF213:
 5644 0107 43617053 		.ascii	"CapSense_SsCSDSetShieldElectrodesState\000"
 5644      656E7365 
 5644      5F537343 
 5644      53445365 
 5644      74536869 
 5645              	.LASF217:
 5646 012e 43794861 		.ascii	"CyHalt\000"
 5646      6C7400
 5647              	.LASF129:
 5648 0135 43617053 		.ascii	"CapSense_BIST_CSD_SH_CAP_E\000"
 5648      656E7365 
 5648      5F424953 
 5648      545F4353 
 5648      445F5348 
 5649              	.LASF151:
 5650 0150 696E7465 		.ascii	"interruptState\000"
 5650      72727570 
 5650      74537461 
 5650      746500
 5651              	.LASF137:
 5652 015f 6C667372 		.ascii	"lfsrScale\000"
 5652      5363616C 
 5652      6500
 5653              	.LASF181:
 5654 0169 64725265 		.ascii	"drReg\000"
 5654      6700
 5655              	.LASF153:
 5656 016f 63757246 		.ascii	"curFlashSnsPtr\000"
 5656      6C617368 
 5656      536E7350 
 5656      747200
 5657              	.LASF173:
 5658 017e 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 5658      656E7365 
 5658      5F43616C 
 5658      69627261 
 5658      7465416C 
 5659              	.LASF224:
 5660 019b 43617053 		.ascii	"CapSense_IsBusy\000"
 5660      656E7365 
 5660      5F497342 
 5660      75737900 
 5661              	.LASF103:
 5662 01ab 43617053 		.ascii	"CapSense_FLASH_SNS_LIST_STRUCT\000"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 163


 5662      656E7365 
 5662      5F464C41 
 5662      53485F53 
 5662      4E535F4C 
 5663              	.LASF180:
 5664 01ca 6873696F 		.ascii	"hsiomReg\000"
 5664      6D526567 
 5664      00
 5665              	.LASF166:
 5666 01d3 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 5666      656E7365 
 5666      5F537353 
 5666      65744D6F 
 5666      64436C6B 
 5667              	.LASF186:
 5668 01f4 72656750 		.ascii	"regPtr\000"
 5668      747200
 5669              	.LASF223:
 5670 01fb 453A5C48 		.ascii	"E:\\Hackster Projects\\Infenion Microcontroller\\In"
 5670      61636B73 
 5670      74657220 
 5670      50726F6A 
 5670      65637473 
 5671 022b 66696E65 		.ascii	"fineon-CY8CKIT-041-41XX_Example_Projects-Software-v"
 5671      6F6E2D43 
 5671      5938434B 
 5671      49542D30 
 5671      34312D34 
 5672 025e 30315F30 		.ascii	"01_00-EN\\PSoC 4100S\\CE216892 USB-HID Trackpad\\CE"
 5672      302D454E 
 5672      5C50536F 
 5672      43203431 
 5672      3030535C 
 5673 028e 32313638 		.ascii	"216892 USB-HID Trackpad.cydsn\000"
 5673      39322055 
 5673      53422D48 
 5673      49442054 
 5673      7261636B 
 5674              	.LASF26:
 5675 02ac 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 5675      656E7365 
 5675      5F57445F 
 5675      544F5543 
 5675      48504144 
 5676              	.LASF62:
 5677 02c3 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 5677      656E7365 
 5677      5F52414D 
 5677      5F57445F 
 5677      4C495354 
 5678              	.LASF203:
 5679 02df 43617053 		.ascii	"CapSense_curFlashSnsPtr\000"
 5679      656E7365 
 5679      5F637572 
 5679      466C6173 
 5679      68536E73 
 5680              	.LASF119:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 164


 5681 02f7 69697246 		.ascii	"iirFilterCoeff\000"
 5681      696C7465 
 5681      72436F65 
 5681      666600
 5682              	.LASF145:
 5683 0306 73656E73 		.ascii	"sensorId\000"
 5683      6F724964 
 5683      00
 5684              	.LASF135:
 5685 030f 70747257 		.ascii	"ptrWdgt\000"
 5685      64677400 
 5686              	.LASF10:
 5687 0317 75696E74 		.ascii	"uint32_t\000"
 5687      33325F74 
 5687      00
 5688              	.LASF188:
 5689 0320 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 5689      656E7365 
 5689      5F537353 
 5689      65745769 
 5689      64676574 
 5690              	.LASF45:
 5691 0340 69646163 		.ascii	"idacGainIndex\000"
 5691      4761696E 
 5691      496E6465 
 5691      7800
 5692              	.LASF156:
 5693 034e 6C6F6F70 		.ascii	"loopIndex\000"
 5693      496E6465 
 5693      7800
 5694              	.LASF14:
 5695 0358 666C6F61 		.ascii	"float\000"
 5695      7400
 5696              	.LASF97:
 5697 035e 73686966 		.ascii	"shift\000"
 5697      7400
 5698              	.LASF221:
 5699 0364 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5699      43313120 
 5699      352E342E 
 5699      31203230 
 5699      31363036 
 5700 0397 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5700      20726576 
 5700      6973696F 
 5700      6E203233 
 5700      37373135 
 5701 03ca 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5701      67202D66 
 5701      66756E63 
 5701      74696F6E 
 5701      2D736563 
 5702              	.LASF206:
 5703 03f6 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 5703      656E7365 
 5703      5F435344 
 5703      53657475 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 165


 5703      70576964 
 5704              	.LASF161:
 5705 040e 736E7349 		.ascii	"snsIoPtr\000"
 5705      6F507472 
 5705      00
 5706              	.LASF81:
 5707 0417 736E734C 		.ascii	"snsList\000"
 5707      69737400 
 5708              	.LASF7:
 5709 041f 6C6F6E67 		.ascii	"long long unsigned int\000"
 5709      206C6F6E 
 5709      6720756E 
 5709      7369676E 
 5709      65642069 
 5710              	.LASF197:
 5711 0436 43617053 		.ascii	"CapSense_sensorIndex\000"
 5711      656E7365 
 5711      5F73656E 
 5711      736F7249 
 5711      6E646578 
 5712              	.LASF25:
 5713 044b 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 5713      656E7365 
 5713      5F57445F 
 5713      4D415452 
 5713      49585F42 
 5714              	.LASF98:
 5715 0467 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 5715      656E7365 
 5715      5F464C41 
 5715      53485F49 
 5715      4F5F5354 
 5716              	.LASF83:
 5717 0480 736E7254 		.ascii	"snrTestSensorId\000"
 5717      65737453 
 5717      656E736F 
 5717      72496400 
 5718              	.LASF111:
 5719 0490 77646774 		.ascii	"wdgtType\000"
 5719      54797065 
 5719      00
 5720              	.LASF136:
 5721 0499 6C667372 		.ascii	"lfsrSize\000"
 5721      53697A65 
 5721      00
 5722              	.LASF208:
 5723 04a2 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 5723      656E7365 
 5723      5F435344 
 5723      53657475 
 5723      70576964 
 5724              	.LASF182:
 5725 04bd 70635265 		.ascii	"pcReg\000"
 5725      6700
 5726              	.LASF187:
 5727 04c3 76616C75 		.ascii	"value\000"
 5727      6500
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 166


 5728              	.LASF158:
 5729 04c9 6E657750 		.ascii	"newPinHsiomVal\000"
 5729      696E4873 
 5729      696F6D56 
 5729      616C00
 5730              	.LASF79:
 5731 04d8 6D6F6443 		.ascii	"modCsdClk\000"
 5731      7364436C 
 5731      6B00
 5732              	.LASF67:
 5733 04e2 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 5733      656E7365 
 5733      5F52414D 
 5733      5F534E53 
 5733      5F535452 
 5734              	.LASF91:
 5735 04fa 64725074 		.ascii	"drPtr\000"
 5735      7200
 5736              	.LASF133:
 5737 0500 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 5737      656E7365 
 5737      5F494441 
 5737      435F4741 
 5737      494E5F54 
 5738              	.LASF184:
 5739 0520 6D6F6465 		.ascii	"mode\000"
 5739      00
 5740              	.LASF167:
 5741 0525 6D6F6443 		.ascii	"modClk\000"
 5741      6C6B00
 5742              	.LASF157:
 5743 052c 6E657750 		.ascii	"newPinPcVal\000"
 5743      696E5063 
 5743      56616C00 
 5744              	.LASF40:
 5745 0538 68797374 		.ascii	"hysteresis\000"
 5745      65726573 
 5745      697300
 5746              	.LASF24:
 5747 0543 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 5747      656E7365 
 5747      5F57445F 
 5747      52414449 
 5747      414C5F53 
 5748              	.LASF179:
 5749 055f 64697363 		.ascii	"dischargeTime\000"
 5749      68617267 
 5749      6554696D 
 5749      6500
 5750              	.LASF120:
 5751 056d 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 5751      656E7365 
 5751      5F464C41 
 5751      53485F57 
 5751      445F5354 
 5752              	.LASF149:
 5753 0586 656C7464 		.ascii	"eltdNum\000"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 167


 5753      4E756D00 
 5754              	.LASF42:
 5755 058e 6C6F7742 		.ascii	"lowBslnRst\000"
 5755      736C6E52 
 5755      737400
 5756              	.LASF110:
 5757 0599 746F7461 		.ascii	"totalNumSns\000"
 5757      6C4E756D 
 5757      536E7300 
 5758              	.LASF38:
 5759 05a5 6E6F6973 		.ascii	"noiseTh\000"
 5759      65546800 
 5760              	.LASF219:
 5761 05ad 43617053 		.ascii	"CapSense_SsCSDDisableShieldElectrodes\000"
 5761      656E7365 
 5761      5F537343 
 5761      53444469 
 5761      7361626C 
 5762              	.LASF16:
 5763 05d3 63686172 		.ascii	"char\000"
 5763      00
 5764              	.LASF211:
 5765 05d8 43794578 		.ascii	"CyExitCriticalSection\000"
 5765      69744372 
 5765      69746963 
 5765      616C5365 
 5765      6374696F 
 5766              	.LASF49:
 5767 05ee 726F7753 		.ascii	"rowSnsClkSource\000"
 5767      6E73436C 
 5767      6B536F75 
 5767      72636500 
 5768              	.LASF178:
 5769 05fe 43617053 		.ascii	"CapSense_DischargeExtCapacitors\000"
 5769      656E7365 
 5769      5F446973 
 5769      63686172 
 5769      67654578 
 5770              	.LASF159:
 5771 061e 746D7050 		.ascii	"tmpPcDrRegValue\000"
 5771      63447252 
 5771      65675661 
 5771      6C756500 
 5772              	.LASF127:
 5773 062e 43617053 		.ascii	"CapSense_BIST_CSD_SNS_CAP_E\000"
 5773      656E7365 
 5773      5F424953 
 5773      545F4353 
 5773      445F534E 
 5774              	.LASF95:
 5775 064a 6873696F 		.ascii	"hsiomShift\000"
 5775      6D536869 
 5775      667400
 5776              	.LASF177:
 5777 0655 43617053 		.ascii	"CapSense_SsCSDGetRowSnsClkDivider\000"
 5777      656E7365 
 5777      5F537343 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 168


 5777      53444765 
 5777      74526F77 
 5778              	.LASF12:
 5779 0677 75696E74 		.ascii	"uint16\000"
 5779      313600
 5780              	.LASF47:
 5781 067e 726F7753 		.ascii	"rowSnsClk\000"
 5781      6E73436C 
 5781      6B00
 5782              	.LASF102:
 5783 0688 43617053 		.ascii	"CapSense_FLASH_SNS_STRUCT\000"
 5783      656E7365 
 5783      5F464C41 
 5783      53485F53 
 5783      4E535F53 
 5784              	.LASF36:
 5785 06a2 7265736F 		.ascii	"resolution\000"
 5785      6C757469 
 5785      6F6E00
 5786              	.LASF74:
 5787 06ad 73746174 		.ascii	"status\000"
 5787      757300
 5788              	.LASF171:
 5789 06b4 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 5789      656E7365 
 5789      5F43616C 
 5789      69627261 
 5789      74655769 
 5790              	.LASF126:
 5791 06cd 43617053 		.ascii	"CapSense_SCAN_CSX_E\000"
 5791      656E7365 
 5791      5F534341 
 5791      4E5F4353 
 5791      585F4500 
 5792              	.LASF21:
 5793 06e1 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 5793      656E7365 
 5793      5F4C4F57 
 5793      5F42534C 
 5793      4E5F5253 
 5794              	.LASF168:
 5795 06fc 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 5795      656E7365 
 5795      5F537353 
 5795      6574536E 
 5795      73436C6F 
 5796              	.LASF35:
 5797 071a 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 5797      656E7365 
 5797      5F53454E 
 5797      53455F4D 
 5797      4554484F 
 5798              	.LASF183:
 5799 0735 43617053 		.ascii	"CapSense_SetInactiveElectrodeState\000"
 5799      656E7365 
 5799      5F536574 
 5799      496E6163 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 169


 5799      74697665 
 5800              	.LASF90:
 5801 0758 70635074 		.ascii	"pcPtr\000"
 5801      7200
 5802              	.LASF6:
 5803 075e 6C6F6E67 		.ascii	"long long int\000"
 5803      206C6F6E 
 5803      6720696E 
 5803      7400
 5804              	.LASF112:
 5805 076c 6E756D43 		.ascii	"numCols\000"
 5805      6F6C7300 
 5806              	.LASF61:
 5807 0774 67616E67 		.ascii	"gangedsensor\000"
 5807      65647365 
 5807      6E736F72 
 5807      00
 5808              	.LASF41:
 5809 0781 6F6E4465 		.ascii	"onDebounce\000"
 5809      626F756E 
 5809      636500
 5810              	.LASF172:
 5811 078c 63616C69 		.ascii	"calibrateStatus\000"
 5811      62726174 
 5811      65537461 
 5811      74757300 
 5812              	.LASF80:
 5813 079c 77646774 		.ascii	"wdgtList\000"
 5813      4C697374 
 5813      00
 5814              	.LASF125:
 5815 07a5 43617053 		.ascii	"CapSense_SCAN_CSD_E\000"
 5815      656E7365 
 5815      5F534341 
 5815      4E5F4353 
 5815      445F4500 
 5816              	.LASF123:
 5817 07b9 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 5817      656E7365 
 5817      5F464C41 
 5817      53485F53 
 5817      54525543 
 5818              	.LASF141:
 5819 07cf 43617053 		.ascii	"CapSense_Scan\000"
 5819      656E7365 
 5819      5F536361 
 5819      6E00
 5820              	.LASF185:
 5821 07dd 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 5821      656E7365 
 5821      5F577269 
 5821      74654269 
 5821      74735361 
 5822              	.LASF160:
 5823 07f4 746D7048 		.ascii	"tmpHsiomRegValue\000"
 5823      73696F6D 
 5823      52656756 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 170


 5823      616C7565 
 5823      00
 5824              	.LASF193:
 5825 0805 43617053 		.ascii	"CapSense_dsRam\000"
 5825      656E7365 
 5825      5F647352 
 5825      616D00
 5826              	.LASF85:
 5827 0814 736E7254 		.ascii	"snrTestRawCount\000"
 5827      65737452 
 5827      6177436F 
 5827      756E7400 
 5828              	.LASF39:
 5829 0824 6E4E6F69 		.ascii	"nNoiseTh\000"
 5829      73655468 
 5829      00
 5830              	.LASF78:
 5831 082d 63736430 		.ascii	"csd0Config\000"
 5831      436F6E66 
 5831      696700
 5832              	.LASF19:
 5833 0838 63796973 		.ascii	"cyisraddress\000"
 5833      72616464 
 5833      72657373 
 5833      00
 5834              	.LASF220:
 5835 0845 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 5835      656E7365 
 5835      5F537343 
 5835      5344496E 
 5835      69746961 
 5836              	.LASF146:
 5837 085e 43617053 		.ascii	"CapSense_ScanExt\000"
 5837      656E7365 
 5837      5F536361 
 5837      6E457874 
 5837      00
 5838              	.LASF51:
 5839 086f 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 5839      656E7365 
 5839      5F52414D 
 5839      5F57445F 
 5839      42415345 
 5840              	.LASF29:
 5841 088b 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
 5841      656E7365 
 5841      5F57445F 
 5841      54595045 
 5841      5F454E55 
 5842              	.LASF89:
 5843 08a1 6873696F 		.ascii	"hsiomPtr\000"
 5843      6D507472 
 5843      00
 5844              	.LASF13:
 5845 08aa 75696E74 		.ascii	"uint32\000"
 5845      333200
 5846              	.LASF107:
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 171


 5847 08b1 70747232 		.ascii	"ptr2FltrHistory\000"
 5847      466C7472 
 5847      48697374 
 5847      6F727900 
 5848              	.LASF132:
 5849 08c1 6761696E 		.ascii	"gainValue\000"
 5849      56616C75 
 5849      6500
 5850              	.LASF204:
 5851 08cb 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 5851      656E7365 
 5851      5F637572 
 5851      536E7349 
 5851      4F507472 
 5852              	.LASF94:
 5853 08e0 6D61736B 		.ascii	"mask\000"
 5853      00
 5854              	.LASF23:
 5855 08e5 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 5855      656E7365 
 5855      5F57445F 
 5855      4C494E45 
 5855      41525F53 
 5856              	.LASF99:
 5857 0901 66697273 		.ascii	"firstPinId\000"
 5857      7450696E 
 5857      496400
 5858              	.LASF170:
 5859 090c 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 5859      656E7365 
 5859      5F537353 
 5859      6574436C 
 5859      6F636B44 
 5860              	.LASF130:
 5861 0928 43617053 		.ascii	"CapSense_OPERATION_MODE_ENUM\000"
 5861      656E7365 
 5861      5F4F5045 
 5861      52415449 
 5861      4F4E5F4D 
 5862              	.LASF216:
 5863 0945 43794465 		.ascii	"CyDelayUs\000"
 5863      6C617955 
 5863      7300
 5864              	.LASF134:
 5865 094f 77646774 		.ascii	"wdgtIndex\000"
 5865      496E6465 
 5865      7800
 5866              	.LASF34:
 5867 0959 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 5867      656E7365 
 5867      5F53454E 
 5867      53455F4D 
 5867      4554484F 
 5868              	.LASF124:
 5869 0975 6C6F6E67 		.ascii	"long double\000"
 5869      20646F75 
 5869      626C6500 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 172


 5870              	.LASF202:
 5871 0981 43617053 		.ascii	"CapSense_curFlashWdgtPtr\000"
 5871      656E7365 
 5871      5F637572 
 5871      466C6173 
 5871      68576467 
 5872              	.LASF18:
 5873 099a 72656733 		.ascii	"reg32\000"
 5873      3200
 5874              	.LASF84:
 5875 09a0 736E7254 		.ascii	"snrTestScanCounter\000"
 5875      65737453 
 5875      63616E43 
 5875      6F756E74 
 5875      657200
 5876              	.LASF69:
 5877 09b3 636F6E66 		.ascii	"configId\000"
 5877      69674964 
 5877      00
 5878              	.LASF106:
 5879 09bc 70747232 		.ascii	"ptr2SnsRam\000"
 5879      536E7352 
 5879      616D00
 5880              	.LASF77:
 5881 09c7 736E7353 		.ascii	"snsStatus\000"
 5881      74617475 
 5881      7300
 5882              	.LASF28:
 5883 09d1 43617053 		.ascii	"CapSense_WD_ENCODERDIAL_E\000"
 5883      656E7365 
 5883      5F57445F 
 5883      454E434F 
 5883      44455244 
 5884              	.LASF48:
 5885 09eb 736E7343 		.ascii	"snsClkSource\000"
 5885      6C6B536F 
 5885      75726365 
 5885      00
 5886              	.LASF117:
 5887 09f8 7943656E 		.ascii	"yCentroidMultiplier\000"
 5887      74726F69 
 5887      644D756C 
 5887      7469706C 
 5887      69657200 
 5888              	.LASF218:
 5889 0a0c 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 5889      656E7365 
 5889      5F537343 
 5889      5344456C 
 5889      65637472 
 5890              	.LASF114:
 5891 0a29 78526573 		.ascii	"xResolution\000"
 5891      6F6C7574 
 5891      696F6E00 
 5892              	.LASF164:
 5893 0a35 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 5893      656E7365 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 173


 5893      5F537349 
 5893      7372496E 
 5893      69746961 
 5894              	.LASF2:
 5895 0a4e 73686F72 		.ascii	"short int\000"
 5895      7420696E 
 5895      7400
 5896              	.LASF88:
 5897 0a58 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 5897      656E7365 
 5897      5F52414D 
 5897      5F535452 
 5897      55435400 
 5898              	.LASF155:
 5899 0a6c 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 5899      656E7365 
 5899      5F537353 
 5899      6574416C 
 5899      6C494F73 
 5900              	.LASF4:
 5901 0a86 6C6F6E67 		.ascii	"long int\000"
 5901      20696E74 
 5901      00
 5902              	.LASF75:
 5903 0a8f 77646774 		.ascii	"wdgtEnable\000"
 5903      456E6162 
 5903      6C6500
 5904              	.LASF65:
 5905 0a9a 64696666 		.ascii	"diff\000"
 5905      00
 5906              	.LASF54:
 5907 0a9f 43617053 		.ascii	"CapSense_RAM_WD_CSD_TOUCHPAD_STRUCT\000"
 5907      656E7365 
 5907      5F52414D 
 5907      5F57445F 
 5907      4353445F 
 5908              	.LASF72:
 5909 0ac3 74756E65 		.ascii	"tunerCmd\000"
 5909      72436D64 
 5909      00
 5910              	.LASF32:
 5911 0acc 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 5911      656E7365 
 5911      5F53454E 
 5911      53455F4D 
 5911      4554484F 
 5912              	.LASF92:
 5913 0ae8 70735074 		.ascii	"psPtr\000"
 5913      7200
 5914              	.LASF140:
 5915 0aee 43617053 		.ascii	"CapSense_SetupWidget\000"
 5915      656E7365 
 5915      5F536574 
 5915      75705769 
 5915      64676574 
 5916              	.LASF215:
 5917 0b03 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 174


 5917      656E7365 
 5917      5F435344 
 5917      43616C69 
 5917      62726174 
 5918              	.LASF22:
 5919 0b1f 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 5919      656E7365 
 5919      5F57445F 
 5919      42555454 
 5919      4F4E5F45 
 5920              	.LASF131:
 5921 0b34 6761696E 		.ascii	"gainReg\000"
 5921      52656700 
 5922              	.LASF100:
 5923 0b3c 6E756D50 		.ascii	"numPins\000"
 5923      696E7300 
 5924              	.LASF44:
 5925 0b44 726F7749 		.ascii	"rowIdacMod\000"
 5925      6461634D 
 5925      6F6400
 5926              	.LASF194:
 5927 0b4f 43617053 		.ascii	"CapSense_dsFlash\000"
 5927      656E7365 
 5927      5F647346 
 5927      6C617368 
 5927      00
 5928              	.LASF209:
 5929 0b60 43617053 		.ascii	"CapSense_CSDScanExt\000"
 5929      656E7365 
 5929      5F435344 
 5929      5363616E 
 5929      45787400 
 5930              	.LASF76:
 5931 0b74 77646774 		.ascii	"wdgtStatus\000"
 5931      53746174 
 5931      757300
 5932              	.LASF222:
 5933 0b7f 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 5933      72617465 
 5933      645F536F 
 5933      75726365 
 5933      5C50536F 
 5934              	.LASF212:
 5935 0ba9 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 5935      656E7365 
 5935      5F435344 
 5935      436F6E6E 
 5935      65637453 
 5936              	.LASF31:
 5937 0bc0 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 5937      656E7365 
 5937      5F53454E 
 5937      53455F4D 
 5937      4554484F 
 5938              	.LASF200:
 5939 0bdc 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 5939      656E7365 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 175


 5939      5F637572 
 5939      72656E74 
 5939      53656E73 
 5940              	.LASF50:
 5941 0bf8 73697A65 		.ascii	"sizetype\000"
 5941      74797065 
 5941      00
 5942              	.LASF96:
 5943 0c01 64725368 		.ascii	"drShift\000"
 5943      69667400 
 5944              	.LASF5:
 5945 0c09 6C6F6E67 		.ascii	"long unsigned int\000"
 5945      20756E73 
 5945      69676E65 
 5945      6420696E 
 5945      7400
 5946              	.LASF176:
 5947 0c1b 72657456 		.ascii	"retVal\000"
 5947      616C00
 5948              	.LASF165:
 5949 0c22 61646472 		.ascii	"address\000"
 5949      65737300 
 5950              	.LASF43:
 5951 0c2a 69646163 		.ascii	"idacMod\000"
 5951      4D6F6400 
 5952              	.LASF214:
 5953 0c32 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 5953      656E7365 
 5953      5F495352 
 5953      5F537461 
 5953      72744578 
 5954              	.LASF108:
 5955 0c47 70747232 		.ascii	"ptr2DebounceArr\000"
 5955      4465626F 
 5955      756E6365 
 5955      41727200 
 5956              	.LASF116:
 5957 0c57 7843656E 		.ascii	"xCentroidMultiplier\000"
 5957      74726F69 
 5957      644D756C 
 5957      7469706C 
 5957      69657200 
 5958              	.LASF37:
 5959 0c6b 66696E67 		.ascii	"fingerTh\000"
 5959      65725468 
 5959      00
 5960              	.LASF64:
 5961 0c74 62736C6E 		.ascii	"bslnExt\000"
 5961      45787400 
 5962              	.LASF118:
 5963 0c7c 70747232 		.ascii	"ptr2PosHistory\000"
 5963      506F7348 
 5963      6973746F 
 5963      727900
 5964              	.LASF55:
 5965 0c8b 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 5965      656E7365 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 176


 5965      5F52414D 
 5965      5F57445F 
 5965      42555454 
 5966              	.LASF17:
 5967 0ca9 63797374 		.ascii	"cystatus\000"
 5967      61747573 
 5967      00
 5968              	.LASF57:
 5969 0cb2 43617053 		.ascii	"CapSense_RAM_WD_PROXIMITY_STRUCT\000"
 5969      656E7365 
 5969      5F52414D 
 5969      5F57445F 
 5969      50524F58 
 5970              	.LASF101:
 5971 0cd3 74797065 		.ascii	"type\000"
 5971      00
 5972              	.LASF1:
 5973 0cd8 756E7369 		.ascii	"unsigned char\000"
 5973      676E6564 
 5973      20636861 
 5973      7200
 5974              	.LASF9:
 5975 0ce6 5F5F7569 		.ascii	"__uint32_t\000"
 5975      6E743332 
 5975      5F7400
 5976              	.LASF154:
 5977 0cf1 43617053 		.ascii	"CapSense_SetPinState\000"
 5977      656E7365 
 5977      5F536574 
 5977      50696E53 
 5977      74617465 
 5978              	.LASF109:
 5979 0d06 73746174 		.ascii	"staticConfig\000"
 5979      6963436F 
 5979      6E666967 
 5979      00
 5980              	.LASF52:
 5981 0d13 706F7358 		.ascii	"posX\000"
 5981      00
 5982              	.LASF53:
 5983 0d18 706F7359 		.ascii	"posY\000"
 5983      00
 5984              	.LASF122:
 5985 0d1d 656C7464 		.ascii	"eltdList\000"
 5985      4C697374 
 5985      00
 5986              	.LASF152:
 5987 0d26 696F5074 		.ascii	"ioPtr\000"
 5987      7200
 5988              	.LASF87:
 5989 0d2c 7363616E 		.ascii	"scanCurrentISC\000"
 5989      43757272 
 5989      656E7449 
 5989      534300
 5990              	.LASF105:
 5991 0d3b 70747232 		.ascii	"ptr2WdgtRam\000"
 5991      57646774 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 177


 5991      52616D00 
 5992              	.LASF20:
 5993 0d47 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 5993      656E7365 
 5993      5F544852 
 5993      4553484F 
 5993      4C445F54 
 5994              	.LASF207:
 5995 0d5f 43617053 		.ascii	"CapSense_CSDScan\000"
 5995      656E7365 
 5995      5F435344 
 5995      5363616E 
 5995      00
 5996              	.LASF33:
 5997 0d70 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 5997      656E7365 
 5997      5F53454E 
 5997      53455F4D 
 5997      4554484F 
 5998              	.LASF113:
 5999 0d8d 6E756D52 		.ascii	"numRows\000"
 5999      6F777300 
 6000              	.LASF148:
 6001 0d95 73746174 		.ascii	"state\000"
 6001      6500
 6002              	.LASF150:
 6003 0d9b 656C7464 		.ascii	"eltdIndex\000"
 6003      496E6465 
 6003      7800
 6004              	.LASF143:
 6005 0da5 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 6005      656E7365 
 6005      5F536361 
 6005      6E416C6C 
 6005      57696467 
 6006              	.LASF59:
 6007 0dbd 6C656674 		.ascii	"leftclick\000"
 6007      636C6963 
 6007      6B00
 6008              	.LASF93:
 6009 0dc7 6873696F 		.ascii	"hsiomMask\000"
 6009      6D4D6173 
 6009      6B00
 6010              	.LASF46:
 6011 0dd1 736E7343 		.ascii	"snsClk\000"
 6011      6C6B00
 6012              	.LASF190:
 6013 0dd8 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 6013      656E7365 
 6013      5F537353 
 6013      77697463 
 6013      6853656E 
 6014              	.LASF210:
 6015 0df5 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6015      74657243 
 6015      72697469 
 6015      63616C53 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 178


 6015      65637469 
 6016              	.LASF199:
 6017 0e0c 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 6017      656E7365 
 6017      5F637572 
 6017      52616D53 
 6017      6E735074 
 6018              	.LASF0:
 6019 0e22 7369676E 		.ascii	"signed char\000"
 6019      65642063 
 6019      68617200 
 6020              	.LASF201:
 6021 0e2e 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 6021      656E7365 
 6021      5F736361 
 6021      6E467265 
 6021      71496E64 
 6022              	.LASF63:
 6023 0e45 62736C6E 		.ascii	"bsln\000"
 6023      00
 6024              	.LASF3:
 6025 0e4a 73686F72 		.ascii	"short unsigned int\000"
 6025      7420756E 
 6025      7369676E 
 6025      65642069 
 6025      6E7400
 6026              	.LASF195:
 6027 0e5d 43617053 		.ascii	"CapSense_ioList\000"
 6027      656E7365 
 6027      5F696F4C 
 6027      69737400 
 6028              	.LASF162:
 6029 0e6d 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 6029      656E7365 
 6029      5F537350 
 6029      6F737441 
 6029      6C6C5769 
 6030              	.LASF104:
 6031 0e8b 70747232 		.ascii	"ptr2SnsFlash\000"
 6031      536E7346 
 6031      6C617368 
 6031      00
 6032              	.LASF169:
 6033 0e98 6E657752 		.ascii	"newRegValue\000"
 6033      65675661 
 6033      6C756500 
 6034              	.LASF11:
 6035 0ea4 75696E74 		.ascii	"uint8\000"
 6035      3800
 6036              	.LASF15:
 6037 0eaa 646F7562 		.ascii	"double\000"
 6037      6C6500
 6038              	.LASF66:
 6039 0eb1 6E656742 		.ascii	"negBslnRstCnt\000"
 6039      736C6E52 
 6039      7374436E 
 6039      7400
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 179


 6040              	.LASF191:
 6041 0ebf 43617053 		.ascii	"CapSense_SsInitialize\000"
 6041      656E7365 
 6041      5F537349 
 6041      6E697469 
 6041      616C697A 
 6042              	.LASF196:
 6043 0ed5 43617053 		.ascii	"CapSense_widgetIndex\000"
 6043      656E7365 
 6043      5F776964 
 6043      67657449 
 6043      6E646578 
 6044              	.LASF58:
 6045 0eea 74726163 		.ascii	"trackpad\000"
 6045      6B706164 
 6045      00
 6046              	.LASF70:
 6047 0ef3 64657669 		.ascii	"deviceId\000"
 6047      63654964 
 6047      00
 6048              	.LASF115:
 6049 0efc 79526573 		.ascii	"yResolution\000"
 6049      6F6C7574 
 6049      696F6E00 
 6050              	.LASF139:
 6051 0f08 77696467 		.ascii	"widgetStatus\000"
 6051      65745374 
 6051      61747573 
 6051      00
 6052              	.LASF128:
 6053 0f15 43617053 		.ascii	"CapSense_BIST_CSX_SNS_CAP_E\000"
 6053      656E7365 
 6053      5F424953 
 6053      545F4353 
 6053      585F534E 
 6054              	.LASF138:
 6055 0f31 77696467 		.ascii	"widgetId\000"
 6055      65744964 
 6055      00
 6056              	.LASF198:
 6057 0f3a 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 6057      656E7365 
 6057      5F726571 
 6057      75657374 
 6057      5363616E 
 6058              	.LASF174:
 6059 0f58 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 6059      656E7365 
 6059      5F537349 
 6059      6E697469 
 6059      616C697A 
 6060              	.LASF205:
 6061 0f7c 43617053 		.ascii	"CapSense_idacGainTable\000"
 6061      656E7365 
 6061      5F696461 
 6061      63476169 
 6061      6E546162 
ARM GAS  C:\Users\Asus\AppData\Local\Temp\ccuSpFIV.s 			page 180


 6062              	.LASF68:
 6063 0f93 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 6063      656E7365 
 6063      5F52414D 
 6063      5F534E53 
 6063      5F4C4953 
 6064              	.LASF121:
 6065 0fb0 77646774 		.ascii	"wdgtArray\000"
 6065      41727261 
 6065      7900
 6066              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
